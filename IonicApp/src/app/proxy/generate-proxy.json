{
  "generated": [
    "app"
  ],
  "modules": {
    "abp": {
      "rootPath": "abp",
      "remoteServiceName": "abp",
      "controllers": {
        "Pages.Abp.MultiTenancy.AbpTenantController": {
          "controllerName": "AbpTenant",
          "type": "Pages.Abp.MultiTenancy.AbpTenantController",
          "interfaces": [
            {
              "type": "Volo.Abp.AspNetCore.Mvc.MultiTenancy.IAbpTenantAppService"
            }
          ],
          "actions": {
            "FindTenantByNameAsyncByName": {
              "uniqueName": "FindTenantByNameAsyncByName",
              "name": "FindTenantByNameAsync",
              "httpMethod": "GET",
              "url": "api/abp/multi-tenancy/tenants/by-name/{name}",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "name",
                  "typeAsString": "System.String, System.Private.CoreLib",
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "name",
                  "name": "name",
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "Volo.Abp.AspNetCore.Mvc.MultiTenancy.FindTenantResultDto",
                "typeSimple": "Volo.Abp.AspNetCore.Mvc.MultiTenancy.FindTenantResultDto"
              }
            },
            "FindTenantByIdAsyncById": {
              "uniqueName": "FindTenantByIdAsyncById",
              "name": "FindTenantByIdAsync",
              "httpMethod": "GET",
              "url": "api/abp/multi-tenancy/tenants/by-id/{id}",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "id",
                  "typeAsString": "System.Guid, System.Private.CoreLib",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "id",
                  "name": "id",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "Volo.Abp.AspNetCore.Mvc.MultiTenancy.FindTenantResultDto",
                "typeSimple": "Volo.Abp.AspNetCore.Mvc.MultiTenancy.FindTenantResultDto"
              }
            }
          }
        },
        "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.AbpApplicationConfigurationController": {
          "controllerName": "AbpApplicationConfiguration",
          "type": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.AbpApplicationConfigurationController",
          "interfaces": [
            {
              "type": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.IAbpApplicationConfigurationAppService"
            }
          ],
          "actions": {
            "GetAsync": {
              "uniqueName": "GetAsync",
              "name": "GetAsync",
              "httpMethod": "GET",
              "url": "api/abp/application-configuration",
              "supportedVersions": [],
              "parametersOnMethod": [],
              "parameters": [],
              "returnValue": {
                "type": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ApplicationConfigurationDto",
                "typeSimple": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ApplicationConfigurationDto"
              }
            }
          }
        },
        "Volo.Abp.AspNetCore.Mvc.ApiExploring.AbpApiDefinitionController": {
          "controllerName": "AbpApiDefinition",
          "type": "Volo.Abp.AspNetCore.Mvc.ApiExploring.AbpApiDefinitionController",
          "interfaces": [],
          "actions": {
            "GetByModel": {
              "uniqueName": "GetByModel",
              "name": "Get",
              "httpMethod": "GET",
              "url": "api/abp/api-definition",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "model",
                  "typeAsString": "Volo.Abp.Http.Modeling.ApplicationApiDescriptionModelRequestDto, Volo.Abp.Http",
                  "type": "Volo.Abp.Http.Modeling.ApplicationApiDescriptionModelRequestDto",
                  "typeSimple": "Volo.Abp.Http.Modeling.ApplicationApiDescriptionModelRequestDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "model",
                  "name": "IncludeTypes",
                  "type": "System.Boolean",
                  "typeSimple": "boolean",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "model"
                }
              ],
              "returnValue": {
                "type": "Volo.Abp.Http.Modeling.ApplicationApiDescriptionModel",
                "typeSimple": "Volo.Abp.Http.Modeling.ApplicationApiDescriptionModel"
              }
            }
          }
        }
      }
    },
    "account": {
      "rootPath": "account",
      "remoteServiceName": "AbpAccount",
      "controllers": {
        "Volo.Abp.Account.Web.Areas.Account.Controllers.AccountController": {
          "controllerName": "Account",
          "type": "Volo.Abp.Account.Web.Areas.Account.Controllers.AccountController",
          "interfaces": [],
          "actions": {
            "LoginByLogin": {
              "uniqueName": "LoginByLogin",
              "name": "Login",
              "httpMethod": "POST",
              "url": "api/account/login",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "login",
                  "typeAsString": "Volo.Abp.Account.Web.Areas.Account.Controllers.Models.UserLoginInfo, Volo.Abp.Account.Web",
                  "type": "Volo.Abp.Account.Web.Areas.Account.Controllers.Models.UserLoginInfo",
                  "typeSimple": "Volo.Abp.Account.Web.Areas.Account.Controllers.Models.UserLoginInfo",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "login",
                  "name": "login",
                  "type": "Volo.Abp.Account.Web.Areas.Account.Controllers.Models.UserLoginInfo",
                  "typeSimple": "Volo.Abp.Account.Web.Areas.Account.Controllers.Models.UserLoginInfo",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Body",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "Volo.Abp.Account.Web.Areas.Account.Controllers.Models.AbpLoginResult",
                "typeSimple": "Volo.Abp.Account.Web.Areas.Account.Controllers.Models.AbpLoginResult"
              }
            },
            "Logout": {
              "uniqueName": "Logout",
              "name": "Logout",
              "httpMethod": "GET",
              "url": "api/account/logout",
              "supportedVersions": [],
              "parametersOnMethod": [],
              "parameters": [],
              "returnValue": {
                "type": "System.Void",
                "typeSimple": "System.Void"
              }
            },
            "CheckPasswordByLogin": {
              "uniqueName": "CheckPasswordByLogin",
              "name": "CheckPassword",
              "httpMethod": "POST",
              "url": "api/account/checkPassword",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "login",
                  "typeAsString": "Volo.Abp.Account.Web.Areas.Account.Controllers.Models.UserLoginInfo, Volo.Abp.Account.Web",
                  "type": "Volo.Abp.Account.Web.Areas.Account.Controllers.Models.UserLoginInfo",
                  "typeSimple": "Volo.Abp.Account.Web.Areas.Account.Controllers.Models.UserLoginInfo",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "login",
                  "name": "login",
                  "type": "Volo.Abp.Account.Web.Areas.Account.Controllers.Models.UserLoginInfo",
                  "typeSimple": "Volo.Abp.Account.Web.Areas.Account.Controllers.Models.UserLoginInfo",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Body",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "Volo.Abp.Account.Web.Areas.Account.Controllers.Models.AbpLoginResult",
                "typeSimple": "Volo.Abp.Account.Web.Areas.Account.Controllers.Models.AbpLoginResult"
              }
            }
          }
        },
        "Volo.Abp.Account.AccountController": {
          "controllerName": "Account",
          "type": "Volo.Abp.Account.AccountController",
          "interfaces": [
            {
              "type": "Volo.Abp.Account.IAccountAppService"
            }
          ],
          "actions": {
            "RegisterAsyncByInput": {
              "uniqueName": "RegisterAsyncByInput",
              "name": "RegisterAsync",
              "httpMethod": "POST",
              "url": "api/account/register",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "input",
                  "typeAsString": "Volo.Abp.Account.RegisterDto, Volo.Abp.Account.Application.Contracts",
                  "type": "Volo.Abp.Account.RegisterDto",
                  "typeSimple": "Volo.Abp.Account.RegisterDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "input",
                  "name": "input",
                  "type": "Volo.Abp.Account.RegisterDto",
                  "typeSimple": "Volo.Abp.Account.RegisterDto",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Body",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "Volo.Abp.Identity.IdentityUserDto",
                "typeSimple": "Volo.Abp.Identity.IdentityUserDto"
              }
            },
            "SendPasswordResetCodeAsyncByInput": {
              "uniqueName": "SendPasswordResetCodeAsyncByInput",
              "name": "SendPasswordResetCodeAsync",
              "httpMethod": "POST",
              "url": "api/account/send-password-reset-code",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "input",
                  "typeAsString": "Volo.Abp.Account.SendPasswordResetCodeDto, Volo.Abp.Account.Application.Contracts",
                  "type": "Volo.Abp.Account.SendPasswordResetCodeDto",
                  "typeSimple": "Volo.Abp.Account.SendPasswordResetCodeDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "input",
                  "name": "input",
                  "type": "Volo.Abp.Account.SendPasswordResetCodeDto",
                  "typeSimple": "Volo.Abp.Account.SendPasswordResetCodeDto",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Body",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "System.Void",
                "typeSimple": "System.Void"
              }
            },
            "ResetPasswordAsyncByInput": {
              "uniqueName": "ResetPasswordAsyncByInput",
              "name": "ResetPasswordAsync",
              "httpMethod": "POST",
              "url": "api/account/reset-password",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "input",
                  "typeAsString": "Volo.Abp.Account.ResetPasswordDto, Volo.Abp.Account.Application.Contracts",
                  "type": "Volo.Abp.Account.ResetPasswordDto",
                  "typeSimple": "Volo.Abp.Account.ResetPasswordDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "input",
                  "name": "input",
                  "type": "Volo.Abp.Account.ResetPasswordDto",
                  "typeSimple": "Volo.Abp.Account.ResetPasswordDto",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Body",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "System.Void",
                "typeSimple": "System.Void"
              }
            }
          }
        }
      }
    },
    "app": {
      "rootPath": "app",
      "remoteServiceName": "Default",
      "controllers": {
        "HDHDC.Speedwave.Controllers.CategoryController": {
          "controllerName": "Category",
          "type": "HDHDC.Speedwave.Controllers.CategoryController",
          "interfaces": [],
          "actions": {
            "GetAll": {
              "uniqueName": "GetAll",
              "name": "GetAll",
              "httpMethod": "GET",
              "url": "apiv1/Category",
              "supportedVersions": [],
              "parametersOnMethod": [],
              "parameters": [],
              "returnValue": {
                "type": "HDHDC.Speedwave.DTOs.CategoryDto[]",
                "typeSimple": "[HDHDC.Speedwave.DTOs.CategoryDto]"
              }
            },
            "GetById": {
              "uniqueName": "GetById",
              "name": "Get",
              "httpMethod": "GET",
              "url": "apiv1/Category/{id}",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "id",
                  "typeAsString": "System.Int32, System.Private.CoreLib",
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "id",
                  "name": "id",
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "HDHDC.Speedwave.DTOs.CategoryDto",
                "typeSimple": "HDHDC.Speedwave.DTOs.CategoryDto"
              }
            },
            "CreateByDto": {
              "uniqueName": "CreateByDto",
              "name": "Create",
              "httpMethod": "POST",
              "url": "apiv1/Category",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "dto",
                  "typeAsString": "HDHDC.Speedwave.DTOs.CategoryCreateDto, HDHDC.Speedwave.Application.Contracts",
                  "type": "HDHDC.Speedwave.DTOs.CategoryCreateDto",
                  "typeSimple": "HDHDC.Speedwave.DTOs.CategoryCreateDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "dto",
                  "name": "dto",
                  "type": "HDHDC.Speedwave.DTOs.CategoryCreateDto",
                  "typeSimple": "HDHDC.Speedwave.DTOs.CategoryCreateDto",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Body",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "HDHDC.Speedwave.DTOs.CategoryDto",
                "typeSimple": "HDHDC.Speedwave.DTOs.CategoryDto"
              }
            },
            "UpdateByIdAndDto": {
              "uniqueName": "UpdateByIdAndDto",
              "name": "Update",
              "httpMethod": "PUT",
              "url": "apiv1/Category/{id}",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "id",
                  "typeAsString": "System.Int32, System.Private.CoreLib",
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null
                },
                {
                  "name": "dto",
                  "typeAsString": "HDHDC.Speedwave.DTOs.CategoryUpdateDto, HDHDC.Speedwave.Application.Contracts",
                  "type": "HDHDC.Speedwave.DTOs.CategoryUpdateDto",
                  "typeSimple": "HDHDC.Speedwave.DTOs.CategoryUpdateDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "id",
                  "name": "id",
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                },
                {
                  "nameOnMethod": "dto",
                  "name": "dto",
                  "type": "HDHDC.Speedwave.DTOs.CategoryUpdateDto",
                  "typeSimple": "HDHDC.Speedwave.DTOs.CategoryUpdateDto",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Body",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "HDHDC.Speedwave.DTOs.CategoryDto",
                "typeSimple": "HDHDC.Speedwave.DTOs.CategoryDto"
              }
            },
            "DeleteById": {
              "uniqueName": "DeleteById",
              "name": "Delete",
              "httpMethod": "DELETE",
              "url": "apiv1/Category/{id}",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "id",
                  "typeAsString": "System.Int32, System.Private.CoreLib",
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "id",
                  "name": "id",
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "System.Void",
                "typeSimple": "System.Void"
              }
            },
            "GetThumbnailByThumbnail": {
              "uniqueName": "GetThumbnailByThumbnail",
              "name": "GetThumbnail",
              "httpMethod": "GET",
              "url": "apiv1/Category/thumbnail/{thumbnail}",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "thumbnail",
                  "typeAsString": "System.String, System.Private.CoreLib",
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "thumbnail",
                  "name": "thumbnail",
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "HDHDC.Speedwave.DTOs.ThumbnailDto",
                "typeSimple": "HDHDC.Speedwave.DTOs.ThumbnailDto"
              }
            }
          }
        },
        "HDHDC.Speedwave.Controllers.CityController": {
          "controllerName": "City",
          "type": "HDHDC.Speedwave.Controllers.CityController",
          "interfaces": [],
          "actions": {
            "SearchBySkipCountAndMaxResultCountAndCityIdAndKeywordAndDistrictId": {
              "uniqueName": "SearchBySkipCountAndMaxResultCountAndCityIdAndKeywordAndDistrictId",
              "name": "Search",
              "httpMethod": "GET",
              "url": "apiv1/City",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "skipCount",
                  "typeAsString": "System.Int32, System.Private.CoreLib",
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": true,
                  "defaultValue": 0
                },
                {
                  "name": "maxResultCount",
                  "typeAsString": "System.Int32, System.Private.CoreLib",
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": true,
                  "defaultValue": 10
                },
                {
                  "name": "cityId",
                  "typeAsString": "System.Int32, System.Private.CoreLib",
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": true,
                  "defaultValue": 0
                },
                {
                  "name": "keyword",
                  "typeAsString": "System.String, System.Private.CoreLib",
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": true,
                  "defaultValue": ""
                },
                {
                  "name": "districtId",
                  "typeAsString": "System.String, System.Private.CoreLib",
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": true,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "skipCount",
                  "name": "skipCount",
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Query",
                  "descriptorName": ""
                },
                {
                  "nameOnMethod": "maxResultCount",
                  "name": "maxResultCount",
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Query",
                  "descriptorName": ""
                },
                {
                  "nameOnMethod": "cityId",
                  "name": "cityId",
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Query",
                  "descriptorName": ""
                },
                {
                  "nameOnMethod": "keyword",
                  "name": "keyword",
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Query",
                  "descriptorName": ""
                },
                {
                  "nameOnMethod": "districtId",
                  "name": "districtId",
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Query",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "HDHDC.Speedwave.DTOs.CityDto[]",
                "typeSimple": "[HDHDC.Speedwave.DTOs.CityDto]"
              }
            },
            "GetById": {
              "uniqueName": "GetById",
              "name": "Get",
              "httpMethod": "GET",
              "url": "apiv1/City/{id}",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "id",
                  "typeAsString": "System.Int32, System.Private.CoreLib",
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "id",
                  "name": "id",
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "HDHDC.Speedwave.DTOs.CityDto",
                "typeSimple": "HDHDC.Speedwave.DTOs.CityDto"
              }
            },
            "CreateByDto": {
              "uniqueName": "CreateByDto",
              "name": "Create",
              "httpMethod": "POST",
              "url": "apiv1/City",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "dto",
                  "typeAsString": "HDHDC.Speedwave.DTOs.CityCreateDto, HDHDC.Speedwave.Application.Contracts",
                  "type": "HDHDC.Speedwave.DTOs.CityCreateDto",
                  "typeSimple": "HDHDC.Speedwave.DTOs.CityCreateDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "dto",
                  "name": "dto",
                  "type": "HDHDC.Speedwave.DTOs.CityCreateDto",
                  "typeSimple": "HDHDC.Speedwave.DTOs.CityCreateDto",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Body",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "HDHDC.Speedwave.DTOs.CityDto",
                "typeSimple": "HDHDC.Speedwave.DTOs.CityDto"
              }
            },
            "UpdateByIdAndDto": {
              "uniqueName": "UpdateByIdAndDto",
              "name": "Update",
              "httpMethod": "PUT",
              "url": "apiv1/City/{id}",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "id",
                  "typeAsString": "System.Int32, System.Private.CoreLib",
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null
                },
                {
                  "name": "dto",
                  "typeAsString": "HDHDC.Speedwave.DTOs.CityUpdateDto, HDHDC.Speedwave.Application.Contracts",
                  "type": "HDHDC.Speedwave.DTOs.CityUpdateDto",
                  "typeSimple": "HDHDC.Speedwave.DTOs.CityUpdateDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "id",
                  "name": "id",
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                },
                {
                  "nameOnMethod": "dto",
                  "name": "dto",
                  "type": "HDHDC.Speedwave.DTOs.CityUpdateDto",
                  "typeSimple": "HDHDC.Speedwave.DTOs.CityUpdateDto",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Body",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "HDHDC.Speedwave.DTOs.CityDto",
                "typeSimple": "HDHDC.Speedwave.DTOs.CityDto"
              }
            },
            "DeleteById": {
              "uniqueName": "DeleteById",
              "name": "Delete",
              "httpMethod": "DELETE",
              "url": "apiv1/City/{id}",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "id",
                  "typeAsString": "System.Int32, System.Private.CoreLib",
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "id",
                  "name": "id",
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "System.Void",
                "typeSimple": "System.Void"
              }
            }
          }
        },
        "HDHDC.Speedwave.Controllers.DeliveryScheduleController": {
          "controllerName": "DeliverySchedule",
          "type": "HDHDC.Speedwave.Controllers.DeliveryScheduleController",
          "interfaces": [],
          "actions": {
            "GetAll": {
              "uniqueName": "GetAll",
              "name": "GetAll",
              "httpMethod": "GET",
              "url": "apiv1/DeliverySchedule",
              "supportedVersions": [],
              "parametersOnMethod": [],
              "parameters": [],
              "returnValue": {
                "type": "HDHDC.Speedwave.DTOs.DeliveryScheduleDto[]",
                "typeSimple": "[HDHDC.Speedwave.DTOs.DeliveryScheduleDto]"
              }
            },
            "GetById": {
              "uniqueName": "GetById",
              "name": "Get",
              "httpMethod": "GET",
              "url": "apiv1/DeliverySchedule/{id}",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "id",
                  "typeAsString": "System.Int32, System.Private.CoreLib",
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "id",
                  "name": "id",
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "HDHDC.Speedwave.DTOs.DeliveryScheduleDto",
                "typeSimple": "HDHDC.Speedwave.DTOs.DeliveryScheduleDto"
              }
            },
            "GetCompatiblesByAddressIdAndItemIds": {
              "uniqueName": "GetCompatiblesByAddressIdAndItemIds",
              "name": "GetCompatibles",
              "httpMethod": "GET",
              "url": "apiv1/DeliverySchedule/compatibles",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "addressId",
                  "typeAsString": "System.Int32, System.Private.CoreLib",
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null
                },
                {
                  "name": "itemIds",
                  "typeAsString": "System.Int32[], System.Private.CoreLib",
                  "type": "System.Int32[]",
                  "typeSimple": "[number]",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "addressId",
                  "name": "addressId",
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Query",
                  "descriptorName": ""
                },
                {
                  "nameOnMethod": "itemIds",
                  "name": "itemIds",
                  "type": "System.Int32[]",
                  "typeSimple": "[number]",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Query",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "HDHDC.Speedwave.DTOs.DeliveryScheduleDto[]",
                "typeSimple": "[HDHDC.Speedwave.DTOs.DeliveryScheduleDto]"
              }
            },
            "CreateByDto": {
              "uniqueName": "CreateByDto",
              "name": "Create",
              "httpMethod": "POST",
              "url": "apiv1/DeliverySchedule",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "dto",
                  "typeAsString": "HDHDC.Speedwave.DTOs.DeliveryScheduleCreateUpdateDto, HDHDC.Speedwave.Application.Contracts",
                  "type": "HDHDC.Speedwave.DTOs.DeliveryScheduleCreateUpdateDto",
                  "typeSimple": "HDHDC.Speedwave.DTOs.DeliveryScheduleCreateUpdateDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "dto",
                  "name": "dto",
                  "type": "HDHDC.Speedwave.DTOs.DeliveryScheduleCreateUpdateDto",
                  "typeSimple": "HDHDC.Speedwave.DTOs.DeliveryScheduleCreateUpdateDto",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Body",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "HDHDC.Speedwave.DTOs.DeliveryScheduleDto",
                "typeSimple": "HDHDC.Speedwave.DTOs.DeliveryScheduleDto"
              }
            },
            "UpdateByIdAndDto": {
              "uniqueName": "UpdateByIdAndDto",
              "name": "Update",
              "httpMethod": "PUT",
              "url": "apiv1/DeliverySchedule/{id}",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "id",
                  "typeAsString": "System.Int32, System.Private.CoreLib",
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null
                },
                {
                  "name": "dto",
                  "typeAsString": "HDHDC.Speedwave.DTOs.DeliveryScheduleCreateUpdateDto, HDHDC.Speedwave.Application.Contracts",
                  "type": "HDHDC.Speedwave.DTOs.DeliveryScheduleCreateUpdateDto",
                  "typeSimple": "HDHDC.Speedwave.DTOs.DeliveryScheduleCreateUpdateDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "id",
                  "name": "id",
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                },
                {
                  "nameOnMethod": "dto",
                  "name": "dto",
                  "type": "HDHDC.Speedwave.DTOs.DeliveryScheduleCreateUpdateDto",
                  "typeSimple": "HDHDC.Speedwave.DTOs.DeliveryScheduleCreateUpdateDto",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Body",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "HDHDC.Speedwave.DTOs.DeliveryScheduleDto",
                "typeSimple": "HDHDC.Speedwave.DTOs.DeliveryScheduleDto"
              }
            },
            "DeleteById": {
              "uniqueName": "DeleteById",
              "name": "Delete",
              "httpMethod": "DELETE",
              "url": "apiv1/DeliverySchedule/{id}",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "id",
                  "typeAsString": "System.Int32, System.Private.CoreLib",
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "id",
                  "name": "id",
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "System.Void",
                "typeSimple": "System.Void"
              }
            }
          }
        },
        "HDHDC.Speedwave.Controllers.DistanceChargeController": {
          "controllerName": "DistanceCharge",
          "type": "HDHDC.Speedwave.Controllers.DistanceChargeController",
          "interfaces": [],
          "actions": {
            "GetAll": {
              "uniqueName": "GetAll",
              "name": "GetAll",
              "httpMethod": "GET",
              "url": "apiv1/DistanceCharge",
              "supportedVersions": [],
              "parametersOnMethod": [],
              "parameters": [],
              "returnValue": {
                "type": "HDHDC.Speedwave.DTOs.DistanceChargeDto[]",
                "typeSimple": "[HDHDC.Speedwave.DTOs.DistanceChargeDto]"
              }
            },
            "GetById": {
              "uniqueName": "GetById",
              "name": "Get",
              "httpMethod": "GET",
              "url": "apiv1/DistanceCharge/{id}",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "id",
                  "typeAsString": "System.Int32, System.Private.CoreLib",
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "id",
                  "name": "id",
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "HDHDC.Speedwave.DTOs.DistanceChargeDto",
                "typeSimple": "HDHDC.Speedwave.DTOs.DistanceChargeDto"
              }
            },
            "CreateByDto": {
              "uniqueName": "CreateByDto",
              "name": "Create",
              "httpMethod": "POST",
              "url": "apiv1/DistanceCharge",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "dto",
                  "typeAsString": "HDHDC.Speedwave.DTOs.DistanceChargeCreateUpdateDto, HDHDC.Speedwave.Application.Contracts",
                  "type": "HDHDC.Speedwave.DTOs.DistanceChargeCreateUpdateDto",
                  "typeSimple": "HDHDC.Speedwave.DTOs.DistanceChargeCreateUpdateDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "dto",
                  "name": "dto",
                  "type": "HDHDC.Speedwave.DTOs.DistanceChargeCreateUpdateDto",
                  "typeSimple": "HDHDC.Speedwave.DTOs.DistanceChargeCreateUpdateDto",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Body",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "HDHDC.Speedwave.DTOs.DistanceChargeDto",
                "typeSimple": "HDHDC.Speedwave.DTOs.DistanceChargeDto"
              }
            },
            "UpdateByIdAndDto": {
              "uniqueName": "UpdateByIdAndDto",
              "name": "Update",
              "httpMethod": "PUT",
              "url": "apiv1/DistanceCharge/{id}",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "id",
                  "typeAsString": "System.Int32, System.Private.CoreLib",
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null
                },
                {
                  "name": "dto",
                  "typeAsString": "HDHDC.Speedwave.DTOs.DistanceChargeCreateUpdateDto, HDHDC.Speedwave.Application.Contracts",
                  "type": "HDHDC.Speedwave.DTOs.DistanceChargeCreateUpdateDto",
                  "typeSimple": "HDHDC.Speedwave.DTOs.DistanceChargeCreateUpdateDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "id",
                  "name": "id",
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                },
                {
                  "nameOnMethod": "dto",
                  "name": "dto",
                  "type": "HDHDC.Speedwave.DTOs.DistanceChargeCreateUpdateDto",
                  "typeSimple": "HDHDC.Speedwave.DTOs.DistanceChargeCreateUpdateDto",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Body",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "HDHDC.Speedwave.DTOs.DistanceChargeDto",
                "typeSimple": "HDHDC.Speedwave.DTOs.DistanceChargeDto"
              }
            },
            "DeleteById": {
              "uniqueName": "DeleteById",
              "name": "Delete",
              "httpMethod": "DELETE",
              "url": "apiv1/DistanceCharge/{id}",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "id",
                  "typeAsString": "System.Int32, System.Private.CoreLib",
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "id",
                  "name": "id",
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "System.Void",
                "typeSimple": "System.Void"
              }
            }
          }
        },
        "HDHDC.Speedwave.Controllers.DistrictController": {
          "controllerName": "District",
          "type": "HDHDC.Speedwave.Controllers.DistrictController",
          "interfaces": [],
          "actions": {
            "GetAll": {
              "uniqueName": "GetAll",
              "name": "GetAll",
              "httpMethod": "GET",
              "url": "apiv1/District",
              "supportedVersions": [],
              "parametersOnMethod": [],
              "parameters": [],
              "returnValue": {
                "type": "HDHDC.Speedwave.DTOs.DistrictDto[]",
                "typeSimple": "[HDHDC.Speedwave.DTOs.DistrictDto]"
              }
            },
            "GetById": {
              "uniqueName": "GetById",
              "name": "Get",
              "httpMethod": "GET",
              "url": "apiv1/District/{id}",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "id",
                  "typeAsString": "System.String, System.Private.CoreLib",
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "id",
                  "name": "id",
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "HDHDC.Speedwave.DTOs.DistrictDto",
                "typeSimple": "HDHDC.Speedwave.DTOs.DistrictDto"
              }
            },
            "CreateByDto": {
              "uniqueName": "CreateByDto",
              "name": "Create",
              "httpMethod": "POST",
              "url": "apiv1/District",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "dto",
                  "typeAsString": "HDHDC.Speedwave.DTOs.DistrictCreateDto, HDHDC.Speedwave.Application.Contracts",
                  "type": "HDHDC.Speedwave.DTOs.DistrictCreateDto",
                  "typeSimple": "HDHDC.Speedwave.DTOs.DistrictCreateDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "dto",
                  "name": "dto",
                  "type": "HDHDC.Speedwave.DTOs.DistrictCreateDto",
                  "typeSimple": "HDHDC.Speedwave.DTOs.DistrictCreateDto",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Body",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "HDHDC.Speedwave.DTOs.DistrictDto",
                "typeSimple": "HDHDC.Speedwave.DTOs.DistrictDto"
              }
            },
            "DeleteById": {
              "uniqueName": "DeleteById",
              "name": "Delete",
              "httpMethod": "DELETE",
              "url": "apiv1/District/{id}",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "id",
                  "typeAsString": "System.String, System.Private.CoreLib",
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "id",
                  "name": "id",
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "System.Void",
                "typeSimple": "System.Void"
              }
            }
          }
        },
        "HDHDC.Speedwave.Controllers.ItemController": {
          "controllerName": "Item",
          "type": "HDHDC.Speedwave.Controllers.ItemController",
          "interfaces": [],
          "actions": {
            "GetById": {
              "uniqueName": "GetById",
              "name": "Get",
              "httpMethod": "GET",
              "url": "apiv1/Item/{id}",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "id",
                  "typeAsString": "System.Int32, System.Private.CoreLib",
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "id",
                  "name": "id",
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "HDHDC.Speedwave.DTOs.ItemDto",
                "typeSimple": "HDHDC.Speedwave.DTOs.ItemDto"
              }
            },
            "GetListByKeywordsAndSeedAndSkipCountAndMaxResultCountAndItemIdsArr": {
              "uniqueName": "GetListByKeywordsAndSeedAndSkipCountAndMaxResultCountAndItemIdsArr",
              "name": "GetList",
              "httpMethod": "GET",
              "url": "apiv1/Item",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "keywords",
                  "typeAsString": "System.String, System.Private.CoreLib",
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": true,
                  "defaultValue": null
                },
                {
                  "name": "seed",
                  "typeAsString": "System.Int32, System.Private.CoreLib",
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": true,
                  "defaultValue": 0
                },
                {
                  "name": "skipCount",
                  "typeAsString": "System.Int32, System.Private.CoreLib",
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": true,
                  "defaultValue": 0
                },
                {
                  "name": "maxResultCount",
                  "typeAsString": "System.Int32, System.Private.CoreLib",
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": true,
                  "defaultValue": 10
                },
                {
                  "name": "itemIdsArr",
                  "typeAsString": "System.Int32[], System.Private.CoreLib",
                  "type": "System.Int32[]",
                  "typeSimple": "[number]",
                  "isOptional": true,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "keywords",
                  "name": "keywords",
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": ""
                },
                {
                  "nameOnMethod": "seed",
                  "name": "seed",
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": ""
                },
                {
                  "nameOnMethod": "skipCount",
                  "name": "skipCount",
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": ""
                },
                {
                  "nameOnMethod": "maxResultCount",
                  "name": "maxResultCount",
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": ""
                },
                {
                  "nameOnMethod": "itemIdsArr",
                  "name": "itemIdsArr",
                  "type": "System.Int32[]",
                  "typeSimple": "[number]",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "HDHDC.Speedwave.DTOs.ItemDto[]",
                "typeSimple": "[HDHDC.Speedwave.DTOs.ItemDto]"
              }
            },
            "CreateByDto": {
              "uniqueName": "CreateByDto",
              "name": "Create",
              "httpMethod": "POST",
              "url": "apiv1/Item",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "dto",
                  "typeAsString": "HDHDC.Speedwave.DTOs.ItemCreateDto, HDHDC.Speedwave.Application.Contracts",
                  "type": "HDHDC.Speedwave.DTOs.ItemCreateDto",
                  "typeSimple": "HDHDC.Speedwave.DTOs.ItemCreateDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "dto",
                  "name": "dto",
                  "type": "HDHDC.Speedwave.DTOs.ItemCreateDto",
                  "typeSimple": "HDHDC.Speedwave.DTOs.ItemCreateDto",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Body",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "HDHDC.Speedwave.DTOs.ItemDto",
                "typeSimple": "HDHDC.Speedwave.DTOs.ItemDto"
              }
            },
            "UpdateByIdAndDto": {
              "uniqueName": "UpdateByIdAndDto",
              "name": "Update",
              "httpMethod": "PUT",
              "url": "apiv1/Item/{id}",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "id",
                  "typeAsString": "System.Int32, System.Private.CoreLib",
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null
                },
                {
                  "name": "dto",
                  "typeAsString": "HDHDC.Speedwave.DTOs.ItemUpdateDto, HDHDC.Speedwave.Application.Contracts",
                  "type": "HDHDC.Speedwave.DTOs.ItemUpdateDto",
                  "typeSimple": "HDHDC.Speedwave.DTOs.ItemUpdateDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "id",
                  "name": "id",
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                },
                {
                  "nameOnMethod": "dto",
                  "name": "dto",
                  "type": "HDHDC.Speedwave.DTOs.ItemUpdateDto",
                  "typeSimple": "HDHDC.Speedwave.DTOs.ItemUpdateDto",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Body",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "HDHDC.Speedwave.DTOs.ItemDto",
                "typeSimple": "HDHDC.Speedwave.DTOs.ItemDto"
              }
            },
            "DeleteById": {
              "uniqueName": "DeleteById",
              "name": "Delete",
              "httpMethod": "DELETE",
              "url": "apiv1/Item/{id}",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "id",
                  "typeAsString": "System.Int32, System.Private.CoreLib",
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "id",
                  "name": "id",
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "System.Void",
                "typeSimple": "System.Void"
              }
            },
            "CreateItemCategoryByDto": {
              "uniqueName": "CreateItemCategoryByDto",
              "name": "CreateItemCategory",
              "httpMethod": "POST",
              "url": "apiv1/Item/category",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "dto",
                  "typeAsString": "HDHDC.Speedwave.DTOs.ItemCategoryDto, HDHDC.Speedwave.Application.Contracts",
                  "type": "HDHDC.Speedwave.DTOs.ItemCategoryDto",
                  "typeSimple": "HDHDC.Speedwave.DTOs.ItemCategoryDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "dto",
                  "name": "dto",
                  "type": "HDHDC.Speedwave.DTOs.ItemCategoryDto",
                  "typeSimple": "HDHDC.Speedwave.DTOs.ItemCategoryDto",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Body",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "HDHDC.Speedwave.DTOs.ItemCategoryDto",
                "typeSimple": "HDHDC.Speedwave.DTOs.ItemCategoryDto"
              }
            },
            "DeleteItemCategoryByKey": {
              "uniqueName": "DeleteItemCategoryByKey",
              "name": "DeleteItemCategory",
              "httpMethod": "DELETE",
              "url": "apiv1/Item/category",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "key",
                  "typeAsString": "HDHDC.Speedwave.SpeedwaveAppServices.ItemCategoryKey, HDHDC.Speedwave.Application.Contracts",
                  "type": "HDHDC.Speedwave.SpeedwaveAppServices.ItemCategoryKey",
                  "typeSimple": "HDHDC.Speedwave.SpeedwaveAppServices.ItemCategoryKey",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "key",
                  "name": "key",
                  "type": "HDHDC.Speedwave.SpeedwaveAppServices.ItemCategoryKey",
                  "typeSimple": "HDHDC.Speedwave.SpeedwaveAppServices.ItemCategoryKey",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Body",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "System.Void",
                "typeSimple": "System.Void"
              }
            },
            "SearchAsyncByKeywordsAndSkipCountAndMaxResultCount": {
              "uniqueName": "SearchAsyncByKeywordsAndSkipCountAndMaxResultCount",
              "name": "SearchAsync",
              "httpMethod": "GET",
              "url": "apiv1/Item/search",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "keywords",
                  "typeAsString": "System.String, System.Private.CoreLib",
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": true,
                  "defaultValue": ""
                },
                {
                  "name": "skipCount",
                  "typeAsString": "System.Int32, System.Private.CoreLib",
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": true,
                  "defaultValue": 0
                },
                {
                  "name": "maxResultCount",
                  "typeAsString": "System.Int32, System.Private.CoreLib",
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": true,
                  "defaultValue": 10
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "keywords",
                  "name": "keywords",
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Query",
                  "descriptorName": ""
                },
                {
                  "nameOnMethod": "skipCount",
                  "name": "skipCount",
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Query",
                  "descriptorName": ""
                },
                {
                  "nameOnMethod": "maxResultCount",
                  "name": "maxResultCount",
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Query",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "HDHDC.Speedwave.DTOs.ItemDto[]",
                "typeSimple": "[HDHDC.Speedwave.DTOs.ItemDto]"
              }
            },
            "GetThumbnailByItempic": {
              "uniqueName": "GetThumbnailByItempic",
              "name": "GetThumbnail",
              "httpMethod": "GET",
              "url": "apiv1/Item/itempic/{itempic}",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "itempic",
                  "typeAsString": "System.String, System.Private.CoreLib",
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "itempic",
                  "name": "itempic",
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "HDHDC.Speedwave.DTOs.ThumbnailDto",
                "typeSimple": "HDHDC.Speedwave.DTOs.ThumbnailDto"
              }
            },
            "GetAllItemCategoryById": {
              "uniqueName": "GetAllItemCategoryById",
              "name": "GetAllItemCategory",
              "httpMethod": "GET",
              "url": "apiv1/Item/{id}/itemcategory",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "id",
                  "typeAsString": "System.Int32, System.Private.CoreLib",
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "id",
                  "name": "id",
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "HDHDC.Speedwave.DTOs.ItemCategoryDto[]",
                "typeSimple": "[HDHDC.Speedwave.DTOs.ItemCategoryDto]"
              }
            },
            "UpdateItemCategoryByIdAndDtosArr": {
              "uniqueName": "UpdateItemCategoryByIdAndDtosArr",
              "name": "UpdateItemCategory",
              "httpMethod": "PUT",
              "url": "apiv1/Item/{id}/itemcategory",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "id",
                  "typeAsString": "System.Int32, System.Private.CoreLib",
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null
                },
                {
                  "name": "dtosArr",
                  "typeAsString": "HDHDC.Speedwave.DTOs.ItemCategoryDto[], HDHDC.Speedwave.Application.Contracts",
                  "type": "HDHDC.Speedwave.DTOs.ItemCategoryDto[]",
                  "typeSimple": "[HDHDC.Speedwave.DTOs.ItemCategoryDto]",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "id",
                  "name": "id",
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                },
                {
                  "nameOnMethod": "dtosArr",
                  "name": "dtosArr",
                  "type": "HDHDC.Speedwave.DTOs.ItemCategoryDto[]",
                  "typeSimple": "[HDHDC.Speedwave.DTOs.ItemCategoryDto]",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Body",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "System.Void",
                "typeSimple": "System.Void"
              }
            },
            "GetAllItemPicById": {
              "uniqueName": "GetAllItemPicById",
              "name": "GetAllItemPic",
              "httpMethod": "GET",
              "url": "apiv1/Item/{id}/itempic",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "id",
                  "typeAsString": "System.Int32, System.Private.CoreLib",
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "id",
                  "name": "id",
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "HDHDC.Speedwave.DTOs.BlobFileDto[]",
                "typeSimple": "[HDHDC.Speedwave.DTOs.BlobFileDto]"
              }
            },
            "AddItemPicByIdAndDto": {
              "uniqueName": "AddItemPicByIdAndDto",
              "name": "AddItemPic",
              "httpMethod": "POST",
              "url": "apiv1/Item/{id}/itempic",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "id",
                  "typeAsString": "System.Int32, System.Private.CoreLib",
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null
                },
                {
                  "name": "dto",
                  "typeAsString": "HDHDC.Speedwave.DTOs.BlobFileDto, HDHDC.Speedwave.Application.Contracts",
                  "type": "HDHDC.Speedwave.DTOs.BlobFileDto",
                  "typeSimple": "HDHDC.Speedwave.DTOs.BlobFileDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "id",
                  "name": "id",
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                },
                {
                  "nameOnMethod": "dto",
                  "name": "dto",
                  "type": "HDHDC.Speedwave.DTOs.BlobFileDto",
                  "typeSimple": "HDHDC.Speedwave.DTOs.BlobFileDto",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Body",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "HDHDC.Speedwave.DTOs.BlobFileDto",
                "typeSimple": "HDHDC.Speedwave.DTOs.BlobFileDto"
              }
            },
            "DeleteItemPicByIdAndFilename": {
              "uniqueName": "DeleteItemPicByIdAndFilename",
              "name": "DeleteItemPic",
              "httpMethod": "DELETE",
              "url": "apiv1/Item/{id}/itempic/{filename}",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "id",
                  "typeAsString": "System.Int32, System.Private.CoreLib",
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null
                },
                {
                  "name": "filename",
                  "typeAsString": "System.String, System.Private.CoreLib",
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "id",
                  "name": "id",
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                },
                {
                  "nameOnMethod": "filename",
                  "name": "filename",
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "System.Void",
                "typeSimple": "System.Void"
              }
            }
          }
        },
        "HDHDC.Speedwave.Controllers.ManagerController": {
          "controllerName": "Manager",
          "type": "HDHDC.Speedwave.Controllers.ManagerController",
          "interfaces": [],
          "actions": {
            "GetAllByDistrictId": {
              "uniqueName": "GetAllByDistrictId",
              "name": "GetAll",
              "httpMethod": "GET",
              "url": "apiv1/Manager",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "districtId",
                  "typeAsString": "System.String, System.Private.CoreLib",
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": true,
                  "defaultValue": ""
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "districtId",
                  "name": "districtId",
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Query",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "HDHDC.Speedwave.DTOs.ManagerDto[]",
                "typeSimple": "[HDHDC.Speedwave.DTOs.ManagerDto]"
              }
            },
            "GetByUserId": {
              "uniqueName": "GetByUserId",
              "name": "Get",
              "httpMethod": "GET",
              "url": "user/{userId}",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "userId",
                  "typeAsString": "System.Guid, System.Private.CoreLib",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "userId",
                  "name": "userId",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "HDHDC.Speedwave.DTOs.ManagerDto",
                "typeSimple": "HDHDC.Speedwave.DTOs.ManagerDto"
              }
            },
            "GetById": {
              "uniqueName": "GetById",
              "name": "Get",
              "httpMethod": "GET",
              "url": "apiv1/Manager/{id}",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "id",
                  "typeAsString": "System.Int32, System.Private.CoreLib",
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "id",
                  "name": "id",
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "HDHDC.Speedwave.DTOs.ManagerDto",
                "typeSimple": "HDHDC.Speedwave.DTOs.ManagerDto"
              }
            },
            "CreateByDto": {
              "uniqueName": "CreateByDto",
              "name": "Create",
              "httpMethod": "POST",
              "url": "apiv1/Manager",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "dto",
                  "typeAsString": "HDHDC.Speedwave.DTOs.ManagerCreateDto, HDHDC.Speedwave.Application.Contracts",
                  "type": "HDHDC.Speedwave.DTOs.ManagerCreateDto",
                  "typeSimple": "HDHDC.Speedwave.DTOs.ManagerCreateDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "dto",
                  "name": "dto",
                  "type": "HDHDC.Speedwave.DTOs.ManagerCreateDto",
                  "typeSimple": "HDHDC.Speedwave.DTOs.ManagerCreateDto",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Body",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "HDHDC.Speedwave.DTOs.AppUserDto",
                "typeSimple": "HDHDC.Speedwave.DTOs.AppUserDto"
              }
            },
            "UpdateByIdAndDto": {
              "uniqueName": "UpdateByIdAndDto",
              "name": "Update",
              "httpMethod": "PUT",
              "url": "apiv1/Manager/{id}",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "id",
                  "typeAsString": "System.Int32, System.Private.CoreLib",
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null
                },
                {
                  "name": "dto",
                  "typeAsString": "HDHDC.Speedwave.DTOs.ManagerUpdateDto, HDHDC.Speedwave.Application.Contracts",
                  "type": "HDHDC.Speedwave.DTOs.ManagerUpdateDto",
                  "typeSimple": "HDHDC.Speedwave.DTOs.ManagerUpdateDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "id",
                  "name": "id",
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                },
                {
                  "nameOnMethod": "dto",
                  "name": "dto",
                  "type": "HDHDC.Speedwave.DTOs.ManagerUpdateDto",
                  "typeSimple": "HDHDC.Speedwave.DTOs.ManagerUpdateDto",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Body",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "HDHDC.Speedwave.DTOs.ManagerDto",
                "typeSimple": "HDHDC.Speedwave.DTOs.ManagerDto"
              }
            },
            "UpdateStatusByIdAndStatusId": {
              "uniqueName": "UpdateStatusByIdAndStatusId",
              "name": "UpdateStatus",
              "httpMethod": "PUT",
              "url": "apiv1/Manager/{id}/status",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "id",
                  "typeAsString": "System.Int32, System.Private.CoreLib",
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null
                },
                {
                  "name": "statusId",
                  "typeAsString": "System.String, System.Private.CoreLib",
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "id",
                  "name": "id",
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                },
                {
                  "nameOnMethod": "statusId",
                  "name": "statusId",
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Query",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "HDHDC.Speedwave.DTOs.ManagerDto",
                "typeSimple": "HDHDC.Speedwave.DTOs.ManagerDto"
              }
            }
          }
        },
        "HDHDC.Speedwave.Controllers.MinRequiredTimeController": {
          "controllerName": "MinRequiredTime",
          "type": "HDHDC.Speedwave.Controllers.MinRequiredTimeController",
          "interfaces": [],
          "actions": {
            "GetList": {
              "uniqueName": "GetList",
              "name": "GetList",
              "httpMethod": "GET",
              "url": "apiv1/MinRequiredTime",
              "supportedVersions": [],
              "parametersOnMethod": [],
              "parameters": [],
              "returnValue": {
                "type": "HDHDC.Speedwave.DTOs.MinRequiredTimeDto[]",
                "typeSimple": "[HDHDC.Speedwave.DTOs.MinRequiredTimeDto]"
              }
            },
            "GetById": {
              "uniqueName": "GetById",
              "name": "Get",
              "httpMethod": "GET",
              "url": "apiv1/MinRequiredTime/{id}",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "id",
                  "typeAsString": "System.Int32, System.Private.CoreLib",
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "id",
                  "name": "id",
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "HDHDC.Speedwave.DTOs.MinRequiredTimeDto",
                "typeSimple": "HDHDC.Speedwave.DTOs.MinRequiredTimeDto"
              }
            },
            "CreateByDto": {
              "uniqueName": "CreateByDto",
              "name": "Create",
              "httpMethod": "POST",
              "url": "apiv1/MinRequiredTime",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "dto",
                  "typeAsString": "HDHDC.Speedwave.DTOs.MinRequiredTimeDto, HDHDC.Speedwave.Application.Contracts",
                  "type": "HDHDC.Speedwave.DTOs.MinRequiredTimeDto",
                  "typeSimple": "HDHDC.Speedwave.DTOs.MinRequiredTimeDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "dto",
                  "name": "dto",
                  "type": "HDHDC.Speedwave.DTOs.MinRequiredTimeDto",
                  "typeSimple": "HDHDC.Speedwave.DTOs.MinRequiredTimeDto",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Body",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "HDHDC.Speedwave.DTOs.MinRequiredTimeDto",
                "typeSimple": "HDHDC.Speedwave.DTOs.MinRequiredTimeDto"
              }
            },
            "UpdateByIdAndDto": {
              "uniqueName": "UpdateByIdAndDto",
              "name": "Update",
              "httpMethod": "PUT",
              "url": "apiv1/MinRequiredTime/{id}",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "id",
                  "typeAsString": "System.Int32, System.Private.CoreLib",
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null
                },
                {
                  "name": "dto",
                  "typeAsString": "HDHDC.Speedwave.DTOs.MinRequiredTimeDto, HDHDC.Speedwave.Application.Contracts",
                  "type": "HDHDC.Speedwave.DTOs.MinRequiredTimeDto",
                  "typeSimple": "HDHDC.Speedwave.DTOs.MinRequiredTimeDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "id",
                  "name": "id",
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                },
                {
                  "nameOnMethod": "dto",
                  "name": "dto",
                  "type": "HDHDC.Speedwave.DTOs.MinRequiredTimeDto",
                  "typeSimple": "HDHDC.Speedwave.DTOs.MinRequiredTimeDto",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Body",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "HDHDC.Speedwave.DTOs.MinRequiredTimeDto",
                "typeSimple": "HDHDC.Speedwave.DTOs.MinRequiredTimeDto"
              }
            },
            "DeleteById": {
              "uniqueName": "DeleteById",
              "name": "Delete",
              "httpMethod": "DELETE",
              "url": "apiv1/MinRequiredTime/{id}",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "id",
                  "typeAsString": "System.Int32, System.Private.CoreLib",
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "id",
                  "name": "id",
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "System.Void",
                "typeSimple": "System.Void"
              }
            }
          }
        },
        "HDHDC.Speedwave.Controllers.OrderController": {
          "controllerName": "Order",
          "type": "HDHDC.Speedwave.Controllers.OrderController",
          "interfaces": [],
          "actions": {
            "GetById": {
              "uniqueName": "GetById",
              "name": "Get",
              "httpMethod": "GET",
              "url": "apiv1/Order/{id}",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "id",
                  "typeAsString": "System.Int32, System.Private.CoreLib",
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "id",
                  "name": "id",
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "HDHDC.Speedwave.DTOs.OrderDto",
                "typeSimple": "HDHDC.Speedwave.DTOs.OrderDto"
              }
            },
            "RemoveById": {
              "uniqueName": "RemoveById",
              "name": "Remove",
              "httpMethod": "DELETE",
              "url": "apiv1/Order/{id}",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "id",
                  "typeAsString": "System.Int32, System.Private.CoreLib",
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "id",
                  "name": "id",
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "System.Void",
                "typeSimple": "System.Void"
              }
            },
            "CalculateDeliveryChargeByAddressIdAndDeliveryScheduleIdAndItemsArr": {
              "uniqueName": "CalculateDeliveryChargeByAddressIdAndDeliveryScheduleIdAndItemsArr",
              "name": "CalculateDeliveryCharge",
              "httpMethod": "POST",
              "url": "apiv1/Order/deliverycharge",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "addressId",
                  "typeAsString": "System.Int32, System.Private.CoreLib",
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null
                },
                {
                  "name": "deliveryScheduleId",
                  "typeAsString": "System.Int32, System.Private.CoreLib",
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null
                },
                {
                  "name": "itemsArr",
                  "typeAsString": "HDHDC.Speedwave.DTOs.CartItemDto[], HDHDC.Speedwave.Application.Contracts",
                  "type": "HDHDC.Speedwave.DTOs.CartItemDto[]",
                  "typeSimple": "[HDHDC.Speedwave.DTOs.CartItemDto]",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "addressId",
                  "name": "addressId",
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Query",
                  "descriptorName": ""
                },
                {
                  "nameOnMethod": "deliveryScheduleId",
                  "name": "deliveryScheduleId",
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Query",
                  "descriptorName": ""
                },
                {
                  "nameOnMethod": "itemsArr",
                  "name": "itemsArr",
                  "type": "HDHDC.Speedwave.DTOs.CartItemDto[]",
                  "typeSimple": "[HDHDC.Speedwave.DTOs.CartItemDto]",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Body",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "HDHDC.Speedwave.DTOs.DeliveryChargeDto",
                "typeSimple": "HDHDC.Speedwave.DTOs.DeliveryChargeDto"
              }
            },
            "CreateByOrderCreateDto": {
              "uniqueName": "CreateByOrderCreateDto",
              "name": "Create",
              "httpMethod": "POST",
              "url": "apiv1/Order",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "orderCreateDto",
                  "typeAsString": "HDHDC.Speedwave.DTOs.OrderCreateDto, HDHDC.Speedwave.Application.Contracts",
                  "type": "HDHDC.Speedwave.DTOs.OrderCreateDto",
                  "typeSimple": "HDHDC.Speedwave.DTOs.OrderCreateDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "orderCreateDto",
                  "name": "orderCreateDto",
                  "type": "HDHDC.Speedwave.DTOs.OrderCreateDto",
                  "typeSimple": "HDHDC.Speedwave.DTOs.OrderCreateDto",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Body",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "HDHDC.Speedwave.DTOs.OrderDto",
                "typeSimple": "HDHDC.Speedwave.DTOs.OrderDto"
              }
            },
            "GetOrdersByTypeAndCityIdAndSkipCountAndMaxResultCount": {
              "uniqueName": "GetOrdersByTypeAndCityIdAndSkipCountAndMaxResultCount",
              "name": "GetOrders",
              "httpMethod": "GET",
              "url": "apiv1/Order",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "type",
                  "typeAsString": "System.String, System.Private.CoreLib",
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": true,
                  "defaultValue": "history"
                },
                {
                  "name": "cityId",
                  "typeAsString": "System.Int32, System.Private.CoreLib",
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": true,
                  "defaultValue": 0
                },
                {
                  "name": "skipCount",
                  "typeAsString": "System.Int32, System.Private.CoreLib",
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": true,
                  "defaultValue": 0
                },
                {
                  "name": "maxResultCount",
                  "typeAsString": "System.Int32, System.Private.CoreLib",
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": true,
                  "defaultValue": 10
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "type",
                  "name": "type",
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Query",
                  "descriptorName": ""
                },
                {
                  "nameOnMethod": "cityId",
                  "name": "cityId",
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Query",
                  "descriptorName": ""
                },
                {
                  "nameOnMethod": "skipCount",
                  "name": "skipCount",
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Query",
                  "descriptorName": ""
                },
                {
                  "nameOnMethod": "maxResultCount",
                  "name": "maxResultCount",
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Query",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "HDHDC.Speedwave.DTOs.OrderDto[]",
                "typeSimple": "[HDHDC.Speedwave.DTOs.OrderDto]"
              }
            },
            "SelectOrderById": {
              "uniqueName": "SelectOrderById",
              "name": "SelectOrder",
              "httpMethod": "POST",
              "url": "apiv1/Order/selected",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "id",
                  "typeAsString": "System.Int32, System.Private.CoreLib",
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "id",
                  "name": "id",
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Query",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "System.Void",
                "typeSimple": "System.Void"
              }
            },
            "DeselectById": {
              "uniqueName": "DeselectById",
              "name": "Deselect",
              "httpMethod": "DELETE",
              "url": "apiv1/Order/selected/{id}",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "id",
                  "typeAsString": "System.Int32, System.Private.CoreLib",
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "id",
                  "name": "id",
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Query",
                  "descriptorName": ""
                },
                {
                  "nameOnMethod": "id",
                  "name": "id",
                  "type": null,
                  "typeSimple": null,
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "System.Void",
                "typeSimple": "System.Void"
              }
            },
            "MarkAsDeliveredByIdAndDtoArr": {
              "uniqueName": "MarkAsDeliveredByIdAndDtoArr",
              "name": "MarkAsDelivered",
              "httpMethod": "POST",
              "url": "apiv1/Order/delivered",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "id",
                  "typeAsString": "System.Int32, System.Private.CoreLib",
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null
                },
                {
                  "name": "dtoArr",
                  "typeAsString": "HDHDC.Speedwave.DTOs.PaymentDetailDto[], HDHDC.Speedwave.Application.Contracts",
                  "type": "HDHDC.Speedwave.DTOs.PaymentDetailDto[]",
                  "typeSimple": "[HDHDC.Speedwave.DTOs.PaymentDetailDto]",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "id",
                  "name": "id",
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Query",
                  "descriptorName": ""
                },
                {
                  "nameOnMethod": "dtoArr",
                  "name": "dtoArr",
                  "type": "HDHDC.Speedwave.DTOs.PaymentDetailDto[]",
                  "typeSimple": "[HDHDC.Speedwave.DTOs.PaymentDetailDto]",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Body",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "System.Void",
                "typeSimple": "System.Void"
              }
            },
            "GetAllCR": {
              "uniqueName": "GetAllCR",
              "name": "GetAllCR",
              "httpMethod": "GET",
              "url": "apiv1/Order/cancellationreasons",
              "supportedVersions": [],
              "parametersOnMethod": [],
              "parameters": [],
              "returnValue": {
                "type": "HDHDC.Speedwave.DTOs.CancellationReasonDto[]",
                "typeSimple": "[HDHDC.Speedwave.DTOs.CancellationReasonDto]"
              }
            },
            "SendCancellationRequestByDto": {
              "uniqueName": "SendCancellationRequestByDto",
              "name": "SendCancellationRequest",
              "httpMethod": "POST",
              "url": "apiv1/Order/cancellationrequest",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "dto",
                  "typeAsString": "HDHDC.Speedwave.DTOs.CancelledOrderDto, HDHDC.Speedwave.Application.Contracts",
                  "type": "HDHDC.Speedwave.DTOs.CancelledOrderDto",
                  "typeSimple": "HDHDC.Speedwave.DTOs.CancelledOrderDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "dto",
                  "name": "dto",
                  "type": "HDHDC.Speedwave.DTOs.CancelledOrderDto",
                  "typeSimple": "HDHDC.Speedwave.DTOs.CancelledOrderDto",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Body",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "HDHDC.Speedwave.DTOs.CancelledOrderDto",
                "typeSimple": "HDHDC.Speedwave.DTOs.CancelledOrderDto"
              }
            },
            "RollbackCancellationRequestById": {
              "uniqueName": "RollbackCancellationRequestById",
              "name": "RollbackCancellationRequest",
              "httpMethod": "DELETE",
              "url": "apiv1/Order/cancellationrequest/{id}",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "id",
                  "typeAsString": "System.Int32, System.Private.CoreLib",
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "id",
                  "name": "id",
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "HDHDC.Speedwave.DTOs.OrderDto",
                "typeSimple": "HDHDC.Speedwave.DTOs.OrderDto"
              }
            }
          }
        },
        "HDHDC.Speedwave.Controllers.PromotionController": {
          "controllerName": "Promotion",
          "type": "HDHDC.Speedwave.Controllers.PromotionController",
          "interfaces": [],
          "actions": {
            "GetAll": {
              "uniqueName": "GetAll",
              "name": "GetAll",
              "httpMethod": "GET",
              "url": "apiv1/Promotion",
              "supportedVersions": [],
              "parametersOnMethod": [],
              "parameters": [],
              "returnValue": {
                "type": "HDHDC.Speedwave.DTOs.PromotionDto[]",
                "typeSimple": "[HDHDC.Speedwave.DTOs.PromotionDto]"
              }
            },
            "GetById": {
              "uniqueName": "GetById",
              "name": "Get",
              "httpMethod": "GET",
              "url": "apiv1/Promotion/{id}",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "id",
                  "typeAsString": "System.Int32, System.Private.CoreLib",
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "id",
                  "name": "id",
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "HDHDC.Speedwave.DTOs.PromotionDto",
                "typeSimple": "HDHDC.Speedwave.DTOs.PromotionDto"
              }
            },
            "CreateByDto": {
              "uniqueName": "CreateByDto",
              "name": "Create",
              "httpMethod": "POST",
              "url": "apiv1/Promotion",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "dto",
                  "typeAsString": "HDHDC.Speedwave.DTOs.PromotionCreateDto, HDHDC.Speedwave.Application.Contracts",
                  "type": "HDHDC.Speedwave.DTOs.PromotionCreateDto",
                  "typeSimple": "HDHDC.Speedwave.DTOs.PromotionCreateDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "dto",
                  "name": "dto",
                  "type": "HDHDC.Speedwave.DTOs.PromotionCreateDto",
                  "typeSimple": "HDHDC.Speedwave.DTOs.PromotionCreateDto",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Body",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "HDHDC.Speedwave.DTOs.PromotionDto",
                "typeSimple": "HDHDC.Speedwave.DTOs.PromotionDto"
              }
            },
            "UpdateByIdAndDto": {
              "uniqueName": "UpdateByIdAndDto",
              "name": "Update",
              "httpMethod": "PUT",
              "url": "apiv1/Promotion/{id}",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "id",
                  "typeAsString": "System.Int32, System.Private.CoreLib",
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null
                },
                {
                  "name": "dto",
                  "typeAsString": "HDHDC.Speedwave.DTOs.PromotionUpdateDto, HDHDC.Speedwave.Application.Contracts",
                  "type": "HDHDC.Speedwave.DTOs.PromotionUpdateDto",
                  "typeSimple": "HDHDC.Speedwave.DTOs.PromotionUpdateDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "id",
                  "name": "id",
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                },
                {
                  "nameOnMethod": "dto",
                  "name": "dto",
                  "type": "HDHDC.Speedwave.DTOs.PromotionUpdateDto",
                  "typeSimple": "HDHDC.Speedwave.DTOs.PromotionUpdateDto",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Body",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "HDHDC.Speedwave.DTOs.PromotionDto",
                "typeSimple": "HDHDC.Speedwave.DTOs.PromotionDto"
              }
            },
            "DeleteById": {
              "uniqueName": "DeleteById",
              "name": "Delete",
              "httpMethod": "DELETE",
              "url": "apiv1/Promotion/{id}",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "id",
                  "typeAsString": "System.Int32, System.Private.CoreLib",
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "id",
                  "name": "id",
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "System.Void",
                "typeSimple": "System.Void"
              }
            }
          }
        },
        "HDHDC.Speedwave.Controllers.ProvinceController": {
          "controllerName": "Province",
          "type": "HDHDC.Speedwave.Controllers.ProvinceController",
          "interfaces": [],
          "actions": {
            "GetAll": {
              "uniqueName": "GetAll",
              "name": "GetAll",
              "httpMethod": "GET",
              "url": "apiv1/Province",
              "supportedVersions": [],
              "parametersOnMethod": [],
              "parameters": [],
              "returnValue": {
                "type": "HDHDC.Speedwave.DTOs.ProvinceDto[]",
                "typeSimple": "[HDHDC.Speedwave.DTOs.ProvinceDto]"
              }
            },
            "GetById": {
              "uniqueName": "GetById",
              "name": "Get",
              "httpMethod": "GET",
              "url": "apiv1/Province/{id}",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "id",
                  "typeAsString": "System.String, System.Private.CoreLib",
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "id",
                  "name": "id",
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "HDHDC.Speedwave.DTOs.ProvinceDto",
                "typeSimple": "HDHDC.Speedwave.DTOs.ProvinceDto"
              }
            },
            "CreateByDto": {
              "uniqueName": "CreateByDto",
              "name": "Create",
              "httpMethod": "POST",
              "url": "apiv1/Province",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "dto",
                  "typeAsString": "HDHDC.Speedwave.DTOs.ProvinceDto, HDHDC.Speedwave.Application.Contracts",
                  "type": "HDHDC.Speedwave.DTOs.ProvinceDto",
                  "typeSimple": "HDHDC.Speedwave.DTOs.ProvinceDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "dto",
                  "name": "dto",
                  "type": "HDHDC.Speedwave.DTOs.ProvinceDto",
                  "typeSimple": "HDHDC.Speedwave.DTOs.ProvinceDto",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Body",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "HDHDC.Speedwave.DTOs.ProvinceDto",
                "typeSimple": "HDHDC.Speedwave.DTOs.ProvinceDto"
              }
            },
            "DeleteById": {
              "uniqueName": "DeleteById",
              "name": "Delete",
              "httpMethod": "DELETE",
              "url": "apiv1/Province/{id}",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "id",
                  "typeAsString": "System.String, System.Private.CoreLib",
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "id",
                  "name": "id",
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "System.Void",
                "typeSimple": "System.Void"
              }
            }
          }
        },
        "HDHDC.Speedwave.Controllers.QuantityController": {
          "controllerName": "Quantity",
          "type": "HDHDC.Speedwave.Controllers.QuantityController",
          "interfaces": [],
          "actions": {
            "GetAll": {
              "uniqueName": "GetAll",
              "name": "GetAll",
              "httpMethod": "GET",
              "url": "apiv1/Quantity",
              "supportedVersions": [],
              "parametersOnMethod": [],
              "parameters": [],
              "returnValue": {
                "type": "HDHDC.Speedwave.DTOs.QuantityDto[]",
                "typeSimple": "[HDHDC.Speedwave.DTOs.QuantityDto]"
              }
            },
            "GetById": {
              "uniqueName": "GetById",
              "name": "Get",
              "httpMethod": "GET",
              "url": "apiv1/Quantity/{id}",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "id",
                  "typeAsString": "System.Int32, System.Private.CoreLib",
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "id",
                  "name": "id",
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "HDHDC.Speedwave.DTOs.QuantityDto",
                "typeSimple": "HDHDC.Speedwave.DTOs.QuantityDto"
              }
            },
            "CreateByDto": {
              "uniqueName": "CreateByDto",
              "name": "Create",
              "httpMethod": "POST",
              "url": "apiv1/Quantity",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "dto",
                  "typeAsString": "HDHDC.Speedwave.DTOs.QuantityDto, HDHDC.Speedwave.Application.Contracts",
                  "type": "HDHDC.Speedwave.DTOs.QuantityDto",
                  "typeSimple": "HDHDC.Speedwave.DTOs.QuantityDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "dto",
                  "name": "dto",
                  "type": "HDHDC.Speedwave.DTOs.QuantityDto",
                  "typeSimple": "HDHDC.Speedwave.DTOs.QuantityDto",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Body",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "HDHDC.Speedwave.DTOs.QuantityDto",
                "typeSimple": "HDHDC.Speedwave.DTOs.QuantityDto"
              }
            },
            "UpdateByIdAndDto": {
              "uniqueName": "UpdateByIdAndDto",
              "name": "Update",
              "httpMethod": "PUT",
              "url": "apiv1/Quantity/{id}",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "id",
                  "typeAsString": "System.Int32, System.Private.CoreLib",
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null
                },
                {
                  "name": "dto",
                  "typeAsString": "HDHDC.Speedwave.DTOs.QuantityDto, HDHDC.Speedwave.Application.Contracts",
                  "type": "HDHDC.Speedwave.DTOs.QuantityDto",
                  "typeSimple": "HDHDC.Speedwave.DTOs.QuantityDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "id",
                  "name": "id",
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                },
                {
                  "nameOnMethod": "dto",
                  "name": "dto",
                  "type": "HDHDC.Speedwave.DTOs.QuantityDto",
                  "typeSimple": "HDHDC.Speedwave.DTOs.QuantityDto",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Body",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "HDHDC.Speedwave.DTOs.QuantityDto",
                "typeSimple": "HDHDC.Speedwave.DTOs.QuantityDto"
              }
            },
            "DeleteById": {
              "uniqueName": "DeleteById",
              "name": "Delete",
              "httpMethod": "DELETE",
              "url": "apiv1/Quantity/{id}",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "id",
                  "typeAsString": "System.Int32, System.Private.CoreLib",
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "id",
                  "name": "id",
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "System.Void",
                "typeSimple": "System.Void"
              }
            }
          }
        },
        "HDHDC.Speedwave.Controllers.RiderController": {
          "controllerName": "Rider",
          "type": "HDHDC.Speedwave.Controllers.RiderController",
          "interfaces": [],
          "actions": {
            "GetAllByCityIdAndSkipCountAndMaxResultCount": {
              "uniqueName": "GetAllByCityIdAndSkipCountAndMaxResultCount",
              "name": "GetAll",
              "httpMethod": "GET",
              "url": "apiv1/Rider",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "cityId",
                  "typeAsString": "System.Int32, System.Private.CoreLib",
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": true,
                  "defaultValue": -1
                },
                {
                  "name": "skipCount",
                  "typeAsString": "System.Int32, System.Private.CoreLib",
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": true,
                  "defaultValue": 0
                },
                {
                  "name": "maxResultCount",
                  "typeAsString": "System.Int32, System.Private.CoreLib",
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": true,
                  "defaultValue": 10
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "cityId",
                  "name": "cityId",
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Query",
                  "descriptorName": ""
                },
                {
                  "nameOnMethod": "skipCount",
                  "name": "skipCount",
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Query",
                  "descriptorName": ""
                },
                {
                  "nameOnMethod": "maxResultCount",
                  "name": "maxResultCount",
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Query",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "HDHDC.Speedwave.DTOs.RiderDto[]",
                "typeSimple": "[HDHDC.Speedwave.DTOs.RiderDto]"
              }
            },
            "GetById": {
              "uniqueName": "GetById",
              "name": "Get",
              "httpMethod": "GET",
              "url": "apiv1/Rider/{id}",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "id",
                  "typeAsString": "System.Int32, System.Private.CoreLib",
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "id",
                  "name": "id",
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "HDHDC.Speedwave.DTOs.RiderDto",
                "typeSimple": "HDHDC.Speedwave.DTOs.RiderDto"
              }
            },
            "GetCurrentRider": {
              "uniqueName": "GetCurrentRider",
              "name": "GetCurrentRider",
              "httpMethod": "GET",
              "url": "apiv1/Rider/current",
              "supportedVersions": [],
              "parametersOnMethod": [],
              "parameters": [],
              "returnValue": {
                "type": "HDHDC.Speedwave.DTOs.RiderDto",
                "typeSimple": "HDHDC.Speedwave.DTOs.RiderDto"
              }
            },
            "GetRiderCoverage": {
              "uniqueName": "GetRiderCoverage",
              "name": "GetRiderCoverage",
              "httpMethod": "GET",
              "url": "apiv1/Rider/current/coverage",
              "supportedVersions": [],
              "parametersOnMethod": [],
              "parameters": [],
              "returnValue": {
                "type": "HDHDC.Speedwave.DTOs.CityDto[]",
                "typeSimple": "[HDHDC.Speedwave.DTOs.CityDto]"
              }
            },
            "UpdateRiderCoverageByCityIds": {
              "uniqueName": "UpdateRiderCoverageByCityIds",
              "name": "UpdateRiderCoverage",
              "httpMethod": "PUT",
              "url": "apiv1/Rider/current/coverage",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "cityIds",
                  "typeAsString": "System.Int32[], System.Private.CoreLib",
                  "type": "System.Int32[]",
                  "typeSimple": "[number]",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "cityIds",
                  "name": "cityIds",
                  "type": "System.Int32[]",
                  "typeSimple": "[number]",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Query",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "HDHDC.Speedwave.DTOs.CityDto[]",
                "typeSimple": "[HDHDC.Speedwave.DTOs.CityDto]"
              }
            },
            "CreateByDto": {
              "uniqueName": "CreateByDto",
              "name": "Create",
              "httpMethod": "POST",
              "url": "apiv1/Rider",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "dto",
                  "typeAsString": "HDHDC.Speedwave.DTOs.RiderCreateDto, HDHDC.Speedwave.Application.Contracts",
                  "type": "HDHDC.Speedwave.DTOs.RiderCreateDto",
                  "typeSimple": "HDHDC.Speedwave.DTOs.RiderCreateDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "dto",
                  "name": "dto",
                  "type": "HDHDC.Speedwave.DTOs.RiderCreateDto",
                  "typeSimple": "HDHDC.Speedwave.DTOs.RiderCreateDto",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Body",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "HDHDC.Speedwave.DTOs.AppUserDto",
                "typeSimple": "HDHDC.Speedwave.DTOs.AppUserDto"
              }
            },
            "UpdateByIdAndDto": {
              "uniqueName": "UpdateByIdAndDto",
              "name": "Update",
              "httpMethod": "PUT",
              "url": "apiv1/Rider/{id}",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "id",
                  "typeAsString": "System.Int32, System.Private.CoreLib",
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null
                },
                {
                  "name": "dto",
                  "typeAsString": "HDHDC.Speedwave.DTOs.RiderUpdateDto, HDHDC.Speedwave.Application.Contracts",
                  "type": "HDHDC.Speedwave.DTOs.RiderUpdateDto",
                  "typeSimple": "HDHDC.Speedwave.DTOs.RiderUpdateDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "id",
                  "name": "id",
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                },
                {
                  "nameOnMethod": "dto",
                  "name": "dto",
                  "type": "HDHDC.Speedwave.DTOs.RiderUpdateDto",
                  "typeSimple": "HDHDC.Speedwave.DTOs.RiderUpdateDto",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Body",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "HDHDC.Speedwave.DTOs.RiderDto",
                "typeSimple": "HDHDC.Speedwave.DTOs.RiderDto"
              }
            },
            "UpdateStatusByIdAndStatusId": {
              "uniqueName": "UpdateStatusByIdAndStatusId",
              "name": "UpdateStatus",
              "httpMethod": "PUT",
              "url": "apiv1/Rider/{id}/status",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "id",
                  "typeAsString": "System.Int32, System.Private.CoreLib",
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null
                },
                {
                  "name": "statusId",
                  "typeAsString": "System.String, System.Private.CoreLib",
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "id",
                  "name": "id",
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                },
                {
                  "nameOnMethod": "statusId",
                  "name": "statusId",
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Query",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "HDHDC.Speedwave.DTOs.RiderDto",
                "typeSimple": "HDHDC.Speedwave.DTOs.RiderDto"
              }
            },
            "SearchByWordsAndSkipCountAndMaxResultCount": {
              "uniqueName": "SearchByWordsAndSkipCountAndMaxResultCount",
              "name": "Search",
              "httpMethod": "GET",
              "url": "apiv1/Rider/search",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "words",
                  "typeAsString": "System.String, System.Private.CoreLib",
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                },
                {
                  "name": "skipCount",
                  "typeAsString": "System.Int32, System.Private.CoreLib",
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": true,
                  "defaultValue": 0
                },
                {
                  "name": "maxResultCount",
                  "typeAsString": "System.Int32, System.Private.CoreLib",
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": true,
                  "defaultValue": 10
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "words",
                  "name": "words",
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Query",
                  "descriptorName": ""
                },
                {
                  "nameOnMethod": "skipCount",
                  "name": "skipCount",
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Query",
                  "descriptorName": ""
                },
                {
                  "nameOnMethod": "maxResultCount",
                  "name": "maxResultCount",
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Query",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "HDHDC.Speedwave.DTOs.RiderDto[]",
                "typeSimple": "[HDHDC.Speedwave.DTOs.RiderDto]"
              }
            }
          }
        },
        "HDHDC.Speedwave.Controllers.SlideShowController": {
          "controllerName": "SlideShow",
          "type": "HDHDC.Speedwave.Controllers.SlideShowController",
          "interfaces": [],
          "actions": {
            "GetByFileName": {
              "uniqueName": "GetByFileName",
              "name": "Get",
              "httpMethod": "GET",
              "url": "apiv1/SlideShow/{fileName}",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "fileName",
                  "typeAsString": "System.String, System.Private.CoreLib",
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "fileName",
                  "name": "fileName",
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "HDHDC.Speedwave.DTOs.SlideShowPictureDto",
                "typeSimple": "HDHDC.Speedwave.DTOs.SlideShowPictureDto"
              }
            },
            "GetAll": {
              "uniqueName": "GetAll",
              "name": "GetAll",
              "httpMethod": "GET",
              "url": "apiv1/SlideShow",
              "supportedVersions": [],
              "parametersOnMethod": [],
              "parameters": [],
              "returnValue": {
                "type": "HDHDC.Speedwave.DTOs.SlideShowPictureDto[]",
                "typeSimple": "[HDHDC.Speedwave.DTOs.SlideShowPictureDto]"
              }
            },
            "CreateByDto": {
              "uniqueName": "CreateByDto",
              "name": "Create",
              "httpMethod": "POST",
              "url": "apiv1/SlideShow",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "dto",
                  "typeAsString": "HDHDC.Speedwave.DTOs.SlideShowPictureDto, HDHDC.Speedwave.Application.Contracts",
                  "type": "HDHDC.Speedwave.DTOs.SlideShowPictureDto",
                  "typeSimple": "HDHDC.Speedwave.DTOs.SlideShowPictureDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "dto",
                  "name": "dto",
                  "type": "HDHDC.Speedwave.DTOs.SlideShowPictureDto",
                  "typeSimple": "HDHDC.Speedwave.DTOs.SlideShowPictureDto",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Body",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "HDHDC.Speedwave.DTOs.SlideShowPictureDto",
                "typeSimple": "HDHDC.Speedwave.DTOs.SlideShowPictureDto"
              }
            },
            "UpdateByFileNameAndDto": {
              "uniqueName": "UpdateByFileNameAndDto",
              "name": "Update",
              "httpMethod": "PUT",
              "url": "apiv1/SlideShow/{fileName}",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "fileName",
                  "typeAsString": "System.String, System.Private.CoreLib",
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                },
                {
                  "name": "dto",
                  "typeAsString": "HDHDC.Speedwave.DTOs.SlideShowPictureDto, HDHDC.Speedwave.Application.Contracts",
                  "type": "HDHDC.Speedwave.DTOs.SlideShowPictureDto",
                  "typeSimple": "HDHDC.Speedwave.DTOs.SlideShowPictureDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "fileName",
                  "name": "fileName",
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                },
                {
                  "nameOnMethod": "dto",
                  "name": "dto",
                  "type": "HDHDC.Speedwave.DTOs.SlideShowPictureDto",
                  "typeSimple": "HDHDC.Speedwave.DTOs.SlideShowPictureDto",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Body",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "HDHDC.Speedwave.DTOs.SlideShowPictureDto",
                "typeSimple": "HDHDC.Speedwave.DTOs.SlideShowPictureDto"
              }
            },
            "DeleteByFileName": {
              "uniqueName": "DeleteByFileName",
              "name": "Delete",
              "httpMethod": "DELETE",
              "url": "apiv1/SlideShow/{fileName}",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "fileName",
                  "typeAsString": "System.String, System.Private.CoreLib",
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "fileName",
                  "name": "fileName",
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "System.Void",
                "typeSimple": "System.Void"
              }
            }
          }
        },
        "HDHDC.Speedwave.Controllers.StoreBranchController": {
          "controllerName": "StoreBranch",
          "type": "HDHDC.Speedwave.Controllers.StoreBranchController",
          "interfaces": [],
          "actions": {
            "GetAllByCityId": {
              "uniqueName": "GetAllByCityId",
              "name": "GetAll",
              "httpMethod": "GET",
              "url": "apiv1/StoreBranch",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "cityId",
                  "typeAsString": "System.Int32, System.Private.CoreLib",
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "cityId",
                  "name": "cityId",
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Query",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "HDHDC.Speedwave.DTOs.StoreBranchDto[]",
                "typeSimple": "[HDHDC.Speedwave.DTOs.StoreBranchDto]"
              }
            },
            "GetById": {
              "uniqueName": "GetById",
              "name": "Get",
              "httpMethod": "GET",
              "url": "apiv1/StoreBranch/{id}",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "id",
                  "typeAsString": "System.Int32, System.Private.CoreLib",
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "id",
                  "name": "id",
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "HDHDC.Speedwave.DTOs.StoreBranchDto",
                "typeSimple": "HDHDC.Speedwave.DTOs.StoreBranchDto"
              }
            },
            "CreateByDto": {
              "uniqueName": "CreateByDto",
              "name": "Create",
              "httpMethod": "POST",
              "url": "apiv1/StoreBranch",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "dto",
                  "typeAsString": "HDHDC.Speedwave.DTOs.StoreBranchCreateDto, HDHDC.Speedwave.Application.Contracts",
                  "type": "HDHDC.Speedwave.DTOs.StoreBranchCreateDto",
                  "typeSimple": "HDHDC.Speedwave.DTOs.StoreBranchCreateDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "dto",
                  "name": "dto",
                  "type": "HDHDC.Speedwave.DTOs.StoreBranchCreateDto",
                  "typeSimple": "HDHDC.Speedwave.DTOs.StoreBranchCreateDto",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Body",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "HDHDC.Speedwave.DTOs.StoreBranchDto",
                "typeSimple": "HDHDC.Speedwave.DTOs.StoreBranchDto"
              }
            },
            "UpdateByIdAndDto": {
              "uniqueName": "UpdateByIdAndDto",
              "name": "Update",
              "httpMethod": "PUT",
              "url": "apiv1/StoreBranch/{id}",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "id",
                  "typeAsString": "System.Int32, System.Private.CoreLib",
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null
                },
                {
                  "name": "dto",
                  "typeAsString": "HDHDC.Speedwave.DTOs.StoreBranchUpdateDto, HDHDC.Speedwave.Application.Contracts",
                  "type": "HDHDC.Speedwave.DTOs.StoreBranchUpdateDto",
                  "typeSimple": "HDHDC.Speedwave.DTOs.StoreBranchUpdateDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "id",
                  "name": "id",
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                },
                {
                  "nameOnMethod": "dto",
                  "name": "dto",
                  "type": "HDHDC.Speedwave.DTOs.StoreBranchUpdateDto",
                  "typeSimple": "HDHDC.Speedwave.DTOs.StoreBranchUpdateDto",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Body",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "HDHDC.Speedwave.DTOs.StoreBranchDto",
                "typeSimple": "HDHDC.Speedwave.DTOs.StoreBranchDto"
              }
            },
            "DeleteById": {
              "uniqueName": "DeleteById",
              "name": "Delete",
              "httpMethod": "DELETE",
              "url": "apiv1/StoreBranch/{id}",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "id",
                  "typeAsString": "System.Int32, System.Private.CoreLib",
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "id",
                  "name": "id",
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "System.Void",
                "typeSimple": "System.Void"
              }
            },
            "GetAllOpenDayDtoById": {
              "uniqueName": "GetAllOpenDayDtoById",
              "name": "GetAllOpenDayDto",
              "httpMethod": "GET",
              "url": "apiv1/StoreBranch/{id}/openingdays",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "id",
                  "typeAsString": "System.Int32, System.Private.CoreLib",
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "id",
                  "name": "id",
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "HDHDC.Speedwave.DTOs.StoreOpenDayDto[]",
                "typeSimple": "[HDHDC.Speedwave.DTOs.StoreOpenDayDto]"
              }
            },
            "GetOpenDayDtoByIdAndDofw": {
              "uniqueName": "GetOpenDayDtoByIdAndDofw",
              "name": "GetOpenDayDto",
              "httpMethod": "GET",
              "url": "apiv1/StoreBranch/{id}/openingdays/{dofw}",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "id",
                  "typeAsString": "System.Int32, System.Private.CoreLib",
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null
                },
                {
                  "name": "dofw",
                  "typeAsString": "System.DayOfWeek, System.Private.CoreLib",
                  "type": "System.DayOfWeek",
                  "typeSimple": "System.DayOfWeek",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "id",
                  "name": "id",
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                },
                {
                  "nameOnMethod": "dofw",
                  "name": "dofw",
                  "type": "System.DayOfWeek",
                  "typeSimple": "System.DayOfWeek",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "HDHDC.Speedwave.DTOs.StoreOpenDayDto",
                "typeSimple": "HDHDC.Speedwave.DTOs.StoreOpenDayDto"
              }
            },
            "CreateOpenDayByIdAndDto": {
              "uniqueName": "CreateOpenDayByIdAndDto",
              "name": "CreateOpenDay",
              "httpMethod": "POST",
              "url": "apiv1/StoreBranch/{id}/openingdays",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "id",
                  "typeAsString": "System.Int32, System.Private.CoreLib",
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null
                },
                {
                  "name": "dto",
                  "typeAsString": "HDHDC.Speedwave.DTOs.StoreOpenDayDto, HDHDC.Speedwave.Application.Contracts",
                  "type": "HDHDC.Speedwave.DTOs.StoreOpenDayDto",
                  "typeSimple": "HDHDC.Speedwave.DTOs.StoreOpenDayDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "id",
                  "name": "id",
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                },
                {
                  "nameOnMethod": "dto",
                  "name": "dto",
                  "type": "HDHDC.Speedwave.DTOs.StoreOpenDayDto",
                  "typeSimple": "HDHDC.Speedwave.DTOs.StoreOpenDayDto",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Body",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "HDHDC.Speedwave.DTOs.StoreOpenDayDto",
                "typeSimple": "HDHDC.Speedwave.DTOs.StoreOpenDayDto"
              }
            },
            "UpdateOpenDayByIdAndDtoArr": {
              "uniqueName": "UpdateOpenDayByIdAndDtoArr",
              "name": "UpdateOpenDay",
              "httpMethod": "PUT",
              "url": "apiv1/StoreBranch/{id}/openingdays",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "id",
                  "typeAsString": "System.Int32, System.Private.CoreLib",
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null
                },
                {
                  "name": "dtoArr",
                  "typeAsString": "HDHDC.Speedwave.DTOs.StoreOpenDayDto[], HDHDC.Speedwave.Application.Contracts",
                  "type": "HDHDC.Speedwave.DTOs.StoreOpenDayDto[]",
                  "typeSimple": "[HDHDC.Speedwave.DTOs.StoreOpenDayDto]",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "id",
                  "name": "id",
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                },
                {
                  "nameOnMethod": "dtoArr",
                  "name": "dtoArr",
                  "type": "HDHDC.Speedwave.DTOs.StoreOpenDayDto[]",
                  "typeSimple": "[HDHDC.Speedwave.DTOs.StoreOpenDayDto]",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Body",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "HDHDC.Speedwave.DTOs.StoreOpenDayDto[]",
                "typeSimple": "[HDHDC.Speedwave.DTOs.StoreOpenDayDto]"
              }
            },
            "GetAllClosingDatesById": {
              "uniqueName": "GetAllClosingDatesById",
              "name": "GetAllClosingDates",
              "httpMethod": "GET",
              "url": "apiv1/StoreBranch/{id}/closingdate",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "id",
                  "typeAsString": "System.Int32, System.Private.CoreLib",
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "id",
                  "name": "id",
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "HDHDC.Speedwave.DTOs.StoreClosingDateDto[]",
                "typeSimple": "[HDHDC.Speedwave.DTOs.StoreClosingDateDto]"
              }
            },
            "CreateClosingDateByIdAndDto": {
              "uniqueName": "CreateClosingDateByIdAndDto",
              "name": "CreateClosingDate",
              "httpMethod": "POST",
              "url": "apiv1/StoreBranch/{id}/closingdate",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "id",
                  "typeAsString": "System.Int32, System.Private.CoreLib",
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null
                },
                {
                  "name": "dto",
                  "typeAsString": "HDHDC.Speedwave.DTOs.StoreClosingDateDto, HDHDC.Speedwave.Application.Contracts",
                  "type": "HDHDC.Speedwave.DTOs.StoreClosingDateDto",
                  "typeSimple": "HDHDC.Speedwave.DTOs.StoreClosingDateDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "id",
                  "name": "id",
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                },
                {
                  "nameOnMethod": "dto",
                  "name": "dto",
                  "type": "HDHDC.Speedwave.DTOs.StoreClosingDateDto",
                  "typeSimple": "HDHDC.Speedwave.DTOs.StoreClosingDateDto",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Body",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "HDHDC.Speedwave.DTOs.StoreClosingDateDto",
                "typeSimple": "HDHDC.Speedwave.DTOs.StoreClosingDateDto"
              }
            },
            "DeleteClosingDateByIdAndClosingdateid": {
              "uniqueName": "DeleteClosingDateByIdAndClosingdateid",
              "name": "DeleteClosingDate",
              "httpMethod": "DELETE",
              "url": "apiv1/StoreBranch/{id}/closingdate/{closingdateid}",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "id",
                  "typeAsString": "System.Int32, System.Private.CoreLib",
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null
                },
                {
                  "name": "closingdateid",
                  "typeAsString": "System.Int32, System.Private.CoreLib",
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "id",
                  "name": "id",
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                },
                {
                  "nameOnMethod": "closingdateid",
                  "name": "closingdateid",
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "System.Void",
                "typeSimple": "System.Void"
              }
            },
            "GetAllItemsByIdAndKeywordsAndSkipCountAndMaxResultCountAndIncludeDetails": {
              "uniqueName": "GetAllItemsByIdAndKeywordsAndSkipCountAndMaxResultCountAndIncludeDetails",
              "name": "GetAllItems",
              "httpMethod": "GET",
              "url": "apiv1/StoreBranch/{id}/items",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "id",
                  "typeAsString": "System.Int32, System.Private.CoreLib",
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null
                },
                {
                  "name": "keywords",
                  "typeAsString": "System.String, System.Private.CoreLib",
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                },
                {
                  "name": "skipCount",
                  "typeAsString": "System.Int32, System.Private.CoreLib",
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": true,
                  "defaultValue": 0
                },
                {
                  "name": "maxResultCount",
                  "typeAsString": "System.Int32, System.Private.CoreLib",
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": true,
                  "defaultValue": 10
                },
                {
                  "name": "includeDetails",
                  "typeAsString": "System.Boolean, System.Private.CoreLib",
                  "type": "System.Boolean",
                  "typeSimple": "boolean",
                  "isOptional": true,
                  "defaultValue": false
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "id",
                  "name": "id",
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                },
                {
                  "nameOnMethod": "keywords",
                  "name": "keywords",
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Query",
                  "descriptorName": ""
                },
                {
                  "nameOnMethod": "skipCount",
                  "name": "skipCount",
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Query",
                  "descriptorName": ""
                },
                {
                  "nameOnMethod": "maxResultCount",
                  "name": "maxResultCount",
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Query",
                  "descriptorName": ""
                },
                {
                  "nameOnMethod": "includeDetails",
                  "name": "includeDetails",
                  "type": "System.Boolean",
                  "typeSimple": "boolean",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Query",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "HDHDC.Speedwave.DTOs.ItemStoreBranchDto[]",
                "typeSimple": "[HDHDC.Speedwave.DTOs.ItemStoreBranchDto]"
              }
            },
            "AddItemByIdAndDto": {
              "uniqueName": "AddItemByIdAndDto",
              "name": "AddItem",
              "httpMethod": "POST",
              "url": "apiv1/StoreBranch/{id}/items",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "id",
                  "typeAsString": "System.Int32, System.Private.CoreLib",
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null
                },
                {
                  "name": "dto",
                  "typeAsString": "HDHDC.Speedwave.DTOs.ItemStoreBranchDto, HDHDC.Speedwave.Application.Contracts",
                  "type": "HDHDC.Speedwave.DTOs.ItemStoreBranchDto",
                  "typeSimple": "HDHDC.Speedwave.DTOs.ItemStoreBranchDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "id",
                  "name": "id",
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                },
                {
                  "nameOnMethod": "dto",
                  "name": "dto",
                  "type": "HDHDC.Speedwave.DTOs.ItemStoreBranchDto",
                  "typeSimple": "HDHDC.Speedwave.DTOs.ItemStoreBranchDto",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Body",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "HDHDC.Speedwave.DTOs.ItemStoreBranchDto",
                "typeSimple": "HDHDC.Speedwave.DTOs.ItemStoreBranchDto"
              }
            },
            "RemoveItemByIdAndItemId": {
              "uniqueName": "RemoveItemByIdAndItemId",
              "name": "RemoveItem",
              "httpMethod": "DELETE",
              "url": "apiv1/StoreBranch/{id}/items/{itemId}",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "id",
                  "typeAsString": "System.Int32, System.Private.CoreLib",
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null
                },
                {
                  "name": "itemId",
                  "typeAsString": "System.Int32, System.Private.CoreLib",
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "id",
                  "name": "id",
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                },
                {
                  "nameOnMethod": "itemId",
                  "name": "itemId",
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "System.Void",
                "typeSimple": "System.Void"
              }
            }
          }
        },
        "HDHDC.Speedwave.Controllers.StoreChainController": {
          "controllerName": "StoreChain",
          "type": "HDHDC.Speedwave.Controllers.StoreChainController",
          "interfaces": [],
          "actions": {
            "GetAll": {
              "uniqueName": "GetAll",
              "name": "GetAll",
              "httpMethod": "GET",
              "url": "apiv1/StoreChain",
              "supportedVersions": [],
              "parametersOnMethod": [],
              "parameters": [],
              "returnValue": {
                "type": "HDHDC.Speedwave.DTOs.StoreChainDto[]",
                "typeSimple": "[HDHDC.Speedwave.DTOs.StoreChainDto]"
              }
            },
            "GetById": {
              "uniqueName": "GetById",
              "name": "Get",
              "httpMethod": "GET",
              "url": "apiv1/StoreChain/{id}",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "id",
                  "typeAsString": "System.Int32, System.Private.CoreLib",
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "id",
                  "name": "id",
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "HDHDC.Speedwave.DTOs.StoreChainDto",
                "typeSimple": "HDHDC.Speedwave.DTOs.StoreChainDto"
              }
            },
            "CreateByDto": {
              "uniqueName": "CreateByDto",
              "name": "Create",
              "httpMethod": "POST",
              "url": "apiv1/StoreChain",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "dto",
                  "typeAsString": "HDHDC.Speedwave.DTOs.StoreChainCreateDto, HDHDC.Speedwave.Application.Contracts",
                  "type": "HDHDC.Speedwave.DTOs.StoreChainCreateDto",
                  "typeSimple": "HDHDC.Speedwave.DTOs.StoreChainCreateDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "dto",
                  "name": "dto",
                  "type": "HDHDC.Speedwave.DTOs.StoreChainCreateDto",
                  "typeSimple": "HDHDC.Speedwave.DTOs.StoreChainCreateDto",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Body",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "HDHDC.Speedwave.DTOs.StoreChainDto",
                "typeSimple": "HDHDC.Speedwave.DTOs.StoreChainDto"
              }
            },
            "UpdateByIdAndDto": {
              "uniqueName": "UpdateByIdAndDto",
              "name": "Update",
              "httpMethod": "PUT",
              "url": "apiv1/StoreChain/{id}",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "id",
                  "typeAsString": "System.Int32, System.Private.CoreLib",
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null
                },
                {
                  "name": "dto",
                  "typeAsString": "HDHDC.Speedwave.DTOs.StoreChainUpdateDto, HDHDC.Speedwave.Application.Contracts",
                  "type": "HDHDC.Speedwave.DTOs.StoreChainUpdateDto",
                  "typeSimple": "HDHDC.Speedwave.DTOs.StoreChainUpdateDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "id",
                  "name": "id",
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                },
                {
                  "nameOnMethod": "dto",
                  "name": "dto",
                  "type": "HDHDC.Speedwave.DTOs.StoreChainUpdateDto",
                  "typeSimple": "HDHDC.Speedwave.DTOs.StoreChainUpdateDto",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Body",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "HDHDC.Speedwave.DTOs.StoreChainDto",
                "typeSimple": "HDHDC.Speedwave.DTOs.StoreChainDto"
              }
            },
            "DeleteById": {
              "uniqueName": "DeleteById",
              "name": "Delete",
              "httpMethod": "DELETE",
              "url": "apiv1/StoreChain/{id}",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "id",
                  "typeAsString": "System.Int32, System.Private.CoreLib",
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "id",
                  "name": "id",
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "System.Void",
                "typeSimple": "System.Void"
              }
            },
            "GetLogoById": {
              "uniqueName": "GetLogoById",
              "name": "GetLogo",
              "httpMethod": "GET",
              "url": "apiv1/StoreChain/{id}/logo",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "id",
                  "typeAsString": "System.Int32, System.Private.CoreLib",
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "id",
                  "name": "id",
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "HDHDC.Speedwave.DTOs.ThumbnailDto",
                "typeSimple": "HDHDC.Speedwave.DTOs.ThumbnailDto"
              }
            },
            "UpdateLogoByIdAndDto": {
              "uniqueName": "UpdateLogoByIdAndDto",
              "name": "UpdateLogo",
              "httpMethod": "PUT",
              "url": "apiv1/StoreChain/{id}/logo",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "id",
                  "typeAsString": "System.Int32, System.Private.CoreLib",
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null
                },
                {
                  "name": "dto",
                  "typeAsString": "HDHDC.Speedwave.DTOs.ThumbnailDto, HDHDC.Speedwave.Application.Contracts",
                  "type": "HDHDC.Speedwave.DTOs.ThumbnailDto",
                  "typeSimple": "HDHDC.Speedwave.DTOs.ThumbnailDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "id",
                  "name": "id",
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                },
                {
                  "nameOnMethod": "dto",
                  "name": "dto",
                  "type": "HDHDC.Speedwave.DTOs.ThumbnailDto",
                  "typeSimple": "HDHDC.Speedwave.DTOs.ThumbnailDto",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Body",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "HDHDC.Speedwave.DTOs.StoreChainDto",
                "typeSimple": "HDHDC.Speedwave.DTOs.StoreChainDto"
              }
            }
          }
        },
        "HDHDC.Speedwave.Controllers.SubtotalPercentageController": {
          "controllerName": "SubtotalPercentage",
          "type": "HDHDC.Speedwave.Controllers.SubtotalPercentageController",
          "interfaces": [],
          "actions": {
            "GetAll": {
              "uniqueName": "GetAll",
              "name": "GetAll",
              "httpMethod": "GET",
              "url": "apiv1/SubtotalPercentage",
              "supportedVersions": [],
              "parametersOnMethod": [],
              "parameters": [],
              "returnValue": {
                "type": "HDHDC.Speedwave.DTOs.SubtotalPercentageDto[]",
                "typeSimple": "[HDHDC.Speedwave.DTOs.SubtotalPercentageDto]"
              }
            },
            "GetById": {
              "uniqueName": "GetById",
              "name": "Get",
              "httpMethod": "GET",
              "url": "apiv1/SubtotalPercentage/{id}",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "id",
                  "typeAsString": "System.Int32, System.Private.CoreLib",
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "id",
                  "name": "id",
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "HDHDC.Speedwave.DTOs.SubtotalPercentageDto",
                "typeSimple": "HDHDC.Speedwave.DTOs.SubtotalPercentageDto"
              }
            },
            "CreateByDto": {
              "uniqueName": "CreateByDto",
              "name": "Create",
              "httpMethod": "POST",
              "url": "apiv1/SubtotalPercentage",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "dto",
                  "typeAsString": "HDHDC.Speedwave.DTOs.SubtotalPercentageCreateUpdateDto, HDHDC.Speedwave.Application.Contracts",
                  "type": "HDHDC.Speedwave.DTOs.SubtotalPercentageCreateUpdateDto",
                  "typeSimple": "HDHDC.Speedwave.DTOs.SubtotalPercentageCreateUpdateDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "dto",
                  "name": "dto",
                  "type": "HDHDC.Speedwave.DTOs.SubtotalPercentageCreateUpdateDto",
                  "typeSimple": "HDHDC.Speedwave.DTOs.SubtotalPercentageCreateUpdateDto",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Body",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "HDHDC.Speedwave.DTOs.SubtotalPercentageDto",
                "typeSimple": "HDHDC.Speedwave.DTOs.SubtotalPercentageDto"
              }
            },
            "UpdateByIdAndDto": {
              "uniqueName": "UpdateByIdAndDto",
              "name": "Update",
              "httpMethod": "PUT",
              "url": "apiv1/SubtotalPercentage/{id}",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "id",
                  "typeAsString": "System.Int32, System.Private.CoreLib",
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null
                },
                {
                  "name": "dto",
                  "typeAsString": "HDHDC.Speedwave.DTOs.SubtotalPercentageCreateUpdateDto, HDHDC.Speedwave.Application.Contracts",
                  "type": "HDHDC.Speedwave.DTOs.SubtotalPercentageCreateUpdateDto",
                  "typeSimple": "HDHDC.Speedwave.DTOs.SubtotalPercentageCreateUpdateDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "id",
                  "name": "id",
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                },
                {
                  "nameOnMethod": "dto",
                  "name": "dto",
                  "type": "HDHDC.Speedwave.DTOs.SubtotalPercentageCreateUpdateDto",
                  "typeSimple": "HDHDC.Speedwave.DTOs.SubtotalPercentageCreateUpdateDto",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Body",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "HDHDC.Speedwave.DTOs.SubtotalPercentageDto",
                "typeSimple": "HDHDC.Speedwave.DTOs.SubtotalPercentageDto"
              }
            },
            "DeleteById": {
              "uniqueName": "DeleteById",
              "name": "Delete",
              "httpMethod": "DELETE",
              "url": "apiv1/SubtotalPercentage/{id}",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "id",
                  "typeAsString": "System.Int32, System.Private.CoreLib",
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "id",
                  "name": "id",
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "System.Void",
                "typeSimple": "System.Void"
              }
            }
          }
        },
        "HDHDC.Speedwave.Controllers.UnitController": {
          "controllerName": "Unit",
          "type": "HDHDC.Speedwave.Controllers.UnitController",
          "interfaces": [],
          "actions": {
            "GetAll": {
              "uniqueName": "GetAll",
              "name": "GetAll",
              "httpMethod": "GET",
              "url": "apiv1/Unit",
              "supportedVersions": [],
              "parametersOnMethod": [],
              "parameters": [],
              "returnValue": {
                "type": "HDHDC.Speedwave.DTOs.UnitDto[]",
                "typeSimple": "[HDHDC.Speedwave.DTOs.UnitDto]"
              }
            },
            "GetById": {
              "uniqueName": "GetById",
              "name": "Get",
              "httpMethod": "GET",
              "url": "apiv1/Unit/{id}",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "id",
                  "typeAsString": "System.String, System.Private.CoreLib",
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "id",
                  "name": "id",
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "HDHDC.Speedwave.DTOs.UnitDto",
                "typeSimple": "HDHDC.Speedwave.DTOs.UnitDto"
              }
            },
            "CreateByDto": {
              "uniqueName": "CreateByDto",
              "name": "Create",
              "httpMethod": "POST",
              "url": "apiv1/Unit",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "dto",
                  "typeAsString": "HDHDC.Speedwave.DTOs.UnitDto, HDHDC.Speedwave.Application.Contracts",
                  "type": "HDHDC.Speedwave.DTOs.UnitDto",
                  "typeSimple": "HDHDC.Speedwave.DTOs.UnitDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "dto",
                  "name": "dto",
                  "type": "HDHDC.Speedwave.DTOs.UnitDto",
                  "typeSimple": "HDHDC.Speedwave.DTOs.UnitDto",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Body",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "HDHDC.Speedwave.DTOs.UnitDto",
                "typeSimple": "HDHDC.Speedwave.DTOs.UnitDto"
              }
            },
            "UpdateByIdAndDto": {
              "uniqueName": "UpdateByIdAndDto",
              "name": "Update",
              "httpMethod": "PUT",
              "url": "apiv1/Unit/{id}",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "id",
                  "typeAsString": "System.String, System.Private.CoreLib",
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                },
                {
                  "name": "dto",
                  "typeAsString": "HDHDC.Speedwave.DTOs.UnitDto, HDHDC.Speedwave.Application.Contracts",
                  "type": "HDHDC.Speedwave.DTOs.UnitDto",
                  "typeSimple": "HDHDC.Speedwave.DTOs.UnitDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "id",
                  "name": "id",
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                },
                {
                  "nameOnMethod": "dto",
                  "name": "dto",
                  "type": "HDHDC.Speedwave.DTOs.UnitDto",
                  "typeSimple": "HDHDC.Speedwave.DTOs.UnitDto",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Body",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "HDHDC.Speedwave.DTOs.UnitDto",
                "typeSimple": "HDHDC.Speedwave.DTOs.UnitDto"
              }
            },
            "DeleteById": {
              "uniqueName": "DeleteById",
              "name": "Delete",
              "httpMethod": "DELETE",
              "url": "apiv1/Unit/{id}",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "id",
                  "typeAsString": "System.String, System.Private.CoreLib",
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "id",
                  "name": "id",
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "System.Void",
                "typeSimple": "System.Void"
              }
            }
          }
        },
        "HDHDC.Speedwave.Controllers.UserController": {
          "controllerName": "User",
          "type": "HDHDC.Speedwave.Controllers.UserController",
          "interfaces": [],
          "actions": {
            "GetById": {
              "uniqueName": "GetById",
              "name": "Get",
              "httpMethod": "GET",
              "url": "apiv1/User/{id}",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "id",
                  "typeAsString": "System.Guid, System.Private.CoreLib",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "id",
                  "name": "id",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "HDHDC.Speedwave.DTOs.AppUserDto",
                "typeSimple": "HDHDC.Speedwave.DTOs.AppUserDto"
              }
            },
            "GetByUsername": {
              "uniqueName": "GetByUsername",
              "name": "Get",
              "httpMethod": "GET",
              "url": "apiv1/User/username/{username}",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "username",
                  "typeAsString": "System.String, System.Private.CoreLib",
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "username",
                  "name": "username",
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "System.Void",
                "typeSimple": "System.Void"
              }
            },
            "SendPasswordResetCodeByDto": {
              "uniqueName": "SendPasswordResetCodeByDto",
              "name": "SendPasswordResetCode",
              "httpMethod": "POST",
              "url": "apiv1/User/password-reset-code",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "dto",
                  "typeAsString": "HDHDC.Speedwave.DTOs.PasswordResetDto, HDHDC.Speedwave.Application.Contracts",
                  "type": "HDHDC.Speedwave.DTOs.PasswordResetDto",
                  "typeSimple": "HDHDC.Speedwave.DTOs.PasswordResetDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "dto",
                  "name": "dto",
                  "type": "HDHDC.Speedwave.DTOs.PasswordResetDto",
                  "typeSimple": "HDHDC.Speedwave.DTOs.PasswordResetDto",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Body",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "System.Void",
                "typeSimple": "System.Void"
              }
            },
            "ResetPasswordByDto": {
              "uniqueName": "ResetPasswordByDto",
              "name": "ResetPassword",
              "httpMethod": "POST",
              "url": "apiv1/User/password-reset",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "dto",
                  "typeAsString": "HDHDC.Speedwave.DTOs.PasswordResetDto, HDHDC.Speedwave.Application.Contracts",
                  "type": "HDHDC.Speedwave.DTOs.PasswordResetDto",
                  "typeSimple": "HDHDC.Speedwave.DTOs.PasswordResetDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "dto",
                  "name": "dto",
                  "type": "HDHDC.Speedwave.DTOs.PasswordResetDto",
                  "typeSimple": "HDHDC.Speedwave.DTOs.PasswordResetDto",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Body",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "System.Void",
                "typeSimple": "System.Void"
              }
            }
          }
        },
        "HDHDC.Speedwave.Controllers.AccountControllers.CustomerAccountController": {
          "controllerName": "CustomerAccount",
          "type": "HDHDC.Speedwave.Controllers.AccountControllers.CustomerAccountController",
          "interfaces": [],
          "actions": {
            "CreateByDto": {
              "uniqueName": "CreateByDto",
              "name": "Create",
              "httpMethod": "POST",
              "url": "apiv1/CustomerAccount",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "dto",
                  "typeAsString": "HDHDC.Speedwave.DTOs.UserCreateDto, HDHDC.Speedwave.Application.Contracts",
                  "type": "HDHDC.Speedwave.DTOs.UserCreateDto",
                  "typeSimple": "HDHDC.Speedwave.DTOs.UserCreateDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "dto",
                  "name": "dto",
                  "type": "HDHDC.Speedwave.DTOs.UserCreateDto",
                  "typeSimple": "HDHDC.Speedwave.DTOs.UserCreateDto",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Body",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "HDHDC.Speedwave.DTOs.AppUserDto",
                "typeSimple": "HDHDC.Speedwave.DTOs.AppUserDto"
              }
            },
            "GetAllAddress": {
              "uniqueName": "GetAllAddress",
              "name": "GetAllAddress",
              "httpMethod": "GET",
              "url": "apiv1/CustomerAccount/address",
              "supportedVersions": [],
              "parametersOnMethod": [],
              "parameters": [],
              "returnValue": {
                "type": "HDHDC.Speedwave.DTOs.AddressDto[]",
                "typeSimple": "[HDHDC.Speedwave.DTOs.AddressDto]"
              }
            },
            "GetAddressById": {
              "uniqueName": "GetAddressById",
              "name": "GetAddress",
              "httpMethod": "GET",
              "url": "apiv1/CustomerAccount/address/{id}",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "id",
                  "typeAsString": "System.Int32, System.Private.CoreLib",
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "id",
                  "name": "id",
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "HDHDC.Speedwave.DTOs.AddressDto",
                "typeSimple": "HDHDC.Speedwave.DTOs.AddressDto"
              }
            },
            "CreateAddressByDto": {
              "uniqueName": "CreateAddressByDto",
              "name": "CreateAddress",
              "httpMethod": "POST",
              "url": "apiv1/CustomerAccount/address",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "dto",
                  "typeAsString": "HDHDC.Speedwave.DTOs.AddressCreateDto, HDHDC.Speedwave.Application.Contracts",
                  "type": "HDHDC.Speedwave.DTOs.AddressCreateDto",
                  "typeSimple": "HDHDC.Speedwave.DTOs.AddressCreateDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "dto",
                  "name": "dto",
                  "type": "HDHDC.Speedwave.DTOs.AddressCreateDto",
                  "typeSimple": "HDHDC.Speedwave.DTOs.AddressCreateDto",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Body",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "HDHDC.Speedwave.DTOs.AddressDto",
                "typeSimple": "HDHDC.Speedwave.DTOs.AddressDto"
              }
            },
            "UpdateAddressByIdAndDto": {
              "uniqueName": "UpdateAddressByIdAndDto",
              "name": "UpdateAddress",
              "httpMethod": "PUT",
              "url": "apiv1/CustomerAccount/address/{id}",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "id",
                  "typeAsString": "System.Int32, System.Private.CoreLib",
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null
                },
                {
                  "name": "dto",
                  "typeAsString": "HDHDC.Speedwave.DTOs.AddressUpdateDto, HDHDC.Speedwave.Application.Contracts",
                  "type": "HDHDC.Speedwave.DTOs.AddressUpdateDto",
                  "typeSimple": "HDHDC.Speedwave.DTOs.AddressUpdateDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "id",
                  "name": "id",
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                },
                {
                  "nameOnMethod": "dto",
                  "name": "dto",
                  "type": "HDHDC.Speedwave.DTOs.AddressUpdateDto",
                  "typeSimple": "HDHDC.Speedwave.DTOs.AddressUpdateDto",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Body",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "HDHDC.Speedwave.DTOs.AddressDto",
                "typeSimple": "HDHDC.Speedwave.DTOs.AddressDto"
              }
            },
            "DeleteAddressById": {
              "uniqueName": "DeleteAddressById",
              "name": "DeleteAddress",
              "httpMethod": "DELETE",
              "url": "apiv1/CustomerAccount/address/{id}",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "id",
                  "typeAsString": "System.Int32, System.Private.CoreLib",
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "id",
                  "name": "id",
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "System.Void",
                "typeSimple": "System.Void"
              }
            }
          }
        }
      }
    },
    "featureManagement": {
      "rootPath": "featureManagement",
      "remoteServiceName": "AbpFeatureManagement",
      "controllers": {
        "Volo.Abp.FeatureManagement.FeaturesController": {
          "controllerName": "Features",
          "type": "Volo.Abp.FeatureManagement.FeaturesController",
          "interfaces": [
            {
              "type": "Volo.Abp.FeatureManagement.IFeatureAppService"
            }
          ],
          "actions": {
            "GetAsyncByProviderNameAndProviderKey": {
              "uniqueName": "GetAsyncByProviderNameAndProviderKey",
              "name": "GetAsync",
              "httpMethod": "GET",
              "url": "api/feature-management/features",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "providerName",
                  "typeAsString": "System.String, System.Private.CoreLib",
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                },
                {
                  "name": "providerKey",
                  "typeAsString": "System.String, System.Private.CoreLib",
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "providerName",
                  "name": "providerName",
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": ""
                },
                {
                  "nameOnMethod": "providerKey",
                  "name": "providerKey",
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "Volo.Abp.FeatureManagement.GetFeatureListResultDto",
                "typeSimple": "Volo.Abp.FeatureManagement.GetFeatureListResultDto"
              }
            },
            "UpdateAsyncByProviderNameAndProviderKeyAndInput": {
              "uniqueName": "UpdateAsyncByProviderNameAndProviderKeyAndInput",
              "name": "UpdateAsync",
              "httpMethod": "PUT",
              "url": "api/feature-management/features",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "providerName",
                  "typeAsString": "System.String, System.Private.CoreLib",
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                },
                {
                  "name": "providerKey",
                  "typeAsString": "System.String, System.Private.CoreLib",
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                },
                {
                  "name": "input",
                  "typeAsString": "Volo.Abp.FeatureManagement.UpdateFeaturesDto, Volo.Abp.FeatureManagement.Application.Contracts",
                  "type": "Volo.Abp.FeatureManagement.UpdateFeaturesDto",
                  "typeSimple": "Volo.Abp.FeatureManagement.UpdateFeaturesDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "providerName",
                  "name": "providerName",
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": ""
                },
                {
                  "nameOnMethod": "providerKey",
                  "name": "providerKey",
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": ""
                },
                {
                  "nameOnMethod": "input",
                  "name": "input",
                  "type": "Volo.Abp.FeatureManagement.UpdateFeaturesDto",
                  "typeSimple": "Volo.Abp.FeatureManagement.UpdateFeaturesDto",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Body",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "System.Void",
                "typeSimple": "System.Void"
              }
            }
          }
        }
      }
    },
    "multi-tenancy": {
      "rootPath": "multi-tenancy",
      "remoteServiceName": "AbpTenantManagement",
      "controllers": {
        "Volo.Abp.TenantManagement.TenantController": {
          "controllerName": "Tenant",
          "type": "Volo.Abp.TenantManagement.TenantController",
          "interfaces": [
            {
              "type": "Volo.Abp.TenantManagement.ITenantAppService"
            }
          ],
          "actions": {
            "GetAsyncById": {
              "uniqueName": "GetAsyncById",
              "name": "GetAsync",
              "httpMethod": "GET",
              "url": "api/multi-tenancy/tenants/{id}",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "id",
                  "typeAsString": "System.Guid, System.Private.CoreLib",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "id",
                  "name": "id",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "Volo.Abp.TenantManagement.TenantDto",
                "typeSimple": "Volo.Abp.TenantManagement.TenantDto"
              }
            },
            "GetListAsyncByInput": {
              "uniqueName": "GetListAsyncByInput",
              "name": "GetListAsync",
              "httpMethod": "GET",
              "url": "api/multi-tenancy/tenants",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "input",
                  "typeAsString": "Volo.Abp.TenantManagement.GetTenantsInput, Volo.Abp.TenantManagement.Application.Contracts",
                  "type": "Volo.Abp.TenantManagement.GetTenantsInput",
                  "typeSimple": "Volo.Abp.TenantManagement.GetTenantsInput",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "input",
                  "name": "Filter",
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "Sorting",
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "SkipCount",
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "MaxResultCount",
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                }
              ],
              "returnValue": {
                "type": "Volo.Abp.Application.Dtos.PagedResultDto<Volo.Abp.TenantManagement.TenantDto>",
                "typeSimple": "Volo.Abp.Application.Dtos.PagedResultDto<Volo.Abp.TenantManagement.TenantDto>"
              }
            },
            "CreateAsyncByInput": {
              "uniqueName": "CreateAsyncByInput",
              "name": "CreateAsync",
              "httpMethod": "POST",
              "url": "api/multi-tenancy/tenants",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "input",
                  "typeAsString": "Volo.Abp.TenantManagement.TenantCreateDto, Volo.Abp.TenantManagement.Application.Contracts",
                  "type": "Volo.Abp.TenantManagement.TenantCreateDto",
                  "typeSimple": "Volo.Abp.TenantManagement.TenantCreateDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "input",
                  "name": "input",
                  "type": "Volo.Abp.TenantManagement.TenantCreateDto",
                  "typeSimple": "Volo.Abp.TenantManagement.TenantCreateDto",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Body",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "Volo.Abp.TenantManagement.TenantDto",
                "typeSimple": "Volo.Abp.TenantManagement.TenantDto"
              }
            },
            "UpdateAsyncByIdAndInput": {
              "uniqueName": "UpdateAsyncByIdAndInput",
              "name": "UpdateAsync",
              "httpMethod": "PUT",
              "url": "api/multi-tenancy/tenants/{id}",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "id",
                  "typeAsString": "System.Guid, System.Private.CoreLib",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                },
                {
                  "name": "input",
                  "typeAsString": "Volo.Abp.TenantManagement.TenantUpdateDto, Volo.Abp.TenantManagement.Application.Contracts",
                  "type": "Volo.Abp.TenantManagement.TenantUpdateDto",
                  "typeSimple": "Volo.Abp.TenantManagement.TenantUpdateDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "id",
                  "name": "id",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                },
                {
                  "nameOnMethod": "input",
                  "name": "input",
                  "type": "Volo.Abp.TenantManagement.TenantUpdateDto",
                  "typeSimple": "Volo.Abp.TenantManagement.TenantUpdateDto",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Body",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "Volo.Abp.TenantManagement.TenantDto",
                "typeSimple": "Volo.Abp.TenantManagement.TenantDto"
              }
            },
            "DeleteAsyncById": {
              "uniqueName": "DeleteAsyncById",
              "name": "DeleteAsync",
              "httpMethod": "DELETE",
              "url": "api/multi-tenancy/tenants/{id}",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "id",
                  "typeAsString": "System.Guid, System.Private.CoreLib",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "id",
                  "name": "id",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "System.Void",
                "typeSimple": "System.Void"
              }
            },
            "GetDefaultConnectionStringAsyncById": {
              "uniqueName": "GetDefaultConnectionStringAsyncById",
              "name": "GetDefaultConnectionStringAsync",
              "httpMethod": "GET",
              "url": "api/multi-tenancy/tenants/{id}/default-connection-string",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "id",
                  "typeAsString": "System.Guid, System.Private.CoreLib",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "id",
                  "name": "id",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "System.String",
                "typeSimple": "string"
              }
            },
            "UpdateDefaultConnectionStringAsyncByIdAndDefaultConnectionString": {
              "uniqueName": "UpdateDefaultConnectionStringAsyncByIdAndDefaultConnectionString",
              "name": "UpdateDefaultConnectionStringAsync",
              "httpMethod": "PUT",
              "url": "api/multi-tenancy/tenants/{id}/default-connection-string",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "id",
                  "typeAsString": "System.Guid, System.Private.CoreLib",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                },
                {
                  "name": "defaultConnectionString",
                  "typeAsString": "System.String, System.Private.CoreLib",
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "id",
                  "name": "id",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                },
                {
                  "nameOnMethod": "defaultConnectionString",
                  "name": "defaultConnectionString",
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "System.Void",
                "typeSimple": "System.Void"
              }
            },
            "DeleteDefaultConnectionStringAsyncById": {
              "uniqueName": "DeleteDefaultConnectionStringAsyncById",
              "name": "DeleteDefaultConnectionStringAsync",
              "httpMethod": "DELETE",
              "url": "api/multi-tenancy/tenants/{id}/default-connection-string",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "id",
                  "typeAsString": "System.Guid, System.Private.CoreLib",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "id",
                  "name": "id",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "System.Void",
                "typeSimple": "System.Void"
              }
            }
          }
        }
      }
    },
    "permissionManagement": {
      "rootPath": "permissionManagement",
      "remoteServiceName": "AbpPermissionManagement",
      "controllers": {
        "Volo.Abp.PermissionManagement.PermissionsController": {
          "controllerName": "Permissions",
          "type": "Volo.Abp.PermissionManagement.PermissionsController",
          "interfaces": [
            {
              "type": "Volo.Abp.PermissionManagement.IPermissionAppService"
            }
          ],
          "actions": {
            "GetAsyncByProviderNameAndProviderKey": {
              "uniqueName": "GetAsyncByProviderNameAndProviderKey",
              "name": "GetAsync",
              "httpMethod": "GET",
              "url": "api/permission-management/permissions",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "providerName",
                  "typeAsString": "System.String, System.Private.CoreLib",
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                },
                {
                  "name": "providerKey",
                  "typeAsString": "System.String, System.Private.CoreLib",
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "providerName",
                  "name": "providerName",
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": ""
                },
                {
                  "nameOnMethod": "providerKey",
                  "name": "providerKey",
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "Volo.Abp.PermissionManagement.GetPermissionListResultDto",
                "typeSimple": "Volo.Abp.PermissionManagement.GetPermissionListResultDto"
              }
            },
            "UpdateAsyncByProviderNameAndProviderKeyAndInput": {
              "uniqueName": "UpdateAsyncByProviderNameAndProviderKeyAndInput",
              "name": "UpdateAsync",
              "httpMethod": "PUT",
              "url": "api/permission-management/permissions",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "providerName",
                  "typeAsString": "System.String, System.Private.CoreLib",
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                },
                {
                  "name": "providerKey",
                  "typeAsString": "System.String, System.Private.CoreLib",
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                },
                {
                  "name": "input",
                  "typeAsString": "Volo.Abp.PermissionManagement.UpdatePermissionsDto, Volo.Abp.PermissionManagement.Application.Contracts",
                  "type": "Volo.Abp.PermissionManagement.UpdatePermissionsDto",
                  "typeSimple": "Volo.Abp.PermissionManagement.UpdatePermissionsDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "providerName",
                  "name": "providerName",
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": ""
                },
                {
                  "nameOnMethod": "providerKey",
                  "name": "providerKey",
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": ""
                },
                {
                  "nameOnMethod": "input",
                  "name": "input",
                  "type": "Volo.Abp.PermissionManagement.UpdatePermissionsDto",
                  "typeSimple": "Volo.Abp.PermissionManagement.UpdatePermissionsDto",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Body",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "System.Void",
                "typeSimple": "System.Void"
              }
            }
          }
        }
      }
    },
    "identity": {
      "rootPath": "identity",
      "remoteServiceName": "AbpIdentity",
      "controllers": {
        "Volo.Abp.Identity.IdentityRoleController": {
          "controllerName": "IdentityRole",
          "type": "Volo.Abp.Identity.IdentityRoleController",
          "interfaces": [
            {
              "type": "Volo.Abp.Identity.IIdentityRoleAppService"
            }
          ],
          "actions": {
            "GetAllListAsync": {
              "uniqueName": "GetAllListAsync",
              "name": "GetAllListAsync",
              "httpMethod": "GET",
              "url": "api/identity/roles/all",
              "supportedVersions": [],
              "parametersOnMethod": [],
              "parameters": [],
              "returnValue": {
                "type": "Volo.Abp.Application.Dtos.ListResultDto<Volo.Abp.Identity.IdentityRoleDto>",
                "typeSimple": "Volo.Abp.Application.Dtos.ListResultDto<Volo.Abp.Identity.IdentityRoleDto>"
              }
            },
            "GetListAsyncByInput": {
              "uniqueName": "GetListAsyncByInput",
              "name": "GetListAsync",
              "httpMethod": "GET",
              "url": "api/identity/roles",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "input",
                  "typeAsString": "Volo.Abp.Application.Dtos.PagedAndSortedResultRequestDto, Volo.Abp.Ddd.Application.Contracts",
                  "type": "Volo.Abp.Application.Dtos.PagedAndSortedResultRequestDto",
                  "typeSimple": "Volo.Abp.Application.Dtos.PagedAndSortedResultRequestDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "input",
                  "name": "Sorting",
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "SkipCount",
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "MaxResultCount",
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                }
              ],
              "returnValue": {
                "type": "Volo.Abp.Application.Dtos.PagedResultDto<Volo.Abp.Identity.IdentityRoleDto>",
                "typeSimple": "Volo.Abp.Application.Dtos.PagedResultDto<Volo.Abp.Identity.IdentityRoleDto>"
              }
            },
            "GetAsyncById": {
              "uniqueName": "GetAsyncById",
              "name": "GetAsync",
              "httpMethod": "GET",
              "url": "api/identity/roles/{id}",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "id",
                  "typeAsString": "System.Guid, System.Private.CoreLib",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "id",
                  "name": "id",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "Volo.Abp.Identity.IdentityRoleDto",
                "typeSimple": "Volo.Abp.Identity.IdentityRoleDto"
              }
            },
            "CreateAsyncByInput": {
              "uniqueName": "CreateAsyncByInput",
              "name": "CreateAsync",
              "httpMethod": "POST",
              "url": "api/identity/roles",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "input",
                  "typeAsString": "Volo.Abp.Identity.IdentityRoleCreateDto, Volo.Abp.Identity.Application.Contracts",
                  "type": "Volo.Abp.Identity.IdentityRoleCreateDto",
                  "typeSimple": "Volo.Abp.Identity.IdentityRoleCreateDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "input",
                  "name": "input",
                  "type": "Volo.Abp.Identity.IdentityRoleCreateDto",
                  "typeSimple": "Volo.Abp.Identity.IdentityRoleCreateDto",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Body",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "Volo.Abp.Identity.IdentityRoleDto",
                "typeSimple": "Volo.Abp.Identity.IdentityRoleDto"
              }
            },
            "UpdateAsyncByIdAndInput": {
              "uniqueName": "UpdateAsyncByIdAndInput",
              "name": "UpdateAsync",
              "httpMethod": "PUT",
              "url": "api/identity/roles/{id}",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "id",
                  "typeAsString": "System.Guid, System.Private.CoreLib",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                },
                {
                  "name": "input",
                  "typeAsString": "Volo.Abp.Identity.IdentityRoleUpdateDto, Volo.Abp.Identity.Application.Contracts",
                  "type": "Volo.Abp.Identity.IdentityRoleUpdateDto",
                  "typeSimple": "Volo.Abp.Identity.IdentityRoleUpdateDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "id",
                  "name": "id",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                },
                {
                  "nameOnMethod": "input",
                  "name": "input",
                  "type": "Volo.Abp.Identity.IdentityRoleUpdateDto",
                  "typeSimple": "Volo.Abp.Identity.IdentityRoleUpdateDto",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Body",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "Volo.Abp.Identity.IdentityRoleDto",
                "typeSimple": "Volo.Abp.Identity.IdentityRoleDto"
              }
            },
            "DeleteAsyncById": {
              "uniqueName": "DeleteAsyncById",
              "name": "DeleteAsync",
              "httpMethod": "DELETE",
              "url": "api/identity/roles/{id}",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "id",
                  "typeAsString": "System.Guid, System.Private.CoreLib",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "id",
                  "name": "id",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "System.Void",
                "typeSimple": "System.Void"
              }
            }
          }
        },
        "Volo.Abp.Identity.IdentityUserController": {
          "controllerName": "IdentityUser",
          "type": "Volo.Abp.Identity.IdentityUserController",
          "interfaces": [
            {
              "type": "Volo.Abp.Identity.IIdentityUserAppService"
            }
          ],
          "actions": {
            "GetAsyncById": {
              "uniqueName": "GetAsyncById",
              "name": "GetAsync",
              "httpMethod": "GET",
              "url": "api/identity/users/{id}",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "id",
                  "typeAsString": "System.Guid, System.Private.CoreLib",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "id",
                  "name": "id",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "Volo.Abp.Identity.IdentityUserDto",
                "typeSimple": "Volo.Abp.Identity.IdentityUserDto"
              }
            },
            "GetListAsyncByInput": {
              "uniqueName": "GetListAsyncByInput",
              "name": "GetListAsync",
              "httpMethod": "GET",
              "url": "api/identity/users",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "input",
                  "typeAsString": "Volo.Abp.Identity.GetIdentityUsersInput, Volo.Abp.Identity.Application.Contracts",
                  "type": "Volo.Abp.Identity.GetIdentityUsersInput",
                  "typeSimple": "Volo.Abp.Identity.GetIdentityUsersInput",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "input",
                  "name": "Filter",
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "Sorting",
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "SkipCount",
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "MaxResultCount",
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                }
              ],
              "returnValue": {
                "type": "Volo.Abp.Application.Dtos.PagedResultDto<Volo.Abp.Identity.IdentityUserDto>",
                "typeSimple": "Volo.Abp.Application.Dtos.PagedResultDto<Volo.Abp.Identity.IdentityUserDto>"
              }
            },
            "CreateAsyncByInput": {
              "uniqueName": "CreateAsyncByInput",
              "name": "CreateAsync",
              "httpMethod": "POST",
              "url": "api/identity/users",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "input",
                  "typeAsString": "Volo.Abp.Identity.IdentityUserCreateDto, Volo.Abp.Identity.Application.Contracts",
                  "type": "Volo.Abp.Identity.IdentityUserCreateDto",
                  "typeSimple": "Volo.Abp.Identity.IdentityUserCreateDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "input",
                  "name": "input",
                  "type": "Volo.Abp.Identity.IdentityUserCreateDto",
                  "typeSimple": "Volo.Abp.Identity.IdentityUserCreateDto",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Body",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "Volo.Abp.Identity.IdentityUserDto",
                "typeSimple": "Volo.Abp.Identity.IdentityUserDto"
              }
            },
            "UpdateAsyncByIdAndInput": {
              "uniqueName": "UpdateAsyncByIdAndInput",
              "name": "UpdateAsync",
              "httpMethod": "PUT",
              "url": "api/identity/users/{id}",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "id",
                  "typeAsString": "System.Guid, System.Private.CoreLib",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                },
                {
                  "name": "input",
                  "typeAsString": "Volo.Abp.Identity.IdentityUserUpdateDto, Volo.Abp.Identity.Application.Contracts",
                  "type": "Volo.Abp.Identity.IdentityUserUpdateDto",
                  "typeSimple": "Volo.Abp.Identity.IdentityUserUpdateDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "id",
                  "name": "id",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                },
                {
                  "nameOnMethod": "input",
                  "name": "input",
                  "type": "Volo.Abp.Identity.IdentityUserUpdateDto",
                  "typeSimple": "Volo.Abp.Identity.IdentityUserUpdateDto",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Body",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "Volo.Abp.Identity.IdentityUserDto",
                "typeSimple": "Volo.Abp.Identity.IdentityUserDto"
              }
            },
            "DeleteAsyncById": {
              "uniqueName": "DeleteAsyncById",
              "name": "DeleteAsync",
              "httpMethod": "DELETE",
              "url": "api/identity/users/{id}",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "id",
                  "typeAsString": "System.Guid, System.Private.CoreLib",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "id",
                  "name": "id",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "System.Void",
                "typeSimple": "System.Void"
              }
            },
            "GetRolesAsyncById": {
              "uniqueName": "GetRolesAsyncById",
              "name": "GetRolesAsync",
              "httpMethod": "GET",
              "url": "api/identity/users/{id}/roles",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "id",
                  "typeAsString": "System.Guid, System.Private.CoreLib",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "id",
                  "name": "id",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "Volo.Abp.Application.Dtos.ListResultDto<Volo.Abp.Identity.IdentityRoleDto>",
                "typeSimple": "Volo.Abp.Application.Dtos.ListResultDto<Volo.Abp.Identity.IdentityRoleDto>"
              }
            },
            "GetAssignableRolesAsync": {
              "uniqueName": "GetAssignableRolesAsync",
              "name": "GetAssignableRolesAsync",
              "httpMethod": "GET",
              "url": "api/identity/users/assignable-roles",
              "supportedVersions": [],
              "parametersOnMethod": [],
              "parameters": [],
              "returnValue": {
                "type": "Volo.Abp.Application.Dtos.ListResultDto<Volo.Abp.Identity.IdentityRoleDto>",
                "typeSimple": "Volo.Abp.Application.Dtos.ListResultDto<Volo.Abp.Identity.IdentityRoleDto>"
              }
            },
            "UpdateRolesAsyncByIdAndInput": {
              "uniqueName": "UpdateRolesAsyncByIdAndInput",
              "name": "UpdateRolesAsync",
              "httpMethod": "PUT",
              "url": "api/identity/users/{id}/roles",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "id",
                  "typeAsString": "System.Guid, System.Private.CoreLib",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                },
                {
                  "name": "input",
                  "typeAsString": "Volo.Abp.Identity.IdentityUserUpdateRolesDto, Volo.Abp.Identity.Application.Contracts",
                  "type": "Volo.Abp.Identity.IdentityUserUpdateRolesDto",
                  "typeSimple": "Volo.Abp.Identity.IdentityUserUpdateRolesDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "id",
                  "name": "id",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                },
                {
                  "nameOnMethod": "input",
                  "name": "input",
                  "type": "Volo.Abp.Identity.IdentityUserUpdateRolesDto",
                  "typeSimple": "Volo.Abp.Identity.IdentityUserUpdateRolesDto",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Body",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "System.Void",
                "typeSimple": "System.Void"
              }
            },
            "FindByUsernameAsyncByUserName": {
              "uniqueName": "FindByUsernameAsyncByUserName",
              "name": "FindByUsernameAsync",
              "httpMethod": "GET",
              "url": "api/identity/users/by-username/{userName}",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "userName",
                  "typeAsString": "System.String, System.Private.CoreLib",
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "userName",
                  "name": "userName",
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "Volo.Abp.Identity.IdentityUserDto",
                "typeSimple": "Volo.Abp.Identity.IdentityUserDto"
              }
            },
            "FindByEmailAsyncByEmail": {
              "uniqueName": "FindByEmailAsyncByEmail",
              "name": "FindByEmailAsync",
              "httpMethod": "GET",
              "url": "api/identity/users/by-email/{email}",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "email",
                  "typeAsString": "System.String, System.Private.CoreLib",
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "email",
                  "name": "email",
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "Volo.Abp.Identity.IdentityUserDto",
                "typeSimple": "Volo.Abp.Identity.IdentityUserDto"
              }
            }
          }
        },
        "Volo.Abp.Identity.IdentityUserLookupController": {
          "controllerName": "IdentityUserLookup",
          "type": "Volo.Abp.Identity.IdentityUserLookupController",
          "interfaces": [
            {
              "type": "Volo.Abp.Identity.IIdentityUserLookupAppService"
            }
          ],
          "actions": {
            "FindByIdAsyncById": {
              "uniqueName": "FindByIdAsyncById",
              "name": "FindByIdAsync",
              "httpMethod": "GET",
              "url": "api/identity/users/lookup/{id}",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "id",
                  "typeAsString": "System.Guid, System.Private.CoreLib",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "id",
                  "name": "id",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "Volo.Abp.Users.UserData",
                "typeSimple": "Volo.Abp.Users.UserData"
              }
            },
            "FindByUserNameAsyncByUserName": {
              "uniqueName": "FindByUserNameAsyncByUserName",
              "name": "FindByUserNameAsync",
              "httpMethod": "GET",
              "url": "api/identity/users/lookup/by-username/{userName}",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "userName",
                  "typeAsString": "System.String, System.Private.CoreLib",
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "userName",
                  "name": "userName",
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "Volo.Abp.Users.UserData",
                "typeSimple": "Volo.Abp.Users.UserData"
              }
            },
            "SearchAsyncByInput": {
              "uniqueName": "SearchAsyncByInput",
              "name": "SearchAsync",
              "httpMethod": "GET",
              "url": "api/identity/users/lookup/search",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "input",
                  "typeAsString": "Volo.Abp.Identity.UserLookupSearchInputDto, Volo.Abp.Identity.Application.Contracts",
                  "type": "Volo.Abp.Identity.UserLookupSearchInputDto",
                  "typeSimple": "Volo.Abp.Identity.UserLookupSearchInputDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "input",
                  "name": "Filter",
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "Sorting",
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "SkipCount",
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "MaxResultCount",
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                }
              ],
              "returnValue": {
                "type": "Volo.Abp.Application.Dtos.ListResultDto<Volo.Abp.Users.UserData>",
                "typeSimple": "Volo.Abp.Application.Dtos.ListResultDto<Volo.Abp.Users.UserData>"
              }
            },
            "GetCountAsyncByInput": {
              "uniqueName": "GetCountAsyncByInput",
              "name": "GetCountAsync",
              "httpMethod": "GET",
              "url": "api/identity/users/lookup/count",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "input",
                  "typeAsString": "Volo.Abp.Identity.UserLookupCountInputDto, Volo.Abp.Identity.Application.Contracts",
                  "type": "Volo.Abp.Identity.UserLookupCountInputDto",
                  "typeSimple": "Volo.Abp.Identity.UserLookupCountInputDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "input",
                  "name": "Filter",
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                }
              ],
              "returnValue": {
                "type": "System.Int64",
                "typeSimple": "number"
              }
            }
          }
        },
        "Volo.Abp.Identity.ProfileController": {
          "controllerName": "Profile",
          "type": "Volo.Abp.Identity.ProfileController",
          "interfaces": [
            {
              "type": "Volo.Abp.Identity.IProfileAppService"
            }
          ],
          "actions": {
            "GetAsync": {
              "uniqueName": "GetAsync",
              "name": "GetAsync",
              "httpMethod": "GET",
              "url": "api/identity/my-profile",
              "supportedVersions": [],
              "parametersOnMethod": [],
              "parameters": [],
              "returnValue": {
                "type": "Volo.Abp.Identity.ProfileDto",
                "typeSimple": "Volo.Abp.Identity.ProfileDto"
              }
            },
            "UpdateAsyncByInput": {
              "uniqueName": "UpdateAsyncByInput",
              "name": "UpdateAsync",
              "httpMethod": "PUT",
              "url": "api/identity/my-profile",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "input",
                  "typeAsString": "Volo.Abp.Identity.UpdateProfileDto, Volo.Abp.Identity.Application.Contracts",
                  "type": "Volo.Abp.Identity.UpdateProfileDto",
                  "typeSimple": "Volo.Abp.Identity.UpdateProfileDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "input",
                  "name": "input",
                  "type": "Volo.Abp.Identity.UpdateProfileDto",
                  "typeSimple": "Volo.Abp.Identity.UpdateProfileDto",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Body",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "Volo.Abp.Identity.ProfileDto",
                "typeSimple": "Volo.Abp.Identity.ProfileDto"
              }
            },
            "ChangePasswordAsyncByInput": {
              "uniqueName": "ChangePasswordAsyncByInput",
              "name": "ChangePasswordAsync",
              "httpMethod": "POST",
              "url": "api/identity/my-profile/change-password",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "input",
                  "typeAsString": "Volo.Abp.Identity.ChangePasswordInput, Volo.Abp.Identity.Application.Contracts",
                  "type": "Volo.Abp.Identity.ChangePasswordInput",
                  "typeSimple": "Volo.Abp.Identity.ChangePasswordInput",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "input",
                  "name": "input",
                  "type": "Volo.Abp.Identity.ChangePasswordInput",
                  "typeSimple": "Volo.Abp.Identity.ChangePasswordInput",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Body",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "System.Void",
                "typeSimple": "System.Void"
              }
            }
          }
        }
      }
    }
  },
  "types": {
    "HDHDC.Speedwave.DTOs.CategoryDto": {
      "baseType": "Volo.Abp.Application.Dtos.EntityDto<System.Int32>",
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "CategoryName",
          "type": "System.String",
          "typeSimple": "string"
        },
        {
          "name": "CategoryDescription",
          "type": "System.String",
          "typeSimple": "string"
        },
        {
          "name": "CategoryThumbnail",
          "type": "System.String",
          "typeSimple": "string"
        }
      ]
    },
    "Volo.Abp.Application.Dtos.EntityDto<T0>": {
      "baseType": "Volo.Abp.Application.Dtos.EntityDto",
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": [
        "TKey"
      ],
      "properties": [
        {
          "name": "Id",
          "type": "TKey",
          "typeSimple": "TKey"
        }
      ]
    },
    "Volo.Abp.Application.Dtos.EntityDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": []
    },
    "HDHDC.Speedwave.DTOs.CategoryCreateDto": {
      "baseType": "Volo.Abp.Application.Dtos.EntityDto",
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "CategoryName",
          "type": "System.String",
          "typeSimple": "string"
        },
        {
          "name": "CategoryDescription",
          "type": "System.String",
          "typeSimple": "string"
        },
        {
          "name": "ThumbnailBase64",
          "type": "System.String",
          "typeSimple": "string"
        }
      ]
    },
    "HDHDC.Speedwave.DTOs.CategoryUpdateDto": {
      "baseType": "Volo.Abp.Application.Dtos.EntityDto<System.Int32>",
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "CategoryName",
          "type": "System.String",
          "typeSimple": "string"
        },
        {
          "name": "CategoryDescription",
          "type": "System.String",
          "typeSimple": "string"
        },
        {
          "name": "ThumbnailBase64",
          "type": "System.String",
          "typeSimple": "string"
        }
      ]
    },
    "HDHDC.Speedwave.DTOs.ThumbnailDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Base64DataUrl",
          "type": "System.String",
          "typeSimple": "string"
        }
      ]
    },
    "HDHDC.Speedwave.DTOs.CityDto": {
      "baseType": "Volo.Abp.Application.Dtos.EntityDto<System.Int32>",
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "CityName",
          "type": "System.String",
          "typeSimple": "string"
        },
        {
          "name": "Geolocation",
          "type": "System.String",
          "typeSimple": "string"
        },
        {
          "name": "DistrictID",
          "type": "System.String",
          "typeSimple": "string"
        },
        {
          "name": "CreatorId",
          "type": "System.Guid",
          "typeSimple": "string"
        },
        {
          "name": "CreationTime",
          "type": "System.DateTime",
          "typeSimple": "string"
        },
        {
          "name": "LastModifierId",
          "type": "System.Guid?",
          "typeSimple": "string?"
        },
        {
          "name": "LastModificationTime",
          "type": "System.DateTime?",
          "typeSimple": "string?"
        },
        {
          "name": "DeleterId",
          "type": "System.Guid?",
          "typeSimple": "string?"
        },
        {
          "name": "DeletionTime",
          "type": "System.DateTime?",
          "typeSimple": "string?"
        },
        {
          "name": "IsDeleted",
          "type": "System.Boolean",
          "typeSimple": "boolean"
        },
        {
          "name": "ConcurrencyStamp",
          "type": "System.String",
          "typeSimple": "string"
        }
      ]
    },
    "HDHDC.Speedwave.DTOs.CityCreateDto": {
      "baseType": "Volo.Abp.Application.Dtos.EntityDto",
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "CityName",
          "type": "System.String",
          "typeSimple": "string"
        },
        {
          "name": "Geolocation",
          "type": "System.String",
          "typeSimple": "string"
        },
        {
          "name": "DistrictID",
          "type": "System.String",
          "typeSimple": "string"
        }
      ]
    },
    "HDHDC.Speedwave.DTOs.CityUpdateDto": {
      "baseType": "Volo.Abp.Application.Dtos.EntityDto<System.Int32>",
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "CityName",
          "type": "System.String",
          "typeSimple": "string"
        },
        {
          "name": "Geolocation",
          "type": "System.String",
          "typeSimple": "string"
        }
      ]
    },
    "HDHDC.Speedwave.DTOs.DeliveryScheduleDto": {
      "baseType": "Volo.Abp.Application.Dtos.EntityDto<System.Int32>",
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "DeliveryScheduleName",
          "type": "System.String",
          "typeSimple": "string"
        },
        {
          "name": "TimePeriod",
          "type": "System.TimeSpan",
          "typeSimple": "string"
        },
        {
          "name": "CostIncreasePercentage",
          "type": "System.Single",
          "typeSimple": "number"
        }
      ]
    },
    "HDHDC.Speedwave.DTOs.DeliveryScheduleCreateUpdateDto": {
      "baseType": "Volo.Abp.Application.Dtos.EntityDto",
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "DeliveryScheduleName",
          "type": "System.String",
          "typeSimple": "string"
        },
        {
          "name": "TimePeriod",
          "type": "System.TimeSpan",
          "typeSimple": "string"
        },
        {
          "name": "CostIncreasePercentage",
          "type": "System.Single",
          "typeSimple": "number"
        }
      ]
    },
    "HDHDC.Speedwave.DTOs.DistanceChargeDto": {
      "baseType": "Volo.Abp.Application.Dtos.EntityDto<System.Int32>",
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Charge",
          "type": "System.Single",
          "typeSimple": "number"
        },
        {
          "name": "From",
          "type": "System.UInt32",
          "typeSimple": "number"
        }
      ]
    },
    "HDHDC.Speedwave.DTOs.DistanceChargeCreateUpdateDto": {
      "baseType": "Volo.Abp.Application.Dtos.EntityDto",
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Charge",
          "type": "System.Single",
          "typeSimple": "number"
        },
        {
          "name": "From",
          "type": "System.UInt32",
          "typeSimple": "number"
        }
      ]
    },
    "HDHDC.Speedwave.DTOs.DistrictDto": {
      "baseType": "Volo.Abp.Application.Dtos.EntityDto<System.String>",
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "ProvinceID",
          "type": "System.String",
          "typeSimple": "string"
        },
        {
          "name": "CreatorId",
          "type": "System.Guid",
          "typeSimple": "string"
        },
        {
          "name": "CreationTime",
          "type": "System.DateTime",
          "typeSimple": "string"
        },
        {
          "name": "DeleterId",
          "type": "System.Guid?",
          "typeSimple": "string?"
        },
        {
          "name": "DeletionTime",
          "type": "System.DateTime?",
          "typeSimple": "string?"
        },
        {
          "name": "IsDeleted",
          "type": "System.Boolean",
          "typeSimple": "boolean"
        },
        {
          "name": "ConcurrencyStamp",
          "type": "System.String",
          "typeSimple": "string"
        }
      ]
    },
    "HDHDC.Speedwave.DTOs.DistrictCreateDto": {
      "baseType": "Volo.Abp.Application.Dtos.EntityDto<System.String>",
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Id",
          "type": "System.String",
          "typeSimple": "string"
        },
        {
          "name": "ProvinceID",
          "type": "System.String",
          "typeSimple": "string"
        }
      ]
    },
    "HDHDC.Speedwave.DTOs.ItemDto": {
      "baseType": "Volo.Abp.Application.Dtos.EntityDto<System.Int32>",
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "ItemName",
          "type": "System.String",
          "typeSimple": "string"
        },
        {
          "name": "ItemDescription",
          "type": "System.String",
          "typeSimple": "string"
        },
        {
          "name": "ItemPrice",
          "type": "System.Single",
          "typeSimple": "number"
        },
        {
          "name": "ItemThumbnail",
          "type": "System.String",
          "typeSimple": "string"
        },
        {
          "name": "QuantityId",
          "type": "System.Int32",
          "typeSimple": "number"
        },
        {
          "name": "MinRequiredTimeId",
          "type": "System.Int32",
          "typeSimple": "number"
        },
        {
          "name": "NormalizedQuantityLabel",
          "type": "System.String",
          "typeSimple": "string"
        },
        {
          "name": "NormalizedMinRequiredTime",
          "type": "System.String",
          "typeSimple": "string"
        }
      ]
    },
    "HDHDC.Speedwave.DTOs.ItemCreateDto": {
      "baseType": "Volo.Abp.Application.Dtos.EntityDto",
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "ItemName",
          "type": "System.String",
          "typeSimple": "string"
        },
        {
          "name": "ItemDescription",
          "type": "System.String",
          "typeSimple": "string"
        },
        {
          "name": "ItemPrice",
          "type": "System.Single",
          "typeSimple": "number"
        },
        {
          "name": "QuantityId",
          "type": "System.Int32",
          "typeSimple": "number"
        },
        {
          "name": "MinRequiredTimeId",
          "type": "System.Int32",
          "typeSimple": "number"
        },
        {
          "name": "ThumbnailBase64",
          "type": "System.String",
          "typeSimple": "string"
        }
      ]
    },
    "HDHDC.Speedwave.DTOs.ItemUpdateDto": {
      "baseType": "Volo.Abp.Application.Dtos.EntityDto",
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "ItemName",
          "type": "System.String",
          "typeSimple": "string"
        },
        {
          "name": "ItemDescription",
          "type": "System.String",
          "typeSimple": "string"
        },
        {
          "name": "ItemPrice",
          "type": "System.Single",
          "typeSimple": "number"
        },
        {
          "name": "QuantityId",
          "type": "System.Int32",
          "typeSimple": "number"
        },
        {
          "name": "MinRequiredTimeId",
          "type": "System.Int32",
          "typeSimple": "number"
        },
        {
          "name": "ItemThumbnail",
          "type": "System.String",
          "typeSimple": "string"
        }
      ]
    },
    "HDHDC.Speedwave.DTOs.ItemCategoryDto": {
      "baseType": "Volo.Abp.Application.Dtos.EntityDto",
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "ItemID",
          "type": "System.Int32",
          "typeSimple": "number"
        },
        {
          "name": "CategoryID",
          "type": "System.Int32",
          "typeSimple": "number"
        }
      ]
    },
    "HDHDC.Speedwave.SpeedwaveAppServices.ItemCategoryKey": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "ItemID",
          "type": "System.Int32",
          "typeSimple": "number"
        },
        {
          "name": "CategoryID",
          "type": "System.Int32",
          "typeSimple": "number"
        }
      ]
    },
    "HDHDC.Speedwave.DTOs.BlobFileDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "FileName",
          "type": "System.String",
          "typeSimple": "string"
        },
        {
          "name": "Base64DataUri",
          "type": "System.String",
          "typeSimple": "string"
        }
      ]
    },
    "HDHDC.Speedwave.DTOs.ManagerDto": {
      "baseType": "Volo.Abp.Application.Dtos.EntityDto<System.Int32>",
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "UserID",
          "type": "System.Guid",
          "typeSimple": "string"
        },
        {
          "name": "DistrictID",
          "type": "System.String",
          "typeSimple": "string"
        },
        {
          "name": "Status",
          "type": "System.String",
          "typeSimple": "string"
        },
        {
          "name": "AppUser",
          "type": "HDHDC.Speedwave.DTOs.AppUserDto",
          "typeSimple": "HDHDC.Speedwave.DTOs.AppUserDto"
        },
        {
          "name": "CreatorId",
          "type": "System.Guid",
          "typeSimple": "string"
        },
        {
          "name": "CreationTime",
          "type": "System.DateTime",
          "typeSimple": "string"
        },
        {
          "name": "LastModifierId",
          "type": "System.Guid?",
          "typeSimple": "string?"
        },
        {
          "name": "LastModificationTime",
          "type": "System.DateTime?",
          "typeSimple": "string?"
        },
        {
          "name": "DeleterId",
          "type": "System.Guid?",
          "typeSimple": "string?"
        },
        {
          "name": "DeletionTime",
          "type": "System.DateTime?",
          "typeSimple": "string?"
        },
        {
          "name": "IsDeleted",
          "type": "System.Boolean",
          "typeSimple": "boolean"
        },
        {
          "name": "ConcurrencyStamp",
          "type": "System.String",
          "typeSimple": "string"
        }
      ]
    },
    "HDHDC.Speedwave.DTOs.AppUserDto": {
      "baseType": "Volo.Abp.Application.Dtos.EntityDto<System.Guid>",
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "TenantId",
          "type": "System.Guid?",
          "typeSimple": "string?"
        },
        {
          "name": "UserName",
          "type": "System.String",
          "typeSimple": "string"
        },
        {
          "name": "Name",
          "type": "System.String",
          "typeSimple": "string"
        },
        {
          "name": "Surname",
          "type": "System.String",
          "typeSimple": "string"
        },
        {
          "name": "Email",
          "type": "System.String",
          "typeSimple": "string"
        },
        {
          "name": "EmailConfirmed",
          "type": "System.Boolean",
          "typeSimple": "boolean"
        },
        {
          "name": "PhoneNumber",
          "type": "System.String",
          "typeSimple": "string"
        },
        {
          "name": "PhoneNumberConfirmed",
          "type": "System.Boolean",
          "typeSimple": "boolean"
        }
      ]
    },
    "HDHDC.Speedwave.DTOs.ManagerCreateDto": {
      "baseType": "Volo.Abp.Application.Dtos.EntityDto",
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "DistrictID",
          "type": "System.String",
          "typeSimple": "string"
        },
        {
          "name": "UserCreateDto",
          "type": "HDHDC.Speedwave.DTOs.UserCreateDto",
          "typeSimple": "HDHDC.Speedwave.DTOs.UserCreateDto"
        }
      ]
    },
    "HDHDC.Speedwave.DTOs.UserCreateDto": {
      "baseType": "Volo.Abp.Application.Dtos.EntityDto",
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "TenantId",
          "type": "System.Guid?",
          "typeSimple": "string?"
        },
        {
          "name": "UserName",
          "type": "System.String",
          "typeSimple": "string"
        },
        {
          "name": "EmailAddress",
          "type": "System.String",
          "typeSimple": "string"
        },
        {
          "name": "Password",
          "type": "System.String",
          "typeSimple": "string"
        },
        {
          "name": "PhoneNumber",
          "type": "System.String",
          "typeSimple": "string"
        },
        {
          "name": "Name",
          "type": "System.String",
          "typeSimple": "string"
        },
        {
          "name": "Surname",
          "type": "System.String",
          "typeSimple": "string"
        },
        {
          "name": "EmailConfirmed",
          "type": "System.Boolean",
          "typeSimple": "boolean"
        },
        {
          "name": "PhoneNumberConfirmed",
          "type": "System.Boolean",
          "typeSimple": "boolean"
        }
      ]
    },
    "HDHDC.Speedwave.DTOs.ManagerUpdateDto": {
      "baseType": "Volo.Abp.Application.Dtos.EntityDto",
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "DistrictID",
          "type": "System.String",
          "typeSimple": "string"
        }
      ]
    },
    "HDHDC.Speedwave.DTOs.MinRequiredTimeDto": {
      "baseType": "Volo.Abp.Application.Dtos.EntityDto<System.Int32>",
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "MinRequiredTime",
          "type": "System.TimeSpan",
          "typeSimple": "string"
        }
      ]
    },
    "HDHDC.Speedwave.DTOs.OrderDto": {
      "baseType": "Volo.Abp.Application.Dtos.EntityDto<System.Int32>",
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "PaymentID",
          "type": "System.Int32",
          "typeSimple": "number"
        },
        {
          "name": "DeliveryScheduleID",
          "type": "System.Int32",
          "typeSimple": "number"
        },
        {
          "name": "AddressID",
          "type": "System.Int32",
          "typeSimple": "number"
        },
        {
          "name": "PromotionID",
          "type": "System.Int32?",
          "typeSimple": "number?"
        },
        {
          "name": "OrderStatus",
          "type": "System.String",
          "typeSimple": "string"
        },
        {
          "name": "PaymentDto",
          "type": "HDHDC.Speedwave.DTOs.PaymentDto",
          "typeSimple": "HDHDC.Speedwave.DTOs.PaymentDto"
        },
        {
          "name": "DeliveryScheduleDto",
          "type": "HDHDC.Speedwave.DTOs.DeliveryScheduleDto",
          "typeSimple": "HDHDC.Speedwave.DTOs.DeliveryScheduleDto"
        },
        {
          "name": "AddressDto",
          "type": "HDHDC.Speedwave.DTOs.AddressDto",
          "typeSimple": "HDHDC.Speedwave.DTOs.AddressDto"
        },
        {
          "name": "PromotionDto",
          "type": "HDHDC.Speedwave.DTOs.PromotionDto",
          "typeSimple": "HDHDC.Speedwave.DTOs.PromotionDto"
        },
        {
          "name": "RiderDto",
          "type": "HDHDC.Speedwave.DTOs.RiderDto",
          "typeSimple": "HDHDC.Speedwave.DTOs.RiderDto"
        },
        {
          "name": "OrderItemDtos",
          "type": "[HDHDC.Speedwave.DTOs.OrderItemDto]",
          "typeSimple": "[HDHDC.Speedwave.DTOs.OrderItemDto]"
        }
      ]
    },
    "HDHDC.Speedwave.DTOs.PaymentDto": {
      "baseType": "Volo.Abp.Application.Dtos.EntityDto<System.Int32>",
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "DeliveryChargeID",
          "type": "System.Int32",
          "typeSimple": "number"
        },
        {
          "name": "OrderID",
          "type": "System.Int32",
          "typeSimple": "number"
        },
        {
          "name": "Nettotal",
          "type": "System.Single",
          "typeSimple": "number"
        },
        {
          "name": "Subtotal",
          "type": "System.Single",
          "typeSimple": "number"
        },
        {
          "name": "TotalPaid",
          "type": "System.Single",
          "typeSimple": "number"
        },
        {
          "name": "PaymentStatus",
          "type": "System.String",
          "typeSimple": "string"
        },
        {
          "name": "DeliveryChargeDto",
          "type": "HDHDC.Speedwave.DTOs.DeliveryChargeDto",
          "typeSimple": "HDHDC.Speedwave.DTOs.DeliveryChargeDto"
        }
      ]
    },
    "HDHDC.Speedwave.DTOs.DeliveryChargeDto": {
      "baseType": "Volo.Abp.Application.Dtos.EntityDto<System.Int32>",
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "DistanceChargeID",
          "type": "System.Int32",
          "typeSimple": "number"
        },
        {
          "name": "SubtotalPercentageID",
          "type": "System.Int32",
          "typeSimple": "number"
        },
        {
          "name": "DeliveryScheduleID",
          "type": "System.Int32",
          "typeSimple": "number"
        },
        {
          "name": "DistanceCharge",
          "type": "System.Single",
          "typeSimple": "number"
        },
        {
          "name": "SubtotalPercentage",
          "type": "System.Single",
          "typeSimple": "number"
        },
        {
          "name": "IncreasedCost",
          "type": "System.Single",
          "typeSimple": "number"
        },
        {
          "name": "Subtotal",
          "type": "System.Single",
          "typeSimple": "number"
        },
        {
          "name": "Nettotal",
          "type": "System.Single",
          "typeSimple": "number"
        },
        {
          "name": "Charge",
          "type": "System.Single",
          "typeSimple": "number"
        }
      ]
    },
    "HDHDC.Speedwave.DTOs.AddressDto": {
      "baseType": "Volo.Abp.Application.Dtos.EntityDto<System.Int32>",
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "AddressLine",
          "type": "System.String",
          "typeSimple": "string"
        },
        {
          "name": "CityID",
          "type": "System.Int32",
          "typeSimple": "number"
        },
        {
          "name": "CustomerID",
          "type": "System.Int32",
          "typeSimple": "number"
        },
        {
          "name": "Geolocation",
          "type": "System.String",
          "typeSimple": "string"
        },
        {
          "name": "Note",
          "type": "System.String",
          "typeSimple": "string"
        },
        {
          "name": "CityDto",
          "type": "HDHDC.Speedwave.DTOs.CityDto",
          "typeSimple": "HDHDC.Speedwave.DTOs.CityDto"
        }
      ]
    },
    "HDHDC.Speedwave.DTOs.PromotionDto": {
      "baseType": "Volo.Abp.Application.Dtos.EntityDto<System.Int32>",
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "IsOneTime",
          "type": "System.Boolean",
          "typeSimple": "boolean"
        },
        {
          "name": "NoOfTimes",
          "type": "System.UInt32",
          "typeSimple": "number"
        },
        {
          "name": "ExpireDate",
          "type": "System.DateTime",
          "typeSimple": "string"
        }
      ]
    },
    "HDHDC.Speedwave.DTOs.RiderDto": {
      "baseType": "Volo.Abp.Application.Dtos.EntityDto<System.Int32>",
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "UserID",
          "type": "System.Guid",
          "typeSimple": "string"
        },
        {
          "name": "Geolocation",
          "type": "System.String",
          "typeSimple": "string"
        },
        {
          "name": "CityID",
          "type": "System.Int32",
          "typeSimple": "number"
        },
        {
          "name": "Status",
          "type": "System.String",
          "typeSimple": "string"
        },
        {
          "name": "AppUser",
          "type": "HDHDC.Speedwave.DTOs.AppUserDto",
          "typeSimple": "HDHDC.Speedwave.DTOs.AppUserDto"
        },
        {
          "name": "CityDto",
          "type": "HDHDC.Speedwave.DTOs.CityDto",
          "typeSimple": "HDHDC.Speedwave.DTOs.CityDto"
        },
        {
          "name": "CreationTime",
          "type": "System.DateTime",
          "typeSimple": "string"
        },
        {
          "name": "LastModifierId",
          "type": "System.Guid?",
          "typeSimple": "string?"
        },
        {
          "name": "LastModificationTime",
          "type": "System.DateTime?",
          "typeSimple": "string?"
        },
        {
          "name": "DeleterId",
          "type": "System.Guid?",
          "typeSimple": "string?"
        },
        {
          "name": "DeletionTime",
          "type": "System.DateTime?",
          "typeSimple": "string?"
        },
        {
          "name": "IsDeleted",
          "type": "System.Boolean",
          "typeSimple": "boolean"
        },
        {
          "name": "ConcurrencyStamp",
          "type": "System.String",
          "typeSimple": "string"
        }
      ]
    },
    "HDHDC.Speedwave.DTOs.OrderItemDto": {
      "baseType": "Volo.Abp.Application.Dtos.EntityDto",
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "OrderID",
          "type": "System.Int32",
          "typeSimple": "number"
        },
        {
          "name": "ItemID",
          "type": "System.Int32",
          "typeSimple": "number"
        },
        {
          "name": "ItemPrice",
          "type": "System.Single",
          "typeSimple": "number"
        },
        {
          "name": "Quantity",
          "type": "System.UInt32",
          "typeSimple": "number"
        },
        {
          "name": "ItemDto",
          "type": "HDHDC.Speedwave.DTOs.ItemDto",
          "typeSimple": "HDHDC.Speedwave.DTOs.ItemDto"
        }
      ]
    },
    "HDHDC.Speedwave.DTOs.CartItemDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "ItemID",
          "type": "System.Int32",
          "typeSimple": "number"
        },
        {
          "name": "Qty",
          "type": "System.Int32",
          "typeSimple": "number"
        }
      ]
    },
    "HDHDC.Speedwave.DTOs.OrderCreateDto": {
      "baseType": "Volo.Abp.Application.Dtos.EntityDto",
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "AddressID",
          "type": "System.Int32",
          "typeSimple": "number"
        },
        {
          "name": "DeliveryScheduleID",
          "type": "System.Int32",
          "typeSimple": "number"
        },
        {
          "name": "PromotionID",
          "type": "System.Int32?",
          "typeSimple": "number?"
        },
        {
          "name": "Items",
          "type": "[HDHDC.Speedwave.DTOs.CartItemDto]",
          "typeSimple": "[HDHDC.Speedwave.DTOs.CartItemDto]"
        }
      ]
    },
    "HDHDC.Speedwave.DTOs.PaymentDetailDto": {
      "baseType": "Volo.Abp.Application.Dtos.EntityDto<System.Int32>",
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "PaymentID",
          "type": "System.Int32",
          "typeSimple": "number"
        },
        {
          "name": "PaymentMethod",
          "type": "System.String",
          "typeSimple": "string"
        },
        {
          "name": "TotalPaid",
          "type": "System.Single",
          "typeSimple": "number"
        }
      ]
    },
    "HDHDC.Speedwave.DTOs.CancellationReasonDto": {
      "baseType": "Volo.Abp.Application.Dtos.EntityDto<System.Int32>",
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "CancellationReason",
          "type": "System.String",
          "typeSimple": "string"
        },
        {
          "name": "Description",
          "type": "System.String",
          "typeSimple": "string"
        }
      ]
    },
    "HDHDC.Speedwave.DTOs.CancelledOrderDto": {
      "baseType": "Volo.Abp.Application.Dtos.EntityDto<System.Int32>",
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "CancellationReasonId",
          "type": "System.Int32",
          "typeSimple": "number"
        },
        {
          "name": "Description",
          "type": "System.String",
          "typeSimple": "string"
        },
        {
          "name": "CancellationReasonDto",
          "type": "HDHDC.Speedwave.DTOs.CancellationReasonDto",
          "typeSimple": "HDHDC.Speedwave.DTOs.CancellationReasonDto"
        },
        {
          "name": "OrderDto",
          "type": "HDHDC.Speedwave.DTOs.OrderDto",
          "typeSimple": "HDHDC.Speedwave.DTOs.OrderDto"
        }
      ]
    },
    "HDHDC.Speedwave.DTOs.PromotionCreateDto": {
      "baseType": "Volo.Abp.Application.Dtos.EntityDto",
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "IsOneTime",
          "type": "System.Boolean",
          "typeSimple": "boolean"
        },
        {
          "name": "NoOfTimes",
          "type": "System.Int32",
          "typeSimple": "number"
        },
        {
          "name": "ExpireDate",
          "type": "System.DateTime",
          "typeSimple": "string"
        }
      ]
    },
    "HDHDC.Speedwave.DTOs.PromotionUpdateDto": {
      "baseType": "Volo.Abp.Application.Dtos.EntityDto<System.Int32>",
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "NoOfTimes",
          "type": "System.Int32",
          "typeSimple": "number"
        },
        {
          "name": "ExpireDate",
          "type": "System.DateTime",
          "typeSimple": "string"
        }
      ]
    },
    "HDHDC.Speedwave.DTOs.ProvinceDto": {
      "baseType": "Volo.Abp.Application.Dtos.EntityDto<System.String>",
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Id",
          "type": "System.String",
          "typeSimple": "string"
        }
      ]
    },
    "HDHDC.Speedwave.DTOs.QuantityDto": {
      "baseType": "Volo.Abp.Application.Dtos.EntityDto<System.Int32>",
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Quantity",
          "type": "System.Single",
          "typeSimple": "number"
        },
        {
          "name": "UnitID",
          "type": "System.String",
          "typeSimple": "string"
        },
        {
          "name": "NormalizedQuantityLabel",
          "type": "System.String",
          "typeSimple": "string"
        }
      ]
    },
    "HDHDC.Speedwave.DTOs.RiderCreateDto": {
      "baseType": "Volo.Abp.Application.Dtos.EntityDto",
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "UserID",
          "type": "System.Guid",
          "typeSimple": "string"
        },
        {
          "name": "Geolocation",
          "type": "System.String",
          "typeSimple": "string"
        },
        {
          "name": "CityID",
          "type": "System.Int32",
          "typeSimple": "number"
        },
        {
          "name": "UserCreateDto",
          "type": "HDHDC.Speedwave.DTOs.UserCreateDto",
          "typeSimple": "HDHDC.Speedwave.DTOs.UserCreateDto"
        },
        {
          "name": "Status",
          "type": "System.String",
          "typeSimple": "string"
        }
      ]
    },
    "HDHDC.Speedwave.DTOs.RiderUpdateDto": {
      "baseType": "Volo.Abp.Application.Dtos.EntityDto",
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Geolocation",
          "type": "System.String",
          "typeSimple": "string"
        },
        {
          "name": "CityID",
          "type": "System.Int32",
          "typeSimple": "number"
        },
        {
          "name": "Status",
          "type": "System.String",
          "typeSimple": "string"
        }
      ]
    },
    "HDHDC.Speedwave.DTOs.SlideShowPictureDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Name",
          "type": "System.String",
          "typeSimple": "string"
        },
        {
          "name": "Base64Picture",
          "type": "System.String",
          "typeSimple": "string"
        },
        {
          "name": "Uri",
          "type": "System.Uri",
          "typeSimple": "System.Uri"
        }
      ]
    },
    "System.Uri": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "AbsolutePath",
          "type": "System.String",
          "typeSimple": "string"
        },
        {
          "name": "AbsoluteUri",
          "type": "System.String",
          "typeSimple": "string"
        },
        {
          "name": "LocalPath",
          "type": "System.String",
          "typeSimple": "string"
        },
        {
          "name": "Authority",
          "type": "System.String",
          "typeSimple": "string"
        },
        {
          "name": "HostNameType",
          "type": "System.UriHostNameType",
          "typeSimple": "System.UriHostNameType"
        },
        {
          "name": "IsDefaultPort",
          "type": "System.Boolean",
          "typeSimple": "boolean"
        },
        {
          "name": "IsFile",
          "type": "System.Boolean",
          "typeSimple": "boolean"
        },
        {
          "name": "IsLoopback",
          "type": "System.Boolean",
          "typeSimple": "boolean"
        },
        {
          "name": "PathAndQuery",
          "type": "System.String",
          "typeSimple": "string"
        },
        {
          "name": "Segments",
          "type": "[System.String]",
          "typeSimple": "[string]"
        },
        {
          "name": "IsUnc",
          "type": "System.Boolean",
          "typeSimple": "boolean"
        },
        {
          "name": "Host",
          "type": "System.String",
          "typeSimple": "string"
        },
        {
          "name": "Port",
          "type": "System.Int32",
          "typeSimple": "number"
        },
        {
          "name": "Query",
          "type": "System.String",
          "typeSimple": "string"
        },
        {
          "name": "Fragment",
          "type": "System.String",
          "typeSimple": "string"
        },
        {
          "name": "Scheme",
          "type": "System.String",
          "typeSimple": "string"
        },
        {
          "name": "OriginalString",
          "type": "System.String",
          "typeSimple": "string"
        },
        {
          "name": "DnsSafeHost",
          "type": "System.String",
          "typeSimple": "string"
        },
        {
          "name": "IdnHost",
          "type": "System.String",
          "typeSimple": "string"
        },
        {
          "name": "IsAbsoluteUri",
          "type": "System.Boolean",
          "typeSimple": "boolean"
        },
        {
          "name": "UserEscaped",
          "type": "System.Boolean",
          "typeSimple": "boolean"
        },
        {
          "name": "UserInfo",
          "type": "System.String",
          "typeSimple": "string"
        }
      ]
    },
    "System.UriHostNameType": {
      "baseType": "System.Enum",
      "isEnum": true,
      "enumNames": [
        "Unknown",
        "Basic",
        "Dns",
        "IPv4",
        "IPv6"
      ],
      "enumValues": [
        0,
        1,
        2,
        3,
        4
      ],
      "genericArguments": null,
      "properties": null
    },
    "HDHDC.Speedwave.DTOs.StoreBranchDto": {
      "baseType": "Volo.Abp.Application.Dtos.EntityDto<System.Int32>",
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "StoreChainID",
          "type": "System.Int32",
          "typeSimple": "number"
        },
        {
          "name": "CityID",
          "type": "System.Int32",
          "typeSimple": "number"
        },
        {
          "name": "CityDto",
          "type": "HDHDC.Speedwave.DTOs.CityDto",
          "typeSimple": "HDHDC.Speedwave.DTOs.CityDto"
        },
        {
          "name": "Geolocation",
          "type": "System.String",
          "typeSimple": "string"
        },
        {
          "name": "ContactNo01",
          "type": "System.String",
          "typeSimple": "string"
        },
        {
          "name": "ContactNo02",
          "type": "System.String",
          "typeSimple": "string"
        }
      ]
    },
    "HDHDC.Speedwave.DTOs.StoreBranchCreateDto": {
      "baseType": "Volo.Abp.Application.Dtos.EntityDto",
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "StoreChainID",
          "type": "System.Int32",
          "typeSimple": "number"
        },
        {
          "name": "CityID",
          "type": "System.Int32",
          "typeSimple": "number"
        },
        {
          "name": "Geolocation",
          "type": "System.String",
          "typeSimple": "string"
        },
        {
          "name": "ContactNo01",
          "type": "System.String",
          "typeSimple": "string"
        },
        {
          "name": "ContactNo02",
          "type": "System.String",
          "typeSimple": "string"
        }
      ]
    },
    "HDHDC.Speedwave.DTOs.StoreBranchUpdateDto": {
      "baseType": "Volo.Abp.Application.Dtos.EntityDto",
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Geolocation",
          "type": "System.String",
          "typeSimple": "string"
        },
        {
          "name": "ContactNo01",
          "type": "System.String",
          "typeSimple": "string"
        },
        {
          "name": "ContactNo02",
          "type": "System.String",
          "typeSimple": "string"
        }
      ]
    },
    "HDHDC.Speedwave.DTOs.StoreOpenDayDto": {
      "baseType": "Volo.Abp.Application.Dtos.EntityDto",
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "StoreBranchID",
          "type": "System.Int32",
          "typeSimple": "number"
        },
        {
          "name": "DayOfWeek",
          "type": "System.DayOfWeek",
          "typeSimple": "System.DayOfWeek"
        },
        {
          "name": "OpeningTime",
          "type": "System.TimeSpan",
          "typeSimple": "string"
        },
        {
          "name": "ClosingTime",
          "type": "System.TimeSpan",
          "typeSimple": "string"
        }
      ]
    },
    "System.DayOfWeek": {
      "baseType": "System.Enum",
      "isEnum": true,
      "enumNames": [
        "Sunday",
        "Monday",
        "Tuesday",
        "Wednesday",
        "Thursday",
        "Friday",
        "Saturday"
      ],
      "enumValues": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "genericArguments": null,
      "properties": null
    },
    "HDHDC.Speedwave.DTOs.StoreClosingDateDto": {
      "baseType": "Volo.Abp.Application.Dtos.EntityDto<System.Int32>",
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "StoreBranchID",
          "type": "System.Int32",
          "typeSimple": "number"
        },
        {
          "name": "ClosingDate",
          "type": "System.DateTime",
          "typeSimple": "string"
        }
      ]
    },
    "HDHDC.Speedwave.DTOs.ItemStoreBranchDto": {
      "baseType": "Volo.Abp.Application.Dtos.EntityDto",
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "ItemID",
          "type": "System.Int32",
          "typeSimple": "number"
        },
        {
          "name": "StoreBranchID",
          "type": "System.Int32",
          "typeSimple": "number"
        },
        {
          "name": "ItemDto",
          "type": "HDHDC.Speedwave.DTOs.ItemDto",
          "typeSimple": "HDHDC.Speedwave.DTOs.ItemDto"
        },
        {
          "name": "StoreBranchDto",
          "type": "HDHDC.Speedwave.DTOs.StoreBranchDto",
          "typeSimple": "HDHDC.Speedwave.DTOs.StoreBranchDto"
        }
      ]
    },
    "HDHDC.Speedwave.DTOs.StoreChainDto": {
      "baseType": "Volo.Abp.Application.Dtos.EntityDto<System.Int32>",
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "StoreChainName",
          "type": "System.String",
          "typeSimple": "string"
        },
        {
          "name": "StoreChainDescription",
          "type": "System.String",
          "typeSimple": "string"
        },
        {
          "name": "StoreChainLogo",
          "type": "System.String",
          "typeSimple": "string"
        }
      ]
    },
    "HDHDC.Speedwave.DTOs.StoreChainCreateDto": {
      "baseType": "Volo.Abp.Application.Dtos.EntityDto",
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "StoreChainName",
          "type": "System.String",
          "typeSimple": "string"
        },
        {
          "name": "StoreChainDescription",
          "type": "System.String",
          "typeSimple": "string"
        },
        {
          "name": "LogoBase64",
          "type": "System.String",
          "typeSimple": "string"
        }
      ]
    },
    "HDHDC.Speedwave.DTOs.StoreChainUpdateDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "StoreChainName",
          "type": "System.String",
          "typeSimple": "string"
        },
        {
          "name": "StoreChainDescription",
          "type": "System.String",
          "typeSimple": "string"
        },
        {
          "name": "LogoBase64",
          "type": "System.String",
          "typeSimple": "string"
        }
      ]
    },
    "HDHDC.Speedwave.DTOs.SubtotalPercentageDto": {
      "baseType": "Volo.Abp.Application.Dtos.EntityDto<System.Int32>",
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Percentage",
          "type": "System.UInt32",
          "typeSimple": "number"
        },
        {
          "name": "From",
          "type": "System.Single",
          "typeSimple": "number"
        }
      ]
    },
    "HDHDC.Speedwave.DTOs.SubtotalPercentageCreateUpdateDto": {
      "baseType": "Volo.Abp.Application.Dtos.EntityDto",
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Percentage",
          "type": "System.UInt32",
          "typeSimple": "number"
        },
        {
          "name": "From",
          "type": "System.Single",
          "typeSimple": "number"
        }
      ]
    },
    "HDHDC.Speedwave.DTOs.UnitDto": {
      "baseType": "Volo.Abp.Application.Dtos.EntityDto<System.String>",
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "UnitSymbol",
          "type": "System.String",
          "typeSimple": "string"
        }
      ]
    },
    "HDHDC.Speedwave.DTOs.PasswordResetDto": {
      "baseType": "Volo.Abp.Application.Dtos.EntityDto",
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "UserName",
          "type": "System.String",
          "typeSimple": "string"
        },
        {
          "name": "PasswordResetToken",
          "type": "System.String",
          "typeSimple": "string"
        },
        {
          "name": "NewPassword",
          "type": "System.String",
          "typeSimple": "string"
        }
      ]
    },
    "HDHDC.Speedwave.DTOs.AddressCreateDto": {
      "baseType": "Volo.Abp.Application.Dtos.EntityDto",
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "AddressLine",
          "type": "System.String",
          "typeSimple": "string"
        },
        {
          "name": "CityID",
          "type": "System.Int32",
          "typeSimple": "number"
        },
        {
          "name": "CustomerID",
          "type": "System.Int32",
          "typeSimple": "number"
        },
        {
          "name": "Geolocation",
          "type": "System.String",
          "typeSimple": "string"
        },
        {
          "name": "Note",
          "type": "System.String",
          "typeSimple": "string"
        }
      ]
    },
    "HDHDC.Speedwave.DTOs.AddressUpdateDto": {
      "baseType": "Volo.Abp.Application.Dtos.EntityDto<System.Int32>",
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "AddressLine",
          "type": "System.String",
          "typeSimple": "string"
        },
        {
          "name": "Geolocation",
          "type": "System.String",
          "typeSimple": "string"
        },
        {
          "name": "Note",
          "type": "System.String",
          "typeSimple": "string"
        }
      ]
    },
    "Volo.Abp.Account.Web.Areas.Account.Controllers.Models.UserLoginInfo": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "UserNameOrEmailAddress",
          "type": "System.String",
          "typeSimple": "string"
        },
        {
          "name": "Password",
          "type": "System.String",
          "typeSimple": "string"
        },
        {
          "name": "RememberMe",
          "type": "System.Boolean",
          "typeSimple": "boolean"
        }
      ]
    },
    "Volo.Abp.Account.Web.Areas.Account.Controllers.Models.AbpLoginResult": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Result",
          "type": "Volo.Abp.Account.Web.Areas.Account.Controllers.Models.LoginResultType",
          "typeSimple": "Volo.Abp.Account.Web.Areas.Account.Controllers.Models.LoginResultType"
        },
        {
          "name": "Description",
          "type": "System.String",
          "typeSimple": "string"
        }
      ]
    },
    "Volo.Abp.Account.Web.Areas.Account.Controllers.Models.LoginResultType": {
      "baseType": "System.Enum",
      "isEnum": true,
      "enumNames": [
        "Success",
        "InvalidUserNameOrPassword",
        "NotAllowed",
        "LockedOut",
        "RequiresTwoFactor"
      ],
      "enumValues": [
        1,
        2,
        3,
        4,
        5
      ],
      "genericArguments": null,
      "properties": null
    },
    "Volo.Abp.Account.RegisterDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "UserName",
          "type": "System.String",
          "typeSimple": "string"
        },
        {
          "name": "EmailAddress",
          "type": "System.String",
          "typeSimple": "string"
        },
        {
          "name": "Password",
          "type": "System.String",
          "typeSimple": "string"
        },
        {
          "name": "AppName",
          "type": "System.String",
          "typeSimple": "string"
        }
      ]
    },
    "Volo.Abp.Identity.IdentityUserDto": {
      "baseType": "Volo.Abp.Application.Dtos.ExtensibleFullAuditedEntityDto<System.Guid>",
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "TenantId",
          "type": "System.Guid?",
          "typeSimple": "string?"
        },
        {
          "name": "UserName",
          "type": "System.String",
          "typeSimple": "string"
        },
        {
          "name": "Name",
          "type": "System.String",
          "typeSimple": "string"
        },
        {
          "name": "Surname",
          "type": "System.String",
          "typeSimple": "string"
        },
        {
          "name": "Email",
          "type": "System.String",
          "typeSimple": "string"
        },
        {
          "name": "EmailConfirmed",
          "type": "System.Boolean",
          "typeSimple": "boolean"
        },
        {
          "name": "PhoneNumber",
          "type": "System.String",
          "typeSimple": "string"
        },
        {
          "name": "PhoneNumberConfirmed",
          "type": "System.Boolean",
          "typeSimple": "boolean"
        },
        {
          "name": "LockoutEnabled",
          "type": "System.Boolean",
          "typeSimple": "boolean"
        },
        {
          "name": "LockoutEnd",
          "type": "System.DateTimeOffset?",
          "typeSimple": "string?"
        },
        {
          "name": "ConcurrencyStamp",
          "type": "System.String",
          "typeSimple": "string"
        }
      ]
    },
    "Volo.Abp.Application.Dtos.ExtensibleFullAuditedEntityDto<T0>": {
      "baseType": "Volo.Abp.Application.Dtos.ExtensibleAuditedEntityDto<TPrimaryKey>",
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": [
        "TPrimaryKey"
      ],
      "properties": [
        {
          "name": "IsDeleted",
          "type": "System.Boolean",
          "typeSimple": "boolean"
        },
        {
          "name": "DeleterId",
          "type": "System.Guid?",
          "typeSimple": "string?"
        },
        {
          "name": "DeletionTime",
          "type": "System.DateTime?",
          "typeSimple": "string?"
        }
      ]
    },
    "Volo.Abp.Application.Dtos.ExtensibleAuditedEntityDto<T0>": {
      "baseType": "Volo.Abp.Application.Dtos.ExtensibleCreationAuditedEntityDto<TPrimaryKey>",
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": [
        "TPrimaryKey"
      ],
      "properties": [
        {
          "name": "LastModificationTime",
          "type": "System.DateTime?",
          "typeSimple": "string?"
        },
        {
          "name": "LastModifierId",
          "type": "System.Guid?",
          "typeSimple": "string?"
        }
      ]
    },
    "Volo.Abp.Application.Dtos.ExtensibleCreationAuditedEntityDto<T0>": {
      "baseType": "Volo.Abp.Application.Dtos.ExtensibleEntityDto<TPrimaryKey>",
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": [
        "TPrimaryKey"
      ],
      "properties": [
        {
          "name": "CreationTime",
          "type": "System.DateTime",
          "typeSimple": "string"
        },
        {
          "name": "CreatorId",
          "type": "System.Guid?",
          "typeSimple": "string?"
        }
      ]
    },
    "Volo.Abp.Application.Dtos.ExtensibleEntityDto<T0>": {
      "baseType": "Volo.Abp.ObjectExtending.ExtensibleObject",
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": [
        "TKey"
      ],
      "properties": [
        {
          "name": "Id",
          "type": "TKey",
          "typeSimple": "TKey"
        }
      ]
    },
    "Volo.Abp.ObjectExtending.ExtensibleObject": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "ExtraProperties",
          "type": "{System.String:System.Object}",
          "typeSimple": "{string:object}"
        }
      ]
    },
    "Volo.Abp.Account.SendPasswordResetCodeDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Email",
          "type": "System.String",
          "typeSimple": "string"
        },
        {
          "name": "AppName",
          "type": "System.String",
          "typeSimple": "string"
        },
        {
          "name": "ReturnUrl",
          "type": "System.String",
          "typeSimple": "string"
        },
        {
          "name": "ReturnUrlHash",
          "type": "System.String",
          "typeSimple": "string"
        }
      ]
    },
    "Volo.Abp.Account.ResetPasswordDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "UserId",
          "type": "System.Guid",
          "typeSimple": "string"
        },
        {
          "name": "ResetToken",
          "type": "System.String",
          "typeSimple": "string"
        },
        {
          "name": "Password",
          "type": "System.String",
          "typeSimple": "string"
        }
      ]
    },
    "Volo.Abp.AspNetCore.Mvc.MultiTenancy.FindTenantResultDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Success",
          "type": "System.Boolean",
          "typeSimple": "boolean"
        },
        {
          "name": "TenantId",
          "type": "System.Guid?",
          "typeSimple": "string?"
        },
        {
          "name": "Name",
          "type": "System.String",
          "typeSimple": "string"
        }
      ]
    },
    "Volo.Abp.Application.Dtos.ListResultDto<T0>": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": [
        "T"
      ],
      "properties": [
        {
          "name": "Items",
          "type": "[T]",
          "typeSimple": "[T]"
        }
      ]
    },
    "Volo.Abp.Identity.IdentityRoleDto": {
      "baseType": "Volo.Abp.Application.Dtos.ExtensibleEntityDto<System.Guid>",
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Name",
          "type": "System.String",
          "typeSimple": "string"
        },
        {
          "name": "IsDefault",
          "type": "System.Boolean",
          "typeSimple": "boolean"
        },
        {
          "name": "IsStatic",
          "type": "System.Boolean",
          "typeSimple": "boolean"
        },
        {
          "name": "IsPublic",
          "type": "System.Boolean",
          "typeSimple": "boolean"
        },
        {
          "name": "ConcurrencyStamp",
          "type": "System.String",
          "typeSimple": "string"
        }
      ]
    },
    "Volo.Abp.Application.Dtos.PagedAndSortedResultRequestDto": {
      "baseType": "Volo.Abp.Application.Dtos.PagedResultRequestDto",
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Sorting",
          "type": "System.String",
          "typeSimple": "string"
        }
      ]
    },
    "Volo.Abp.Application.Dtos.PagedResultRequestDto": {
      "baseType": "Volo.Abp.Application.Dtos.LimitedResultRequestDto",
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "SkipCount",
          "type": "System.Int32",
          "typeSimple": "number"
        }
      ]
    },
    "Volo.Abp.Application.Dtos.LimitedResultRequestDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "DefaultMaxResultCount",
          "type": "System.Int32",
          "typeSimple": "number"
        },
        {
          "name": "MaxMaxResultCount",
          "type": "System.Int32",
          "typeSimple": "number"
        },
        {
          "name": "MaxResultCount",
          "type": "System.Int32",
          "typeSimple": "number"
        }
      ]
    },
    "Volo.Abp.Application.Dtos.PagedResultDto<T0>": {
      "baseType": "Volo.Abp.Application.Dtos.ListResultDto<T>",
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": [
        "T"
      ],
      "properties": [
        {
          "name": "TotalCount",
          "type": "System.Int64",
          "typeSimple": "number"
        }
      ]
    },
    "Volo.Abp.Identity.IdentityRoleCreateDto": {
      "baseType": "Volo.Abp.Identity.IdentityRoleCreateOrUpdateDtoBase",
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": []
    },
    "Volo.Abp.Identity.IdentityRoleCreateOrUpdateDtoBase": {
      "baseType": "Volo.Abp.ObjectExtending.ExtensibleObject",
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Name",
          "type": "System.String",
          "typeSimple": "string"
        },
        {
          "name": "IsDefault",
          "type": "System.Boolean",
          "typeSimple": "boolean"
        },
        {
          "name": "IsPublic",
          "type": "System.Boolean",
          "typeSimple": "boolean"
        }
      ]
    },
    "Volo.Abp.Identity.IdentityRoleUpdateDto": {
      "baseType": "Volo.Abp.Identity.IdentityRoleCreateOrUpdateDtoBase",
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "ConcurrencyStamp",
          "type": "System.String",
          "typeSimple": "string"
        }
      ]
    },
    "Volo.Abp.Identity.GetIdentityUsersInput": {
      "baseType": "Volo.Abp.Application.Dtos.PagedAndSortedResultRequestDto",
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Filter",
          "type": "System.String",
          "typeSimple": "string"
        }
      ]
    },
    "Volo.Abp.Identity.IdentityUserCreateDto": {
      "baseType": "Volo.Abp.Identity.IdentityUserCreateOrUpdateDtoBase",
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Password",
          "type": "System.String",
          "typeSimple": "string"
        }
      ]
    },
    "Volo.Abp.Identity.IdentityUserCreateOrUpdateDtoBase": {
      "baseType": "Volo.Abp.ObjectExtending.ExtensibleObject",
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "UserName",
          "type": "System.String",
          "typeSimple": "string"
        },
        {
          "name": "Name",
          "type": "System.String",
          "typeSimple": "string"
        },
        {
          "name": "Surname",
          "type": "System.String",
          "typeSimple": "string"
        },
        {
          "name": "Email",
          "type": "System.String",
          "typeSimple": "string"
        },
        {
          "name": "PhoneNumber",
          "type": "System.String",
          "typeSimple": "string"
        },
        {
          "name": "LockoutEnabled",
          "type": "System.Boolean",
          "typeSimple": "boolean"
        },
        {
          "name": "RoleNames",
          "type": "[System.String]",
          "typeSimple": "[string]"
        }
      ]
    },
    "Volo.Abp.Identity.IdentityUserUpdateDto": {
      "baseType": "Volo.Abp.Identity.IdentityUserCreateOrUpdateDtoBase",
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Password",
          "type": "System.String",
          "typeSimple": "string"
        },
        {
          "name": "ConcurrencyStamp",
          "type": "System.String",
          "typeSimple": "string"
        }
      ]
    },
    "Volo.Abp.Identity.IdentityUserUpdateRolesDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "RoleNames",
          "type": "[System.String]",
          "typeSimple": "[string]"
        }
      ]
    },
    "Volo.Abp.Users.UserData": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Id",
          "type": "System.Guid",
          "typeSimple": "string"
        },
        {
          "name": "TenantId",
          "type": "System.Guid?",
          "typeSimple": "string?"
        },
        {
          "name": "UserName",
          "type": "System.String",
          "typeSimple": "string"
        },
        {
          "name": "Name",
          "type": "System.String",
          "typeSimple": "string"
        },
        {
          "name": "Surname",
          "type": "System.String",
          "typeSimple": "string"
        },
        {
          "name": "Email",
          "type": "System.String",
          "typeSimple": "string"
        },
        {
          "name": "EmailConfirmed",
          "type": "System.Boolean",
          "typeSimple": "boolean"
        },
        {
          "name": "PhoneNumber",
          "type": "System.String",
          "typeSimple": "string"
        },
        {
          "name": "PhoneNumberConfirmed",
          "type": "System.Boolean",
          "typeSimple": "boolean"
        }
      ]
    },
    "Volo.Abp.Identity.UserLookupSearchInputDto": {
      "baseType": "Volo.Abp.Application.Dtos.PagedAndSortedResultRequestDto",
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Filter",
          "type": "System.String",
          "typeSimple": "string"
        }
      ]
    },
    "Volo.Abp.Identity.UserLookupCountInputDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Filter",
          "type": "System.String",
          "typeSimple": "string"
        }
      ]
    },
    "Volo.Abp.Identity.ProfileDto": {
      "baseType": "Volo.Abp.ObjectExtending.ExtensibleObject",
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "UserName",
          "type": "System.String",
          "typeSimple": "string"
        },
        {
          "name": "Email",
          "type": "System.String",
          "typeSimple": "string"
        },
        {
          "name": "Name",
          "type": "System.String",
          "typeSimple": "string"
        },
        {
          "name": "Surname",
          "type": "System.String",
          "typeSimple": "string"
        },
        {
          "name": "PhoneNumber",
          "type": "System.String",
          "typeSimple": "string"
        },
        {
          "name": "IsExternal",
          "type": "System.Boolean",
          "typeSimple": "boolean"
        },
        {
          "name": "HasPassword",
          "type": "System.Boolean",
          "typeSimple": "boolean"
        }
      ]
    },
    "Volo.Abp.Identity.UpdateProfileDto": {
      "baseType": "Volo.Abp.ObjectExtending.ExtensibleObject",
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "UserName",
          "type": "System.String",
          "typeSimple": "string"
        },
        {
          "name": "Email",
          "type": "System.String",
          "typeSimple": "string"
        },
        {
          "name": "Name",
          "type": "System.String",
          "typeSimple": "string"
        },
        {
          "name": "Surname",
          "type": "System.String",
          "typeSimple": "string"
        },
        {
          "name": "PhoneNumber",
          "type": "System.String",
          "typeSimple": "string"
        }
      ]
    },
    "Volo.Abp.Identity.ChangePasswordInput": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "CurrentPassword",
          "type": "System.String",
          "typeSimple": "string"
        },
        {
          "name": "NewPassword",
          "type": "System.String",
          "typeSimple": "string"
        }
      ]
    },
    "Volo.Abp.PermissionManagement.GetPermissionListResultDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "EntityDisplayName",
          "type": "System.String",
          "typeSimple": "string"
        },
        {
          "name": "Groups",
          "type": "[Volo.Abp.PermissionManagement.PermissionGroupDto]",
          "typeSimple": "[Volo.Abp.PermissionManagement.PermissionGroupDto]"
        }
      ]
    },
    "Volo.Abp.PermissionManagement.PermissionGroupDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Name",
          "type": "System.String",
          "typeSimple": "string"
        },
        {
          "name": "DisplayName",
          "type": "System.String",
          "typeSimple": "string"
        },
        {
          "name": "Permissions",
          "type": "[Volo.Abp.PermissionManagement.PermissionGrantInfoDto]",
          "typeSimple": "[Volo.Abp.PermissionManagement.PermissionGrantInfoDto]"
        }
      ]
    },
    "Volo.Abp.PermissionManagement.PermissionGrantInfoDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Name",
          "type": "System.String",
          "typeSimple": "string"
        },
        {
          "name": "DisplayName",
          "type": "System.String",
          "typeSimple": "string"
        },
        {
          "name": "ParentName",
          "type": "System.String",
          "typeSimple": "string"
        },
        {
          "name": "IsGranted",
          "type": "System.Boolean",
          "typeSimple": "boolean"
        },
        {
          "name": "AllowedProviders",
          "type": "[System.String]",
          "typeSimple": "[string]"
        },
        {
          "name": "GrantedProviders",
          "type": "[Volo.Abp.PermissionManagement.ProviderInfoDto]",
          "typeSimple": "[Volo.Abp.PermissionManagement.ProviderInfoDto]"
        }
      ]
    },
    "Volo.Abp.PermissionManagement.ProviderInfoDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "ProviderName",
          "type": "System.String",
          "typeSimple": "string"
        },
        {
          "name": "ProviderKey",
          "type": "System.String",
          "typeSimple": "string"
        }
      ]
    },
    "Volo.Abp.PermissionManagement.UpdatePermissionsDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Permissions",
          "type": "[Volo.Abp.PermissionManagement.UpdatePermissionDto]",
          "typeSimple": "[Volo.Abp.PermissionManagement.UpdatePermissionDto]"
        }
      ]
    },
    "Volo.Abp.PermissionManagement.UpdatePermissionDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Name",
          "type": "System.String",
          "typeSimple": "string"
        },
        {
          "name": "IsGranted",
          "type": "System.Boolean",
          "typeSimple": "boolean"
        }
      ]
    },
    "Volo.Abp.TenantManagement.TenantDto": {
      "baseType": "Volo.Abp.Application.Dtos.ExtensibleEntityDto<System.Guid>",
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Name",
          "type": "System.String",
          "typeSimple": "string"
        }
      ]
    },
    "Volo.Abp.TenantManagement.GetTenantsInput": {
      "baseType": "Volo.Abp.Application.Dtos.PagedAndSortedResultRequestDto",
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Filter",
          "type": "System.String",
          "typeSimple": "string"
        }
      ]
    },
    "Volo.Abp.TenantManagement.TenantCreateDto": {
      "baseType": "Volo.Abp.TenantManagement.TenantCreateOrUpdateDtoBase",
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "AdminEmailAddress",
          "type": "System.String",
          "typeSimple": "string"
        },
        {
          "name": "AdminPassword",
          "type": "System.String",
          "typeSimple": "string"
        }
      ]
    },
    "Volo.Abp.TenantManagement.TenantCreateOrUpdateDtoBase": {
      "baseType": "Volo.Abp.ObjectExtending.ExtensibleObject",
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Name",
          "type": "System.String",
          "typeSimple": "string"
        }
      ]
    },
    "Volo.Abp.TenantManagement.TenantUpdateDto": {
      "baseType": "Volo.Abp.TenantManagement.TenantCreateOrUpdateDtoBase",
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": []
    },
    "Volo.Abp.FeatureManagement.GetFeatureListResultDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Groups",
          "type": "[Volo.Abp.FeatureManagement.FeatureGroupDto]",
          "typeSimple": "[Volo.Abp.FeatureManagement.FeatureGroupDto]"
        }
      ]
    },
    "Volo.Abp.FeatureManagement.FeatureGroupDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Name",
          "type": "System.String",
          "typeSimple": "string"
        },
        {
          "name": "DisplayName",
          "type": "System.String",
          "typeSimple": "string"
        },
        {
          "name": "Features",
          "type": "[Volo.Abp.FeatureManagement.FeatureDto]",
          "typeSimple": "[Volo.Abp.FeatureManagement.FeatureDto]"
        }
      ]
    },
    "Volo.Abp.FeatureManagement.FeatureDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Name",
          "type": "System.String",
          "typeSimple": "string"
        },
        {
          "name": "DisplayName",
          "type": "System.String",
          "typeSimple": "string"
        },
        {
          "name": "Value",
          "type": "System.String",
          "typeSimple": "string"
        },
        {
          "name": "Provider",
          "type": "Volo.Abp.FeatureManagement.FeatureProviderDto",
          "typeSimple": "Volo.Abp.FeatureManagement.FeatureProviderDto"
        },
        {
          "name": "Description",
          "type": "System.String",
          "typeSimple": "string"
        },
        {
          "name": "ValueType",
          "type": "Volo.Abp.Validation.StringValues.IStringValueType",
          "typeSimple": "Volo.Abp.Validation.StringValues.IStringValueType"
        },
        {
          "name": "Depth",
          "type": "System.Int32",
          "typeSimple": "number"
        },
        {
          "name": "ParentName",
          "type": "System.String",
          "typeSimple": "string"
        }
      ]
    },
    "Volo.Abp.FeatureManagement.FeatureProviderDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Name",
          "type": "System.String",
          "typeSimple": "string"
        },
        {
          "name": "Key",
          "type": "System.String",
          "typeSimple": "string"
        }
      ]
    },
    "Volo.Abp.Validation.StringValues.IStringValueType": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Name",
          "type": "System.String",
          "typeSimple": "string"
        },
        {
          "name": "Item",
          "type": "System.Object",
          "typeSimple": "object"
        },
        {
          "name": "Properties",
          "type": "{System.String:System.Object}",
          "typeSimple": "{string:object}"
        },
        {
          "name": "Validator",
          "type": "Volo.Abp.Validation.StringValues.IValueValidator",
          "typeSimple": "Volo.Abp.Validation.StringValues.IValueValidator"
        }
      ]
    },
    "Volo.Abp.Validation.StringValues.IValueValidator": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Name",
          "type": "System.String",
          "typeSimple": "string"
        },
        {
          "name": "Item",
          "type": "System.Object",
          "typeSimple": "object"
        },
        {
          "name": "Properties",
          "type": "{System.String:System.Object}",
          "typeSimple": "{string:object}"
        }
      ]
    },
    "Volo.Abp.FeatureManagement.UpdateFeaturesDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Features",
          "type": "[Volo.Abp.FeatureManagement.UpdateFeatureDto]",
          "typeSimple": "[Volo.Abp.FeatureManagement.UpdateFeatureDto]"
        }
      ]
    },
    "Volo.Abp.FeatureManagement.UpdateFeatureDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Name",
          "type": "System.String",
          "typeSimple": "string"
        },
        {
          "name": "Value",
          "type": "System.String",
          "typeSimple": "string"
        }
      ]
    },
    "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ApplicationConfigurationDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Localization",
          "type": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ApplicationLocalizationConfigurationDto",
          "typeSimple": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ApplicationLocalizationConfigurationDto"
        },
        {
          "name": "Auth",
          "type": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ApplicationAuthConfigurationDto",
          "typeSimple": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ApplicationAuthConfigurationDto"
        },
        {
          "name": "Setting",
          "type": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ApplicationSettingConfigurationDto",
          "typeSimple": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ApplicationSettingConfigurationDto"
        },
        {
          "name": "CurrentUser",
          "type": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.CurrentUserDto",
          "typeSimple": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.CurrentUserDto"
        },
        {
          "name": "Features",
          "type": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ApplicationFeatureConfigurationDto",
          "typeSimple": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ApplicationFeatureConfigurationDto"
        },
        {
          "name": "MultiTenancy",
          "type": "Volo.Abp.AspNetCore.Mvc.MultiTenancy.MultiTenancyInfoDto",
          "typeSimple": "Volo.Abp.AspNetCore.Mvc.MultiTenancy.MultiTenancyInfoDto"
        },
        {
          "name": "CurrentTenant",
          "type": "Volo.Abp.AspNetCore.Mvc.MultiTenancy.CurrentTenantDto",
          "typeSimple": "Volo.Abp.AspNetCore.Mvc.MultiTenancy.CurrentTenantDto"
        },
        {
          "name": "Timing",
          "type": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.TimingDto",
          "typeSimple": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.TimingDto"
        },
        {
          "name": "Clock",
          "type": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ClockDto",
          "typeSimple": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ClockDto"
        },
        {
          "name": "ObjectExtensions",
          "type": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ObjectExtensionsDto",
          "typeSimple": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ObjectExtensionsDto"
        }
      ]
    },
    "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ApplicationLocalizationConfigurationDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Values",
          "type": "{System.String:{System.String:System.String}}",
          "typeSimple": "{string:{string:string}}"
        },
        {
          "name": "Languages",
          "type": "[Volo.Abp.Localization.LanguageInfo]",
          "typeSimple": "[Volo.Abp.Localization.LanguageInfo]"
        },
        {
          "name": "CurrentCulture",
          "type": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.CurrentCultureDto",
          "typeSimple": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.CurrentCultureDto"
        },
        {
          "name": "DefaultResourceName",
          "type": "System.String",
          "typeSimple": "string"
        },
        {
          "name": "LanguagesMap",
          "type": "{System.String:[Volo.Abp.NameValue]}",
          "typeSimple": "{string:[Volo.Abp.NameValue]}"
        },
        {
          "name": "LanguageFilesMap",
          "type": "{System.String:[Volo.Abp.NameValue]}",
          "typeSimple": "{string:[Volo.Abp.NameValue]}"
        }
      ]
    },
    "Volo.Abp.Localization.LanguageInfo": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "CultureName",
          "type": "System.String",
          "typeSimple": "string"
        },
        {
          "name": "UiCultureName",
          "type": "System.String",
          "typeSimple": "string"
        },
        {
          "name": "DisplayName",
          "type": "System.String",
          "typeSimple": "string"
        },
        {
          "name": "FlagIcon",
          "type": "System.String",
          "typeSimple": "string"
        }
      ]
    },
    "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.CurrentCultureDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "DisplayName",
          "type": "System.String",
          "typeSimple": "string"
        },
        {
          "name": "EnglishName",
          "type": "System.String",
          "typeSimple": "string"
        },
        {
          "name": "ThreeLetterIsoLanguageName",
          "type": "System.String",
          "typeSimple": "string"
        },
        {
          "name": "TwoLetterIsoLanguageName",
          "type": "System.String",
          "typeSimple": "string"
        },
        {
          "name": "IsRightToLeft",
          "type": "System.Boolean",
          "typeSimple": "boolean"
        },
        {
          "name": "CultureName",
          "type": "System.String",
          "typeSimple": "string"
        },
        {
          "name": "Name",
          "type": "System.String",
          "typeSimple": "string"
        },
        {
          "name": "NativeName",
          "type": "System.String",
          "typeSimple": "string"
        },
        {
          "name": "DateTimeFormat",
          "type": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.DateTimeFormatDto",
          "typeSimple": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.DateTimeFormatDto"
        }
      ]
    },
    "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.DateTimeFormatDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "CalendarAlgorithmType",
          "type": "System.String",
          "typeSimple": "string"
        },
        {
          "name": "DateTimeFormatLong",
          "type": "System.String",
          "typeSimple": "string"
        },
        {
          "name": "ShortDatePattern",
          "type": "System.String",
          "typeSimple": "string"
        },
        {
          "name": "FullDateTimePattern",
          "type": "System.String",
          "typeSimple": "string"
        },
        {
          "name": "DateSeparator",
          "type": "System.String",
          "typeSimple": "string"
        },
        {
          "name": "ShortTimePattern",
          "type": "System.String",
          "typeSimple": "string"
        },
        {
          "name": "LongTimePattern",
          "type": "System.String",
          "typeSimple": "string"
        }
      ]
    },
    "Volo.Abp.NameValue": {
      "baseType": "Volo.Abp.NameValue<System.String>",
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": []
    },
    "Volo.Abp.NameValue<T0>": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": [
        "T"
      ],
      "properties": [
        {
          "name": "Name",
          "type": "System.String",
          "typeSimple": "string"
        },
        {
          "name": "Value",
          "type": "T",
          "typeSimple": "T"
        }
      ]
    },
    "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ApplicationAuthConfigurationDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Policies",
          "type": "{System.String:System.Boolean}",
          "typeSimple": "{string:boolean}"
        },
        {
          "name": "GrantedPolicies",
          "type": "{System.String:System.Boolean}",
          "typeSimple": "{string:boolean}"
        }
      ]
    },
    "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ApplicationSettingConfigurationDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Values",
          "type": "{System.String:System.String}",
          "typeSimple": "{string:string}"
        }
      ]
    },
    "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.CurrentUserDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "IsAuthenticated",
          "type": "System.Boolean",
          "typeSimple": "boolean"
        },
        {
          "name": "Id",
          "type": "System.Guid?",
          "typeSimple": "string?"
        },
        {
          "name": "TenantId",
          "type": "System.Guid?",
          "typeSimple": "string?"
        },
        {
          "name": "UserName",
          "type": "System.String",
          "typeSimple": "string"
        },
        {
          "name": "Name",
          "type": "System.String",
          "typeSimple": "string"
        },
        {
          "name": "SurName",
          "type": "System.String",
          "typeSimple": "string"
        },
        {
          "name": "Email",
          "type": "System.String",
          "typeSimple": "string"
        },
        {
          "name": "EmailVerified",
          "type": "System.Boolean",
          "typeSimple": "boolean"
        },
        {
          "name": "PhoneNumber",
          "type": "System.String",
          "typeSimple": "string"
        },
        {
          "name": "PhoneNumberVerified",
          "type": "System.Boolean",
          "typeSimple": "boolean"
        },
        {
          "name": "Roles",
          "type": "[System.String]",
          "typeSimple": "[string]"
        }
      ]
    },
    "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ApplicationFeatureConfigurationDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Values",
          "type": "{System.String:System.String}",
          "typeSimple": "{string:string}"
        }
      ]
    },
    "Volo.Abp.AspNetCore.Mvc.MultiTenancy.MultiTenancyInfoDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "IsEnabled",
          "type": "System.Boolean",
          "typeSimple": "boolean"
        }
      ]
    },
    "Volo.Abp.AspNetCore.Mvc.MultiTenancy.CurrentTenantDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Id",
          "type": "System.Guid?",
          "typeSimple": "string?"
        },
        {
          "name": "Name",
          "type": "System.String",
          "typeSimple": "string"
        },
        {
          "name": "IsAvailable",
          "type": "System.Boolean",
          "typeSimple": "boolean"
        }
      ]
    },
    "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.TimingDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "TimeZone",
          "type": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.TimeZone",
          "typeSimple": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.TimeZone"
        }
      ]
    },
    "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.TimeZone": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Iana",
          "type": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.IanaTimeZone",
          "typeSimple": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.IanaTimeZone"
        },
        {
          "name": "Windows",
          "type": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.WindowsTimeZone",
          "typeSimple": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.WindowsTimeZone"
        }
      ]
    },
    "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.IanaTimeZone": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "TimeZoneName",
          "type": "System.String",
          "typeSimple": "string"
        }
      ]
    },
    "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.WindowsTimeZone": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "TimeZoneId",
          "type": "System.String",
          "typeSimple": "string"
        }
      ]
    },
    "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ClockDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Kind",
          "type": "System.String",
          "typeSimple": "string"
        }
      ]
    },
    "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ObjectExtensionsDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Modules",
          "type": "{System.String:Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ModuleExtensionDto}",
          "typeSimple": "{string:Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ModuleExtensionDto}"
        },
        {
          "name": "Enums",
          "type": "{System.String:Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ExtensionEnumDto}",
          "typeSimple": "{string:Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ExtensionEnumDto}"
        }
      ]
    },
    "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ModuleExtensionDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Entities",
          "type": "{System.String:Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.EntityExtensionDto}",
          "typeSimple": "{string:Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.EntityExtensionDto}"
        },
        {
          "name": "Configuration",
          "type": "{System.String:System.Object}",
          "typeSimple": "{string:object}"
        }
      ]
    },
    "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.EntityExtensionDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Properties",
          "type": "{System.String:Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ExtensionPropertyDto}",
          "typeSimple": "{string:Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ExtensionPropertyDto}"
        },
        {
          "name": "Configuration",
          "type": "{System.String:System.Object}",
          "typeSimple": "{string:object}"
        }
      ]
    },
    "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ExtensionPropertyDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Type",
          "type": "System.String",
          "typeSimple": "string"
        },
        {
          "name": "TypeSimple",
          "type": "System.String",
          "typeSimple": "string"
        },
        {
          "name": "DisplayName",
          "type": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.LocalizableStringDto",
          "typeSimple": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.LocalizableStringDto"
        },
        {
          "name": "Api",
          "type": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ExtensionPropertyApiDto",
          "typeSimple": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ExtensionPropertyApiDto"
        },
        {
          "name": "Ui",
          "type": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ExtensionPropertyUiDto",
          "typeSimple": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ExtensionPropertyUiDto"
        },
        {
          "name": "Attributes",
          "type": "[Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ExtensionPropertyAttributeDto]",
          "typeSimple": "[Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ExtensionPropertyAttributeDto]"
        },
        {
          "name": "Configuration",
          "type": "{System.String:System.Object}",
          "typeSimple": "{string:object}"
        },
        {
          "name": "DefaultValue",
          "type": "System.Object",
          "typeSimple": "object"
        }
      ]
    },
    "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.LocalizableStringDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Name",
          "type": "System.String",
          "typeSimple": "string"
        },
        {
          "name": "Resource",
          "type": "System.String",
          "typeSimple": "string"
        }
      ]
    },
    "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ExtensionPropertyApiDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "OnGet",
          "type": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ExtensionPropertyApiGetDto",
          "typeSimple": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ExtensionPropertyApiGetDto"
        },
        {
          "name": "OnCreate",
          "type": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ExtensionPropertyApiCreateDto",
          "typeSimple": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ExtensionPropertyApiCreateDto"
        },
        {
          "name": "OnUpdate",
          "type": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ExtensionPropertyApiUpdateDto",
          "typeSimple": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ExtensionPropertyApiUpdateDto"
        }
      ]
    },
    "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ExtensionPropertyApiGetDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "IsAvailable",
          "type": "System.Boolean",
          "typeSimple": "boolean"
        }
      ]
    },
    "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ExtensionPropertyApiCreateDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "IsAvailable",
          "type": "System.Boolean",
          "typeSimple": "boolean"
        }
      ]
    },
    "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ExtensionPropertyApiUpdateDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "IsAvailable",
          "type": "System.Boolean",
          "typeSimple": "boolean"
        }
      ]
    },
    "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ExtensionPropertyUiDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "OnTable",
          "type": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ExtensionPropertyUiTableDto",
          "typeSimple": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ExtensionPropertyUiTableDto"
        },
        {
          "name": "OnCreateForm",
          "type": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ExtensionPropertyUiFormDto",
          "typeSimple": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ExtensionPropertyUiFormDto"
        },
        {
          "name": "OnEditForm",
          "type": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ExtensionPropertyUiFormDto",
          "typeSimple": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ExtensionPropertyUiFormDto"
        }
      ]
    },
    "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ExtensionPropertyUiTableDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "IsVisible",
          "type": "System.Boolean",
          "typeSimple": "boolean"
        }
      ]
    },
    "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ExtensionPropertyUiFormDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "IsVisible",
          "type": "System.Boolean",
          "typeSimple": "boolean"
        }
      ]
    },
    "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ExtensionPropertyAttributeDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "TypeSimple",
          "type": "System.String",
          "typeSimple": "string"
        },
        {
          "name": "Config",
          "type": "{System.String:System.Object}",
          "typeSimple": "{string:object}"
        }
      ]
    },
    "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ExtensionEnumDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Fields",
          "type": "[Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ExtensionEnumFieldDto]",
          "typeSimple": "[Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ExtensionEnumFieldDto]"
        },
        {
          "name": "LocalizationResource",
          "type": "System.String",
          "typeSimple": "string"
        }
      ]
    },
    "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ExtensionEnumFieldDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Name",
          "type": "System.String",
          "typeSimple": "string"
        },
        {
          "name": "Value",
          "type": "System.Object",
          "typeSimple": "object"
        }
      ]
    },
    "Volo.Abp.Http.Modeling.ApplicationApiDescriptionModelRequestDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "IncludeTypes",
          "type": "System.Boolean",
          "typeSimple": "boolean"
        }
      ]
    },
    "Volo.Abp.Http.Modeling.ApplicationApiDescriptionModel": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Modules",
          "type": "{System.String:Volo.Abp.Http.Modeling.ModuleApiDescriptionModel}",
          "typeSimple": "{string:Volo.Abp.Http.Modeling.ModuleApiDescriptionModel}"
        },
        {
          "name": "Types",
          "type": "{System.String:Volo.Abp.Http.Modeling.TypeApiDescriptionModel}",
          "typeSimple": "{string:Volo.Abp.Http.Modeling.TypeApiDescriptionModel}"
        }
      ]
    },
    "Volo.Abp.Http.Modeling.ModuleApiDescriptionModel": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "RootPath",
          "type": "System.String",
          "typeSimple": "string"
        },
        {
          "name": "RemoteServiceName",
          "type": "System.String",
          "typeSimple": "string"
        },
        {
          "name": "Controllers",
          "type": "{System.String:Volo.Abp.Http.Modeling.ControllerApiDescriptionModel}",
          "typeSimple": "{string:Volo.Abp.Http.Modeling.ControllerApiDescriptionModel}"
        }
      ]
    },
    "Volo.Abp.Http.Modeling.ControllerApiDescriptionModel": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "ControllerName",
          "type": "System.String",
          "typeSimple": "string"
        },
        {
          "name": "Type",
          "type": "System.String",
          "typeSimple": "string"
        },
        {
          "name": "Interfaces",
          "type": "[Volo.Abp.Http.Modeling.ControllerInterfaceApiDescriptionModel]",
          "typeSimple": "[Volo.Abp.Http.Modeling.ControllerInterfaceApiDescriptionModel]"
        },
        {
          "name": "Actions",
          "type": "{System.String:Volo.Abp.Http.Modeling.ActionApiDescriptionModel}",
          "typeSimple": "{string:Volo.Abp.Http.Modeling.ActionApiDescriptionModel}"
        }
      ]
    },
    "Volo.Abp.Http.Modeling.ControllerInterfaceApiDescriptionModel": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Type",
          "type": "System.String",
          "typeSimple": "string"
        }
      ]
    },
    "Volo.Abp.Http.Modeling.ActionApiDescriptionModel": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "UniqueName",
          "type": "System.String",
          "typeSimple": "string"
        },
        {
          "name": "Name",
          "type": "System.String",
          "typeSimple": "string"
        },
        {
          "name": "HttpMethod",
          "type": "System.String",
          "typeSimple": "string"
        },
        {
          "name": "Url",
          "type": "System.String",
          "typeSimple": "string"
        },
        {
          "name": "SupportedVersions",
          "type": "[System.String]",
          "typeSimple": "[string]"
        },
        {
          "name": "ParametersOnMethod",
          "type": "[Volo.Abp.Http.Modeling.MethodParameterApiDescriptionModel]",
          "typeSimple": "[Volo.Abp.Http.Modeling.MethodParameterApiDescriptionModel]"
        },
        {
          "name": "Parameters",
          "type": "[Volo.Abp.Http.Modeling.ParameterApiDescriptionModel]",
          "typeSimple": "[Volo.Abp.Http.Modeling.ParameterApiDescriptionModel]"
        },
        {
          "name": "ReturnValue",
          "type": "Volo.Abp.Http.Modeling.ReturnValueApiDescriptionModel",
          "typeSimple": "Volo.Abp.Http.Modeling.ReturnValueApiDescriptionModel"
        }
      ]
    },
    "Volo.Abp.Http.Modeling.MethodParameterApiDescriptionModel": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Name",
          "type": "System.String",
          "typeSimple": "string"
        },
        {
          "name": "TypeAsString",
          "type": "System.String",
          "typeSimple": "string"
        },
        {
          "name": "Type",
          "type": "System.String",
          "typeSimple": "string"
        },
        {
          "name": "TypeSimple",
          "type": "System.String",
          "typeSimple": "string"
        },
        {
          "name": "IsOptional",
          "type": "System.Boolean",
          "typeSimple": "boolean"
        },
        {
          "name": "DefaultValue",
          "type": "System.Object",
          "typeSimple": "object"
        }
      ]
    },
    "Volo.Abp.Http.Modeling.ParameterApiDescriptionModel": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "NameOnMethod",
          "type": "System.String",
          "typeSimple": "string"
        },
        {
          "name": "Name",
          "type": "System.String",
          "typeSimple": "string"
        },
        {
          "name": "Type",
          "type": "System.String",
          "typeSimple": "string"
        },
        {
          "name": "TypeSimple",
          "type": "System.String",
          "typeSimple": "string"
        },
        {
          "name": "IsOptional",
          "type": "System.Boolean",
          "typeSimple": "boolean"
        },
        {
          "name": "DefaultValue",
          "type": "System.Object",
          "typeSimple": "object"
        },
        {
          "name": "ConstraintTypes",
          "type": "[System.String]",
          "typeSimple": "[string]"
        },
        {
          "name": "BindingSourceId",
          "type": "System.String",
          "typeSimple": "string"
        },
        {
          "name": "DescriptorName",
          "type": "System.String",
          "typeSimple": "string"
        }
      ]
    },
    "Volo.Abp.Http.Modeling.ReturnValueApiDescriptionModel": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Type",
          "type": "System.String",
          "typeSimple": "string"
        },
        {
          "name": "TypeSimple",
          "type": "System.String",
          "typeSimple": "string"
        }
      ]
    },
    "Volo.Abp.Http.Modeling.TypeApiDescriptionModel": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "BaseType",
          "type": "System.String",
          "typeSimple": "string"
        },
        {
          "name": "IsEnum",
          "type": "System.Boolean",
          "typeSimple": "boolean"
        },
        {
          "name": "EnumNames",
          "type": "[System.String]",
          "typeSimple": "[string]"
        },
        {
          "name": "EnumValues",
          "type": "[System.Object]",
          "typeSimple": "[object]"
        },
        {
          "name": "GenericArguments",
          "type": "[System.String]",
          "typeSimple": "[string]"
        },
        {
          "name": "Properties",
          "type": "[Volo.Abp.Http.Modeling.PropertyApiDescriptionModel]",
          "typeSimple": "[Volo.Abp.Http.Modeling.PropertyApiDescriptionModel]"
        }
      ]
    },
    "Volo.Abp.Http.Modeling.PropertyApiDescriptionModel": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Name",
          "type": "System.String",
          "typeSimple": "string"
        },
        {
          "name": "Type",
          "type": "System.String",
          "typeSimple": "string"
        },
        {
          "name": "TypeSimple",
          "type": "System.String",
          "typeSimple": "string"
        }
      ]
    }
  }
}